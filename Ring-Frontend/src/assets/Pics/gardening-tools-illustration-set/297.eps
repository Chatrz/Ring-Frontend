%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Gardening tools illustration set.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 4/1/2019
%%BoundingBox: 0 0 870 850
%%HiResBoundingBox: 0 0 870 850
%%CropBox: 0 0 870 850
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Gardening tools illustration set</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Gardening tools illustration set. Spade, rake, hose, cart. Gardening concept. Can be used for topics like farming, orchard, agriculture</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>banner</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>image</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>label</rdf:li>
               <rdf:li>poster</rdf:li>
               <rdf:li>realistic</rdf:li>
               <rdf:li>sign</rdf:li>
               <rdf:li>style</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>white</rdf:li>
               <rdf:li>object</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>group</rdf:li>
               <rdf:li>collection</rdf:li>
               <rdf:li>gardening</rdf:li>
               <rdf:li>farming</rdf:li>
               <rdf:li>orchard</rdf:li>
               <rdf:li>agriculture</rdf:li>
               <rdf:li>tool</rdf:li>
               <rdf:li>instrument</rdf:li>
               <rdf:li>attribute</rdf:li>
               <rdf:li>spade</rdf:li>
               <rdf:li>rake</rdf:li>
               <rdf:li>plant</rdf:li>
               <rdf:li>green</rdf:li>
               <rdf:li>glove</rdf:li>
               <rdf:li>cart</rdf:li>
               <rdf:li>watering</rdf:li>
               <rdf:li>hose</rdf:li>
               <rdf:li>pot</rdf:li>
               <rdf:li>cart</rdf:li>
               <rdf:li>trolley</rdf:li>
               <rdf:li>shovel</rdf:li>
               <rdf:li>grass</rdf:li>
               <rdf:li>lawn</rdf:li>
               <rdf:li>cutter</rdf:li>
               <rdf:li>trimmer</rdf:li>
               <rdf:li>mower</rdf:li>
               <rdf:li>rubber</rdf:li>
               <rdf:li>boot</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-04-01T00:41:35+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-04-01T00:41:36+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-04-01T00:41:36+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>252</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA/AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqgl1vSmbityhb1Zbem/8AewKWlT5qqknJcJTRWprukPF6&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:27A4A5AFFD53E911B1FFE95781F30BEA</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:27A4A5AFFD53E911B1FFE95781F30BEA</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:40c7cd5d-1883-da4d-96dd-fc1388a44873</stRef:instanceID>
            <stRef:documentID>xmp.did:f3874607-909a-b64c-9981-47681ff8c264</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:281e624f-6d0c-3b40-a57b-c50a755ca9ad</stEvt:instanceID>
                  <stEvt:when>2019-03-05T17:01:45+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bf097b3e-632a-3a45-b19d-dc47b108dcb8</stEvt:instanceID>
                  <stEvt:when>2019-03-11T15:13:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:615b7d76-d4f5-e141-bb9e-9dcc49990ecf</stEvt:instanceID>
                  <stEvt:when>2019-03-11T19:29:47+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5524fa0c-f079-0949-be38-f2cd487d5aa4</stEvt:instanceID>
                  <stEvt:when>2019-03-11T19:31:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2654bf11-1ba0-3c4e-83a0-1b397d46d392</stEvt:instanceID>
                  <stEvt:when>2019-03-13T23:59:03+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f3874607-909a-b64c-9981-47681ff8c264</stEvt:instanceID>
                  <stEvt:when>2019-03-14T00:01:01+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:40c7cd5d-1883-da4d-96dd-fc1388a44873</stEvt:instanceID>
                  <stEvt:when>2019-03-25T21:52:08+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:27A4A5AFFD53E911B1FFE95781F30BEA</stEvt:instanceID>
                  <stEvt:when>2019-04-01T00:41:36+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>870.000000</stDim:w>
            <stDim:h>850.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -850 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 850 li
870 850 li
870 0 li
cp
clp
870 850 mo
0 850 li
0 0 li
870 0 li
870 850 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
137.739 315.974 mo
137.739 315.974 li
121.678 315.974 108.657 302.954 108.657 286.892 cv
108.657 246.833 li
166.821 246.833 li
166.821 286.892 li
166.821 302.954 153.801 315.974 137.739 315.974 cv
cp
.478431 .345098 .537255 rgb
f
137.739 314.376 mo
137.739 314.376 li
121.678 314.376 108.657 301.356 108.657 285.294 cv
108.657 286.892 li
108.657 302.954 121.678 315.974 137.739 315.974 cv
153.801 315.974 166.821 302.954 166.821 286.892 cv
166.821 285.294 li
166.821 301.356 153.801 314.376 137.739 314.376 cv
cp
.721569 .572549 .8 rgb
f
108.238 246.417 mo
108.471 276.97 108.329 260.575 108.657 286.892 cv
108.699 282.91 108.505 301.456 109.07 247.25 cv
112.054 247.25 93.8188 247.25 166.407 247.25 cv
166.449 251.233 166.255 232.686 166.821 286.892 cv
167.153 260.146 166.998 278.273 167.241 246.417 cv
167.241 246.417 112.599 246.406 108.238 246.417 cv
cp
.270588 .152941 .329412 rgb
f
155.598 95.2793 mo
118.16 95.2793 li
118.16 86.6777 li
155.598 86.6777 li
155.598 95.2793 li
cp
.376471 .121569 .0862745 rgb
f
155.598 95.2793 mo
118.16 95.2793 li
118.16 92.3149 li
155.598 92.3149 li
155.598 95.2793 li
cp
.239216 .0666667 .0470588 rgb
f
137.166 228.974 mo
137.166 228.974 li
135.003 228.974 133.233 227.205 133.233 225.042 cv
133.233 139.517 li
133.233 137.354 135.003 135.584 137.166 135.584 cv
139.328 135.584 141.098 137.354 141.098 139.517 cv
141.098 225.042 li
141.098 227.205 139.328 228.974 137.166 228.974 cv
cp
.839216 .423529 .0117647 rgb
f
138.988 228.974 mo
138.988 228.974 li
137.828 228.974 136.879 228.025 136.879 226.864 cv
136.879 137.694 li
136.879 136.534 137.828 135.584 138.988 135.584 cv
140.148 135.584 141.098 136.534 141.098 137.694 cv
141.098 226.864 li
141.098 228.025 140.148 228.974 138.988 228.974 cv
cp
.827451 .34902 .0196078 rgb
f
137.166 128.129 mo
124.671 128.129 114.883 109.921 114.883 86.6777 cv
120.782 86.6777 li
120.782 107.945 129.253 122.231 137.166 122.231 cv
145.078 122.231 153.55 107.945 153.55 86.6777 cv
159.448 86.6777 li
159.448 109.921 149.661 128.129 137.166 128.129 cv
cp
.898039 .552941 0 rgb
f
143.474 249.618 mo
131.431 249.618 li
131.431 214.474 li
143.474 214.474 li
143.474 249.618 li
cp
.380392 .262745 .419608 rgb
f
143.477 214.479 mo
143.477 249.622 li
131.435 249.622 li
131.435 245.936 li
142.297 243.173 139.043 220.416 138.001 214.479 cv
143.477 214.479 li
cp
.278431 .180392 .317647 rgb
f
142.327 142.138 mo
132.004 142.138 li
132.004 120.086 li
142.327 120.086 li
142.327 142.138 li
cp
.380392 .262745 .419608 rgb
f
142.327 142.138 mo
132.004 142.138 li
132.004 120.086 li
142.327 120.086 li
142.327 142.138 li
cp
f
142.04 120.086 mo
142.04 141.888 li
132.004 141.888 li
132.004 142.138 li
142.327 142.138 li
142.327 120.086 li
142.04 120.086 li
cp
.290196 .196078 .329412 rgb
f
137.452 264.773 mo
137.452 264.773 li
132.86 264.773 129.137 261.051 129.137 256.458 cv
129.137 246.413 li
145.767 246.413 li
145.767 256.458 li
145.767 261.051 142.044 264.773 137.452 264.773 cv
cp
.380392 .262745 .419608 rgb
f
145.767 246.413 mo
145.993 249.276 146.055 252.345 146.115 255.076 cv
146.114 256.631 146.477 260.332 142.957 263.062 cv
141.262 264.369 139.286 264.916 137.452 264.773 cv
141.562 264.423 144.607 261.536 145.263 257.89 cv
145.547 256.569 145.314 252.146 145.767 246.413 cv
cp
.278431 .180392 .317647 rgb
f
343.244 291.172 mo
320.357 291.172 li
323.306 270.421 li
340.294 270.421 li
343.244 291.172 li
cp
.403922 .25098 .486275 rgb
f
349.767 101.771 mo
312.329 101.771 li
312.329 92.7759 li
349.767 92.7759 li
349.767 101.771 li
cp
.376471 .121569 .0862745 rgb
f
349.767 101.771 mo
312.329 101.771 li
312.329 98.6709 li
349.767 98.6709 li
349.767 101.771 li
cp
.239216 .0666667 .0470588 rgb
f
331.334 241.587 mo
331.334 241.587 li
329.172 241.587 327.402 239.817 327.402 237.655 cv
327.402 147.854 li
327.402 145.691 329.172 143.921 331.334 143.921 cv
333.497 143.921 335.267 145.691 335.267 147.854 cv
335.267 237.655 li
335.267 239.817 333.497 241.587 331.334 241.587 cv
cp
.839216 .423529 .0117647 rgb
f
333.157 241.587 mo
333.157 241.587 li
331.997 241.587 331.048 240.638 331.048 239.478 cv
331.048 146.031 li
331.048 144.871 331.997 143.921 333.157 143.921 cv
334.317 143.921 335.267 144.871 335.267 146.031 cv
335.267 239.478 li
335.267 240.638 334.317 241.587 333.157 241.587 cv
cp
.827451 .34902 .0196078 rgb
f
331.334 136.125 mo
318.84 136.125 309.052 117.083 309.052 92.7759 cv
314.951 92.7759 li
314.951 115.017 323.422 129.957 331.334 129.957 cv
339.247 129.957 347.719 115.017 347.719 92.7759 cv
353.617 92.7759 li
353.617 117.083 343.83 136.125 331.334 136.125 cv
cp
.898039 .552941 0 rgb
f
337.643 263.176 mo
325.6 263.176 li
325.6 226.423 li
337.643 226.423 li
337.643 263.176 li
cp
.380392 .262745 .419608 rgb
f
337.646 226.428 mo
337.646 263.181 li
325.604 263.181 li
325.604 259.325 li
336.466 256.437 333.212 232.637 332.17 226.428 cv
337.646 226.428 li
cp
.278431 .180392 .317647 rgb
f
336.496 150.775 mo
326.173 150.775 li
326.173 127.713 li
336.496 127.713 li
336.496 150.775 li
cp
.380392 .262745 .419608 rgb
f
326.173 127.713 mo
326.173 128.557 li
335.652 128.557 li
335.652 150.775 li
336.496 150.775 li
336.496 127.713 li
326.173 127.713 li
cp
.282353 .2 .317647 rgb
f
331.621 279.025 mo
331.621 279.025 li
327.029 279.025 323.306 275.303 323.306 270.71 cv
323.306 259.824 li
339.936 259.824 li
339.936 270.71 li
339.936 275.303 336.213 279.025 331.621 279.025 cv
cp
.380392 .262745 .419608 rgb
f
339.936 259.824 mo
340.163 262.818 340.224 266.027 340.284 268.884 cv
340.283 270.51 340.646 274.38 337.125 277.236 cv
335.431 278.603 333.455 279.174 331.621 279.025 cv
335.73 278.659 338.776 275.64 339.432 271.826 cv
339.716 270.445 339.483 265.819 339.936 259.824 cv
cp
.278431 .180392 .317647 rgb
f
374.891 289.207 mo
288.71 289.207 li
288.71 294.712 li
291.987 294.712 li
291.987 310.547 li
291.987 312.108 293.252 313.373 294.813 313.373 cv
296.374 313.373 297.639 312.108 297.639 310.547 cv
297.639 294.712 li
304.439 294.712 li
304.439 310.547 li
304.439 312.108 305.704 313.373 307.265 313.373 cv
308.826 313.373 310.091 312.108 310.091 310.547 cv
310.091 294.712 li
316.891 294.712 li
316.891 310.547 li
316.891 312.108 318.156 313.373 319.717 313.373 cv
321.278 313.373 322.543 312.108 322.543 310.547 cv
322.543 294.712 li
329.343 294.712 li
329.343 310.547 li
329.343 312.108 330.608 313.373 332.169 313.373 cv
333.73 313.373 334.995 312.108 334.995 310.547 cv
334.995 294.712 li
341.795 294.712 li
341.795 310.547 li
341.795 312.108 343.06 313.373 344.621 313.373 cv
346.182 313.373 347.447 312.108 347.447 310.547 cv
347.447 294.712 li
354.247 294.712 li
354.247 310.547 li
354.247 312.108 355.512 313.373 357.073 313.373 cv
358.634 313.373 359.899 312.108 359.899 310.547 cv
359.899 294.712 li
366.699 294.712 li
366.699 310.547 li
366.699 312.108 367.964 313.373 369.525 313.373 cv
371.086 313.373 372.351 312.108 372.351 310.547 cv
372.351 294.712 li
374.891 294.712 li
374.891 289.207 li
cp
.403922 .25098 .486275 rgb
f
213.122 86.1709 mo
212.4 90.0361 212.012 94.1182 212.012 98.3413 cv
212.012 122.617 224.775 142.297 240.52 142.297 cv
256.265 142.297 269.028 122.617 269.028 98.3413 cv
269.028 94.1157 268.629 90.0376 267.907 86.1709 cv
213.122 86.1709 li
cp
.827451 .34902 .0196078 rgb
f
240.52 142.297 mo
250.075 141.959 255.526 127.413 257.627 117.886 cv
259.551 109.561 260.485 98.7373 259.408 86.1709 cv
263.867 112.846 254.229 142.969 240.52 142.297 cv
cp
.929412 .52549 .25098 rgb
f
221.625 86.1709 mo
221.396 88.8296 221.219 91.4888 221.188 94.1509 cv
221.122 96.811 221.165 99.4722 221.313 102.125 cv
221.602 107.428 222.217 112.72 223.414 117.886 cv
224.555 123.052 226.196 128.148 228.744 132.778 cv
230.009 135.086 231.536 137.282 233.478 139.06 cv
235.373 140.858 237.825 142.201 240.52 142.297 cv
237.814 142.43 235.207 141.148 233.159 139.421 cv
231.094 137.665 229.46 135.464 228.087 133.153 cv
226.693 130.842 225.628 128.355 224.709 125.832 cv
223.796 123.304 223.055 120.717 222.456 118.101 cv
221.325 112.854 220.69 107.507 220.561 102.154 cv
220.427 96.8018 220.748 91.438 221.625 86.1709 cv
cp
f
240.52 142.297 mo
254.625 141.419 259.426 113.611 260.181 98.3413 cv
261.209 120.712 252.206 142.834 240.52 142.297 cv
cp
f
221.625 86.1709 mo
220.234 102.363 222.182 128.718 233.478 139.06 cv
235.373 140.858 237.825 142.201 240.52 142.297 cv
237.814 142.43 235.207 141.148 233.159 139.421 cv
221.363 129.388 218.875 102.691 221.625 86.1709 cv
cp
f
240.521 142.297 mo
250.327 141.637 252.085 104.028 251.974 93.6265 cv
251.982 91.1421 251.9 88.6582 251.821 86.1709 cv
254.825 111.585 249.183 142.404 240.521 142.297 cv
cp
f
229.216 86.1709 mo
228.838 97.9229 229.338 141.542 240.521 142.297 cv
231.704 142.408 226.274 111.159 229.216 86.1709 cv
cp
f
240.521 142.297 mo
245.398 141.416 245.377 91.2559 245.53 86.1709 cv
247.17 115.476 244.295 141.949 240.521 142.297 cv
cp
f
235.51 86.1709 mo
235.632 90.2422 235.665 141.418 240.521 142.297 cv
238.152 142.079 236.725 131.375 236.401 128.959 cv
234.45 114.007 234.798 98.9971 235.51 86.1709 cv
cp
f
223.527 300.739 mo
260.965 300.739 li
260.965 309.34 li
223.527 309.34 li
223.527 300.739 li
cp
.376471 .121569 .0862745 rgb
f
223.527 300.739 mo
260.965 300.739 li
260.965 303.703 li
223.527 303.703 li
223.527 300.739 li
cp
.239216 .0666667 .0470588 rgb
f
241.959 167.044 mo
241.959 167.044 li
244.122 167.044 245.891 168.813 245.891 170.976 cv
245.891 256.501 li
245.891 258.664 244.122 260.434 241.959 260.434 cv
239.796 260.434 238.027 258.664 238.027 256.501 cv
238.027 170.976 li
238.027 168.813 239.796 167.044 241.959 167.044 cv
cp
.839216 .423529 .0117647 rgb
f
240.136 167.044 mo
240.136 167.044 li
241.296 167.044 242.246 167.993 242.246 169.153 cv
242.246 258.324 li
242.246 259.484 241.296 260.434 240.136 260.434 cv
238.976 260.434 238.027 259.484 238.027 258.324 cv
238.027 169.153 li
238.027 167.993 238.976 167.044 240.136 167.044 cv
cp
.827451 .34902 .0196078 rgb
f
241.959 267.889 mo
254.454 267.889 264.241 286.097 264.241 309.34 cv
258.343 309.34 li
258.343 288.073 249.872 273.787 241.959 273.787 cv
234.047 273.787 225.575 288.073 225.575 309.34 cv
219.677 309.34 li
219.677 286.097 229.464 267.889 241.959 267.889 cv
cp
.898039 .552941 0 rgb
f
235.651 146.4 mo
247.693 146.4 li
247.693 181.544 li
235.651 181.544 li
235.651 146.4 li
cp
.380392 .262745 .419608 rgb
f
235.648 181.54 mo
235.648 146.396 li
247.69 146.396 li
247.69 150.082 li
236.828 152.844 240.082 175.602 241.124 181.54 cv
235.648 181.54 li
cp
.278431 .180392 .317647 rgb
f
236.798 253.88 mo
247.12 253.88 li
247.12 275.932 li
236.798 275.932 li
236.798 253.88 li
cp
.380392 .262745 .419608 rgb
f
247.12 254.75 mo
247.12 253.88 li
236.798 253.88 li
236.798 275.932 li
237.735 275.932 li
237.735 254.75 li
247.12 254.75 li
cp
.27451 .188235 .309804 rgb
f
241.672 131.245 mo
241.672 131.245 li
246.265 131.245 249.987 134.967 249.987 139.56 cv
249.987 149.605 li
233.357 149.605 li
233.357 139.56 li
233.357 134.967 237.08 131.245 241.672 131.245 cv
cp
.380392 .262745 .419608 rgb
f
233.357 149.605 mo
233.131 146.742 233.069 143.673 233.009 140.941 cv
233.011 139.387 232.647 135.687 236.168 132.956 cv
237.863 131.649 239.839 131.102 241.672 131.245 cv
237.563 131.595 234.517 134.481 233.861 138.128 cv
233.577 139.449 233.81 143.873 233.357 149.605 cv
cp
.278431 .180392 .317647 rgb
f
469.919 77.2681 mo
466.97 77.2681 li
466.97 99.2725 li
499.689 139.523 li
501.979 137.663 li
469.919 98.2251 li
469.919 77.2681 li
cp
.403922 .25098 .486275 rgb
f
506.931 136.655 mo
501.158 94.5361 li
501.158 77.2681 li
498.209 77.2681 li
498.209 94.6362 li
504.674 132.749 li
491.873 94.7588 li
491.873 77.2681 li
488.924 77.2681 li
488.924 95.2617 li
502.277 134.838 li
481.716 96.8457 li
481.716 77.2681 li
478.767 77.2681 li
478.767 97.6606 li
501.784 139.138 li
506.931 136.655 li
cp
f
541.184 77.2681 mo
544.133 77.2681 li
544.133 99.2725 li
511.413 139.523 li
509.125 137.663 li
541.184 98.2251 li
541.184 77.2681 li
cp
f
504.172 136.655 mo
509.944 94.5361 li
509.944 77.2681 li
512.894 77.2681 li
512.894 94.6362 li
507.556 133.713 li
519.229 94.7588 li
519.229 77.2681 li
522.179 77.2681 li
522.179 95.2617 li
509.589 133.548 li
529.388 96.8457 li
529.388 77.2681 li
532.337 77.2681 li
532.337 97.6606 li
509.65 138.015 li
504.172 136.655 li
cp
f
487.563 300.684 mo
525 300.684 li
525 309.285 li
487.563 309.285 li
487.563 300.684 li
cp
.376471 .121569 .0862745 rgb
f
487.563 300.684 mo
525 300.684 li
525 303.648 li
487.563 303.648 li
487.563 300.684 li
cp
.239216 .0666667 .0470588 rgb
f
505.995 166.989 mo
505.995 166.989 li
508.157 166.989 509.927 168.758 509.927 170.921 cv
509.927 256.446 li
509.927 258.609 508.157 260.378 505.995 260.378 cv
503.832 260.378 502.063 258.609 502.063 256.446 cv
502.063 170.921 li
502.063 168.758 503.832 166.989 505.995 166.989 cv
cp
.839216 .423529 .0117647 rgb
f
504.172 166.989 mo
504.172 166.989 li
505.332 166.989 506.281 167.938 506.281 169.099 cv
506.281 258.269 li
506.281 259.429 505.332 260.378 504.172 260.378 cv
503.012 260.378 502.063 259.429 502.063 258.269 cv
502.063 169.099 li
502.063 167.938 503.012 166.989 504.172 166.989 cv
cp
.827451 .34902 .0196078 rgb
f
505.995 267.833 mo
518.489 267.833 528.277 286.042 528.277 309.285 cv
522.379 309.285 li
522.379 288.018 513.907 273.732 505.995 273.732 cv
498.083 273.732 489.61 288.018 489.61 309.285 cv
483.713 309.285 li
483.713 286.042 493.5 267.833 505.995 267.833 cv
cp
.898039 .552941 0 rgb
f
499.688 146.345 mo
511.729 146.345 li
511.729 181.489 li
499.688 181.489 li
499.688 146.345 li
cp
.380392 .262745 .419608 rgb
f
499.684 181.484 mo
499.684 146.341 li
511.727 146.341 li
511.727 150.027 li
500.863 152.79 504.117 175.547 505.159 181.484 cv
499.684 181.484 li
cp
.278431 .180392 .317647 rgb
f
500.834 253.825 mo
511.156 253.825 li
511.156 275.877 li
500.834 275.877 li
500.834 253.825 li
cp
.380392 .262745 .419608 rgb
f
501.49 254.481 mo
511.156 254.481 li
511.156 253.825 li
500.834 253.825 li
500.834 275.877 li
501.49 275.877 li
501.49 254.481 li
cp
.309804 .211765 .34902 rgb
f
505.708 131.189 mo
505.708 131.189 li
510.301 131.189 514.023 134.912 514.023 139.504 cv
514.023 149.55 li
497.394 149.55 li
497.394 139.504 li
497.394 134.912 501.116 131.189 505.708 131.189 cv
cp
.380392 .262745 .419608 rgb
f
497.394 149.55 mo
497.167 146.687 497.105 143.618 497.045 140.887 cv
497.047 139.332 496.684 135.631 500.204 132.901 cv
501.898 131.594 503.875 131.047 505.708 131.189 cv
501.599 131.54 498.553 134.427 497.897 138.073 cv
497.613 139.394 497.846 143.817 497.394 149.55 cv
cp
.278431 .180392 .317647 rgb
f
536.93 111.184 mo
473.646 111.184 li
473.646 110.078 li
536.93 110.078 li
536.93 111.184 li
cp
.403922 .25098 .486275 rgb
f
735.224 295.757 mo
729.345 299.787 721.549 309.981 718.324 314.405 cv
717.145 313.54 li
731.959 293.574 li
735.224 295.757 li
cp
.917647 .160784 .0117647 rgb
f
620.732 223.466 mo
619.668 233.87 li
601.481 233.87 li
601.481 230.43 li
601.481 230.43 595.706 229.201 591.036 231.167 cv
586.367 233.133 580.837 233.87 580.837 233.87 cv
580.837 231.413 li
575.062 231.413 li
575.062 233.87 li
568.672 233.87 li
568.672 231.413 li
561.668 231.413 li
561.668 234.239 li
554.172 234.239 li
554.172 231.413 li
548.15 231.29 li
548.15 233.502 li
542.744 232.396 li
542.744 229.569 li
538.935 228.162 li
538.935 230.552 li
538.935 230.552 534.552 228.463 532.995 224.9 cv
531.44 221.336 533.203 211.734 533.203 211.734 cv
618.07 219.862 li
620.732 223.466 li
1 .807843 0 rgb
f
622.695 128.494 mo
615.499 190.975 li
615.499 190.975 620.974 207.359 621.069 216.207 cv
621.144 223.113 620.741 223.416 620.741 223.416 cv
620.741 223.416 590.922 223.743 584.369 226.037 cv
578.873 227.96 554.486 230.114 540.571 224.578 cv
535.536 222.575 532.322 217.41 533.146 212.054 cv
533.515 209.659 534.678 207.686 537.51 207.686 cv
544.719 207.686 563.398 209.653 567.329 205.721 cv
571.262 201.788 577.16 190.647 574.866 185.077 cv
572.572 179.506 557.514 128.602 557.514 128.602 cv
622.695 128.494 li
1 .333333 0 rgb
f
601.734 224.027 mo
601.734 224.027 601.735 224.026 601.735 224.026 cv
603.276 223.944 604.82 223.872 606.323 223.81 cv
606.323 223.811 606.323 223.812 606.323 223.812 cv
604.819 223.874 603.276 223.945 601.734 224.027 cv
1 .494118 0 rgb
f
601.735 224.026 mo
602.918 222.234 604.822 218.441 604.939 212.33 cv
605.617 214.406 606.138 215.918 606.438 216.649 cv
607.223 218.555 607.049 221.112 606.323 223.81 cv
604.82 223.872 603.276 223.944 601.735 224.026 cv
598.027 157.05 mo
596.462 147.843 594.765 138.74 593.614 132.714 cv
604.589 132.559 613.938 131.685 618.893 130.458 cv
618.893 130.458 li
618.893 130.458 li
621.2 129.888 622.556 129.261 622.685 128.575 cv
622.684 128.582 li
621.433 137.577 620.267 146.607 619.151 155.723 cv
610.854 155.806 603.427 156.3 598.027 157.05 cv
1 .203922 0 rgb
f
615.935 190.983 mo
618.044 172.895 620.531 152.227 622.692 128.526 cv
619.842 149.001 617.438 169.675 615.047 191.07 cv
618.349 201.572 621.242 210.553 620.945 221.416 cv
620.908 222.1 620.936 222.807 620.73 223.464 cv
621.208 222.161 621.249 216.502 621.19 215.197 cv
620.959 208.33 618.064 197.582 615.935 190.983 cv
.6 .164706 .0156863 rgb
f
622.695 128.468 mo
622.695 129.195 621.32 129.858 618.893 130.458 cv
613.417 131.814 602.574 132.739 590.099 132.739 cv
578.46 132.739 568.236 131.933 562.476 130.723 cv
559.319 130.064 557.491 129.278 557.491 128.443 cv
557.491 126.063 572.09 124.137 590.099 124.137 cv
608.099 124.137 622.695 126.089 622.695 128.468 cv
.827451 .333333 0 rgb
f
590.099 132.739 mo
578.46 132.739 568.236 131.933 562.476 130.723 cv
567.961 129.357 578.784 128.443 591.239 128.443 cv
602.898 128.443 613.132 129.249 618.893 130.458 cv
613.938 131.685 604.589 132.559 593.614 132.714 cv
592.458 132.73 591.286 132.739 590.099 132.739 cv
.686274 .109804 0 rgb
f
718.232 203.074 mo
710.367 170.741 li
681.354 170.741 li
675.063 203.074 li
718.232 203.074 li
cp
1 .282353 0 rgb
f
718.232 203.074 mo
718.232 203.702 708.568 204.211 696.647 204.211 cv
684.727 204.211 675.063 203.702 675.063 203.074 cv
675.063 202.447 684.727 201.938 696.647 201.938 cv
708.568 201.938 718.232 202.447 718.232 203.074 cv
cp
.827451 .333333 0 rgb
f
676.461 103.452 mo
676.461 100.83 679.65 98.7764 682.403 100.48 cv
684.335 101.676 688.346 114.987 688.346 114.987 cv
688.346 114.987 685.549 92.4409 687.122 90.8677 cv
688.695 89.2949 689.612 88.4399 692.19 89.8193 cv
694.348 90.9736 696.385 114.463 696.385 114.463 cv
696.385 114.463 696.298 91.6543 697.958 89.9941 cv
699.618 88.3335 701.804 87.5474 704.25 89.9941 cv
706.697 92.4409 704.25 114.288 704.25 114.288 cv
704.25 114.288 706.522 95.2373 707.571 92.7905 cv
708.619 90.3438 710.979 89.9067 713.863 92.7905 cv
716.746 95.6743 713.339 111.841 712.29 116.735 cv
711.248 121.598 710.378 170.111 710.367 170.726 cv
710.377 170.741 li
710.377 171.369 703.83 171.877 695.755 171.877 cv
687.68 171.877 681.222 170.802 681.354 170.741 cv
680.48 122.677 li
680.48 122.677 676.461 106.073 676.461 103.452 cv
cp
.94902 .631373 0 rgb
f
612.014 714.424 mo
606.084 693.043 li
612.014 671.661 li
574.249 666.214 557.054 690.678 556.802 693.043 cv
557.177 695.945 574.249 719.872 612.014 714.424 cv
cp
.403922 .25098 .486275 rgb
f
612.018 714.428 mo
574.249 719.874 557.174 695.946 556.8 693.046 cv
556.898 692.103 559.67 687.679 565.343 683.029 cv
564.32 687.188 564.32 691.896 567.712 695.288 cv
573.895 701.471 598.963 700.232 607.898 699.584 cv
612.018 714.428 li
cp
.278431 .160784 .356863 rgb
f
629.688 694.471 mo
629.688 692.619 li
629.688 690.71 631.251 689.147 633.16 689.147 cv
694.304 689.147 li
696.214 689.147 697.776 690.71 697.776 692.619 cv
697.776 694.471 li
697.776 696.38 696.214 697.942 694.304 697.942 cv
633.16 697.942 li
631.251 697.942 629.688 696.38 629.688 694.471 cv
cp
.839216 .423529 .0117647 rgb
f
629.688 694.471 mo
629.688 692.619 li
629.688 690.71 631.251 689.147 633.16 689.147 cv
694.304 689.147 li
696.214 689.147 697.776 690.71 697.776 692.619 cv
697.776 694.471 li
697.776 696.38 696.214 697.942 694.304 697.942 cv
633.16 697.942 li
631.251 697.942 629.688 696.38 629.688 694.471 cv
cp
f
697.776 694.471 mo
697.776 692.619 li
697.776 692.206 697.69 691.814 697.557 691.446 cv
697.071 692.78 695.801 693.745 694.304 693.745 cv
633.16 693.745 li
631.664 693.745 630.393 692.78 629.907 691.446 cv
629.773 691.814 629.688 692.206 629.688 692.619 cv
629.688 694.471 li
629.688 696.38 631.251 697.942 633.16 697.942 cv
694.304 697.942 li
696.214 697.942 697.776 696.38 697.776 694.471 cv
cp
.717647 .356863 .0313726 rgb
f
614.637 697.942 mo
614.637 689.147 li
640.26 689.147 li
640.26 697.942 li
614.637 697.942 li
cp
.380392 .262745 .419608 rgb
f
640.257 697.944 mo
614.634 697.944 li
614.634 689.149 li
617.321 689.149 li
619.336 697.083 635.928 694.707 640.257 693.945 cv
640.257 697.944 li
cp
.278431 .180392 .317647 rgb
f
603.588 693.745 mo
603.588 693.745 li
603.588 690.543 606.184 687.948 609.385 687.948 cv
616.975 687.948 li
616.975 699.542 li
609.385 699.542 li
606.184 699.542 603.588 696.946 603.588 693.745 cv
cp
.380392 .262745 .419608 rgb
f
616.975 699.542 mo
614.887 699.699 612.649 699.742 610.657 699.784 cv
609.524 699.783 606.826 700.036 604.835 697.582 cv
603.883 696.4 603.484 695.023 603.588 693.745 cv
603.844 696.609 605.948 698.733 608.606 699.19 cv
609.569 699.389 612.795 699.226 616.975 699.542 cv
cp
.278431 .180392 .317647 rgb
f
541.569 691.704 mo
541.569 688.967 539.351 686.748 536.613 686.748 cv
514.085 686.748 li
511.348 686.748 509.128 688.967 509.128 691.704 cv
509.128 728.691 li
509.128 732.582 512.283 735.736 516.174 735.736 cv
516.174 695.104 li
521.826 695.104 li
521.826 732.214 li
521.826 734.159 525.349 735.736 525.349 735.736 cv
525.349 735.736 528.871 734.159 528.871 732.214 cv
528.871 695.104 li
534.524 695.104 li
534.524 735.736 li
538.415 735.736 541.569 732.582 541.569 728.691 cv
541.569 691.704 li
cp
.403922 .25098 .486275 rgb
f
526.274 667.333 mo
524.423 667.333 li
522.514 667.333 520.951 665.771 520.951 663.86 cv
520.951 602.717 li
520.951 600.807 522.514 599.244 524.423 599.244 cv
526.274 599.244 li
528.184 599.244 529.746 600.807 529.746 602.717 cv
529.746 663.86 li
529.746 665.771 528.184 667.333 526.274 667.333 cv
cp
.839216 .423529 .0117647 rgb
f
526.274 667.333 mo
524.423 667.333 li
522.514 667.333 520.951 665.771 520.951 663.86 cv
520.951 602.717 li
520.951 600.807 522.514 599.244 524.423 599.244 cv
526.274 599.244 li
528.184 599.244 529.746 600.807 529.746 602.717 cv
529.746 663.86 li
529.746 665.771 528.184 667.333 526.274 667.333 cv
cp
f
526.274 599.244 mo
524.423 599.244 li
524.01 599.244 523.618 599.33 523.25 599.464 cv
524.584 599.949 525.549 601.221 525.549 602.717 cv
525.549 663.86 li
525.549 665.356 524.584 666.628 523.25 667.113 cv
523.618 667.247 524.01 667.332 524.423 667.332 cv
526.274 667.332 li
528.184 667.332 529.746 665.771 529.746 663.86 cv
529.746 602.717 li
529.746 600.807 528.184 599.244 526.274 599.244 cv
cp
.717647 .356863 .0313726 rgb
f
529.746 682.384 mo
520.951 682.384 li
520.951 656.761 li
529.746 656.761 li
529.746 682.384 li
cp
.380392 .262745 .419608 rgb
f
529.749 656.764 mo
529.749 682.387 li
520.953 682.387 li
520.953 679.699 li
528.887 677.686 526.511 661.093 525.75 656.764 cv
529.749 656.764 li
cp
.278431 .180392 .317647 rgb
f
525.549 693.433 mo
525.549 693.433 li
522.347 693.433 519.752 690.838 519.752 687.636 cv
519.752 680.047 li
531.346 680.047 li
531.346 687.636 li
531.346 690.838 528.75 693.433 525.549 693.433 cv
cp
.380392 .262745 .419608 rgb
f
531.346 680.047 mo
531.503 682.134 531.546 684.371 531.588 686.363 cv
531.587 687.497 531.84 690.194 529.386 692.186 cv
528.204 693.138 526.827 693.537 525.549 693.433 cv
528.413 693.178 530.537 691.073 530.994 688.414 cv
531.192 687.451 531.029 684.227 531.346 680.047 cv
cp
.278431 .180392 .317647 rgb
f
481.408 713.761 mo
481.408 710.291 478.596 707.479 475.127 707.479 cv
417.156 707.479 li
413.687 707.479 410.875 710.291 410.875 713.761 cv
410.875 723.801 li
410.875 725.316 li
410.875 739.816 li
410.875 741.219 412.011 742.356 413.414 742.356 cv
414.816 742.356 415.954 741.219 415.954 739.816 cv
415.954 725.316 li
420.225 725.316 li
420.225 739.816 li
420.225 741.219 421.362 742.356 422.765 742.356 cv
424.167 742.356 425.304 741.219 425.304 739.816 cv
425.304 725.316 li
429.576 725.316 li
429.576 739.816 li
429.576 741.219 430.713 742.356 432.115 742.356 cv
433.518 742.356 434.655 741.219 434.655 739.816 cv
434.655 725.316 li
438.927 725.316 li
438.927 739.816 li
438.927 741.219 440.063 742.356 441.466 742.356 cv
442.868 742.356 444.006 741.219 444.006 739.816 cv
444.006 725.316 li
448.277 725.316 li
448.277 739.816 li
448.277 741.219 449.414 742.356 450.816 742.356 cv
452.22 742.356 453.356 741.219 453.356 739.816 cv
453.356 725.316 li
457.628 725.316 li
457.628 739.816 li
457.628 741.219 458.765 742.356 460.167 742.356 cv
461.57 742.356 462.707 741.219 462.707 739.816 cv
462.707 725.316 li
466.979 725.316 li
466.979 739.816 li
466.979 741.219 468.115 742.356 469.519 742.356 cv
470.921 742.356 472.058 741.219 472.058 739.816 cv
472.058 725.316 li
476.329 725.316 li
476.329 739.816 li
476.329 741.219 477.466 742.356 478.869 742.356 cv
480.271 742.356 481.408 741.219 481.408 739.816 cv
481.408 713.761 li
cp
.403922 .25098 .486275 rgb
f
481.408 713.761 mo
481.408 710.291 478.596 707.479 475.127 707.479 cv
417.156 707.479 li
413.687 707.479 410.875 710.291 410.875 713.761 cv
410.875 723.273 410.875 730.256 410.875 739.816 cv
410.875 741.219 412.011 742.356 413.414 742.356 cv
414.816 742.356 415.954 741.219 415.954 739.816 cv
415.954 725.316 li
420.225 725.316 li
420.225 739.816 li
420.225 741.219 421.362 742.356 422.765 742.356 cv
424.167 742.356 425.304 741.219 425.304 739.816 cv
425.304 725.316 li
429.576 725.316 li
429.576 739.816 li
429.576 741.219 430.713 742.356 432.115 742.356 cv
433.518 742.356 434.655 741.219 434.655 739.816 cv
434.655 725.316 li
438.927 725.316 li
438.927 739.816 li
438.927 741.219 440.063 742.356 441.466 742.356 cv
442.868 742.356 444.006 741.219 444.006 739.816 cv
444.006 725.316 li
448.277 725.316 li
448.277 739.816 li
448.277 741.219 449.414 742.356 450.816 742.356 cv
452.22 742.356 453.356 741.219 453.356 739.816 cv
453.356 725.316 li
457.628 725.316 li
457.628 739.816 li
457.628 741.219 458.765 742.356 460.167 742.356 cv
461.57 742.356 462.707 741.219 462.707 739.816 cv
462.707 725.316 li
466.979 725.316 li
466.979 739.816 li
466.979 741.219 468.115 742.356 469.519 742.356 cv
470.921 742.356 472.058 741.219 472.058 739.816 cv
472.058 725.316 li
476.329 725.316 li
476.329 739.816 li
476.329 741.219 477.466 742.356 478.869 742.356 cv
480.271 742.356 481.408 741.219 481.408 739.816 cv
481.408 730.286 481.408 723.29 481.408 713.761 cv
cp
f
445.918 686.03 mo
444.066 686.03 li
442.157 686.03 440.595 684.468 440.595 682.559 cv
440.595 621.414 li
440.595 619.505 442.157 617.942 444.066 617.942 cv
445.918 617.942 li
447.827 617.942 449.39 619.505 449.39 621.414 cv
449.39 682.559 li
449.39 684.468 447.827 686.03 445.918 686.03 cv
cp
.839216 .423529 .0117647 rgb
f
445.918 686.03 mo
444.066 686.03 li
442.157 686.03 440.595 684.468 440.595 682.559 cv
440.595 621.414 li
440.595 619.505 442.157 617.942 444.066 617.942 cv
445.918 617.942 li
447.827 617.942 449.39 619.505 449.39 621.414 cv
449.39 682.559 li
449.39 684.468 447.827 686.03 445.918 686.03 cv
cp
f
445.918 617.942 mo
444.066 617.942 li
443.653 617.942 443.262 618.027 442.894 618.161 cv
444.228 618.646 445.191 619.918 445.191 621.414 cv
445.191 682.559 li
445.191 684.055 444.228 685.325 442.894 685.811 cv
443.262 685.944 443.653 686.03 444.066 686.03 cv
445.918 686.03 li
447.827 686.03 449.39 684.468 449.39 682.559 cv
449.39 621.414 li
449.39 619.505 447.827 617.942 445.918 617.942 cv
cp
.717647 .356863 .0313726 rgb
f
449.39 701.081 mo
440.595 701.081 li
440.595 675.459 li
449.39 675.459 li
449.39 701.081 li
cp
.380392 .262745 .419608 rgb
f
449.392 675.462 mo
449.392 701.084 li
440.597 701.084 li
440.597 698.396 li
448.53 696.383 446.153 679.791 445.393 675.462 cv
449.392 675.462 li
cp
.278431 .180392 .317647 rgb
f
445.191 712.131 mo
445.191 712.131 li
441.99 712.131 439.396 709.535 439.396 706.334 cv
439.396 698.744 li
450.988 698.744 li
450.988 706.334 li
450.988 709.535 448.394 712.131 445.191 712.131 cv
cp
.380392 .262745 .419608 rgb
f
450.988 698.744 mo
451.146 700.832 451.189 703.069 451.231 705.061 cv
451.23 706.194 451.483 708.893 449.029 710.883 cv
447.848 711.836 446.47 712.234 445.191 712.131 cv
448.057 711.875 450.18 709.771 450.638 707.112 cv
450.836 706.149 450.673 702.924 450.988 698.744 cv
cp
.278431 .180392 .317647 rgb
f
162.387 444.227 mo
162.387 465.681 144.996 483.072 123.541 483.072 cv
102.087 483.072 84.6954 465.681 84.6954 444.227 cv
84.6954 422.772 102.087 405.381 123.541 405.381 cv
144.996 405.381 162.387 422.772 162.387 444.227 cv
.203922 .2 .309804 rgb
f
149.178 444.222 mo
149.178 458.392 137.699 469.871 123.54 469.871 cv
112.828 469.871 103.651 463.309 99.8252 453.976 cv
98.5796 450.974 97.9008 447.681 97.9008 444.222 cv
97.9008 431.441 107.255 420.841 119.491 418.906 cv
120.803 418.694 122.16 418.583 123.54 418.583 cv
137.699 418.583 149.178 430.063 149.178 444.222 cv
1 .403922 0 rgb
f
123.54 469.871 mo
112.828 469.871 103.651 463.309 99.8252 453.976 cv
100.425 453.985 101.034 453.989 101.646 453.989 cv
115.707 453.989 132.427 451.646 132.427 440.529 cv
132.427 430.563 125.831 423.455 119.491 418.906 cv
120.803 418.694 122.16 418.583 123.54 418.583 cv
137.699 418.583 149.178 430.063 149.178 444.222 cv
149.178 458.392 137.699 469.871 123.54 469.871 cv
1 .164706 0 rgb
f
237.991 418.398 mo
233.733 418.774 li
239.227 480.936 li
227.898 480.936 li
166.554 414.03 li
163.404 416.919 li
226.017 485.21 li
243.896 485.21 li
237.991 418.398 li
.568627 .0235294 .0235294 rgb
f
286.091 390.898 mo
248.328 426.514 li
174.071 422.532 li
165.34 422.065 li
102.958 373.648 li
240.42 386.594 li
286.091 390.898 li
.976471 .564706 .0705882 rgb
f
248.328 426.514 mo
238.663 425.996 li
234.351 425.764 li
174.364 422.548 li
174.071 422.532 li
227.139 412.154 239.452 397.272 240.42 386.594 cv
286.091 390.898 li
248.328 426.514 li
.866667 .34902 .0470588 rgb
f
68.8521 447.045 mo
68.8521 447.045 li
68.8486 447.044 li
68.8521 447.045 li
cp
.486275 .0313726 .0313726 rgb
f
378.248 384.85 mo
368.998 385.439 310.667 389.154 301.626 389.729 cv
296.666 392.965 255.58 419.766 249.495 423.736 cv
248.665 423.583 239.927 423.244 154.198 419.33 cv
143.982 427.129 128.082 439.267 122.2 443.757 cv
117.382 443.484 69.2759 440.77 69.1177 440.763 cv
64.959 440.587 64.6997 446.869 68.8521 447.045 cv
71.0059 447.136 119.712 449.191 124 449.373 cv
131.181 443.521 147.033 430.601 155.54 423.667 cv
167.072 424.301 239.049 428.256 250.612 428.891 cv
255.885 425.868 296.174 402.769 304.27 398.127 cv
378.792 393.382 li
384.439 393.022 383.887 384.491 378.248 384.85 cv
cp
f
68.8486 447.044 mo
68.75 447.04 68.7559 447.04 68.8486 447.044 cv
cp
f
68.8521 447.045 mo
68.8521 447.045 li
68.8486 447.044 li
68.8521 447.045 li
cp
f
377.737 383.707 mo
372.456 384.024 351.7 386.541 332.732 387.749 cv
333.172 396.211 li
378.792 394.438 li
386.503 393.388 385.93 383.215 377.737 383.707 cv
cp
.129412 .121569 .286275 rgb
f
68.8486 447.044 mo
68.75 447.04 68.7559 447.04 68.8486 447.044 cv
cp
.486275 .0313726 .0313726 rgb
f
129.359 444.227 mo
129.359 447.439 126.754 450.045 123.542 450.045 cv
120.328 450.045 117.724 447.439 117.724 444.227 cv
117.724 441.014 120.328 438.409 123.542 438.409 cv
126.754 438.409 129.359 441.014 129.359 444.227 cv
cp
.203922 .2 .309804 rgb
f
81.6719 537.732 mo
76.6904 583.892 83.3901 601.561 85.3408 601.152 cv
88.6367 600.564 92.7817 574.567 95.082 548.861 cv
89.022 544.3 84.0186 539.873 81.6719 537.732 cv
cp
247.216 649.345 mo
244.551 644.799 128.573 567.944 110.846 558.978 cv
106.126 556.59 101.298 553.424 96.9126 550.22 cv
96.1743 558.073 92.25 601.92 85.6851 603.088 cv
78.9468 604.258 75.3213 573.737 79.8555 536.911 cv
81.5933 534.978 li
81.688 535.068 87.4946 540.594 95.2842 546.55 cv
95.3823 545.393 95.4775 544.239 95.5679 543.089 cv
97.5278 543.242 li
97.5239 543.293 97.3838 545.055 97.1235 547.936 cv
101.678 551.317 106.771 554.712 111.733 557.223 cv
123.243 563.044 249.115 644.195 249.115 649.036 cv
247.149 649.036 li
247.149 649.227 247.214 649.341 247.216 649.345 cv
cp
.168627 .0862745 .219608 rgb
f
260.708 639.689 mo
250.171 639.689 li
250.171 634.422 li
250.171 631.512 252.53 629.153 255.439 629.153 cv
258.349 629.153 260.708 631.512 260.708 634.422 cv
260.708 639.689 li
cp
.168627 .12549 .2 rgb
f
303.871 649.035 mo
303.871 651.709 302.79 654.127 301.03 655.887 cv
299.28 657.637 296.862 658.719 294.188 658.719 cv
277.535 658.719 li
272.178 658.719 267.842 654.383 267.842 649.035 cv
267.842 646.361 268.924 643.943 270.683 642.184 cv
272.433 640.434 274.861 639.353 277.535 639.353 cv
294.188 639.353 li
298.248 639.353 301.718 641.85 303.163 645.388 cv
303.615 646.509 303.871 647.747 303.871 649.035 cv
cp
.337255 .258824 .388235 rgb
f
303.871 649.035 mo
303.871 651.709 302.79 654.127 301.03 655.887 cv
299.28 657.637 296.862 658.719 294.188 658.719 cv
277.535 658.719 li
272.178 658.719 267.842 654.383 267.842 649.035 cv
267.842 646.361 268.924 643.943 270.683 642.184 cv
272.433 640.434 274.861 639.353 277.535 639.353 cv
278.292 639.353 li
279.865 641.357 282.893 644.07 288.034 644.955 cv
293.146 645.84 299.162 645.663 303.163 645.388 cv
303.615 646.509 303.871 647.747 303.871 649.035 cv
cp
.235294 .184314 .278431 rgb
f
317.807 708.345 mo
260.708 708.345 li
260.708 667.56 li
317.807 667.56 li
317.807 708.345 li
cp
.0901961 .407843 .32549 rgb
f
306.589 699.04 mo
303.872 694.187 li
338.539 694.187 li
330.203 705.553 li
306.589 699.04 li
cp
.168627 .12549 .2 rgb
f
361.989 706.986 mo
361.989 728.396 li
232.501 728.396 li
232.501 679.451 li
236.965 680.404 li
361.989 706.986 li
.141176 .666667 .415686 rgb
f
361.989 707.202 mo
361.989 728.396 li
232.501 728.396 li
232.501 679.451 li
236.965 680.404 li
256.94 690.304 291.917 705.217 317.811 710.613 cv
342.672 715.794 355.982 710.908 361.989 707.202 cv
.0784314 .447059 .262745 rgb
f
361.989 728.888 mo
232.501 728.888 li
232.501 727.905 li
361.989 727.905 li
361.989 728.888 li
cp
.027451 .14902 .0862745 rgb
f
256.969 676.057 mo
256.969 649.206 li
305.061 649.206 li
316.417 649.206 325.624 658.412 325.624 669.769 cv
325.624 677.756 li
256.969 676.057 li
cp
.141176 .666667 .415686 rgb
f
338.539 694.187 mo
303.872 694.187 li
303.872 672.301 li
303.872 667.43 307.82 663.481 312.691 663.481 cv
329.719 663.481 li
334.59 663.481 338.539 667.43 338.539 672.301 cv
338.539 694.187 li
cp
.337255 .258824 .388235 rgb
f
245.409 687.954 mo
245.409 718.881 li
245.409 718.881 215.564 717.367 185.836 709.994 cv
157.505 702.985 129.301 690.648 127.139 669.257 cv
125.241 650.401 124.966 635.391 125.291 624.391 cv
125.703 609.811 127.139 602.301 127.139 602.301 cv
245.409 687.954 li
.666667 .443137 .262745 rgb
f
gsave
245.409 718.881 mo
245.409 718.881 215.564 717.367 185.836 709.994 cv
185.836 709.994 li
185.306 703.447 184.322 694.689 182.523 683.864 cv
179.604 666.288 146.839 639.991 125.291 624.391 cv
125.703 609.811 127.139 602.301 127.139 602.301 cv
245.409 687.954 li
245.409 718.881 li
clp
125.291 602.301 mo
245.409 602.301 li
245.409 718.881 li
125.291 718.881 li
cp
.443137 .196078 .0705882 rgb
f
grestore
251.867 696.982 mo
251.059 696.982 250.243 696.733 249.542 696.218 cv
118.69 600.034 li
116.94 598.748 116.564 596.287 117.851 594.537 cv
119.136 592.787 121.596 592.411 123.348 593.697 cv
254.2 689.882 li
255.949 691.168 256.325 693.629 255.039 695.379 cv
254.268 696.428 253.076 696.982 251.867 696.982 cv
cp
.231373 .133333 .298039 rgb
f
265.1 642.232 mo
265.1 683.265 li
257.255 678.497 li
242.352 669.443 li
242.352 642.232 li
242.352 638.133 245.685 634.801 249.784 634.801 cv
257.667 634.801 li
258.031 634.801 258.385 634.83 258.739 634.889 cv
262.327 635.4 265.1 638.497 265.1 642.232 cv
cp
.337255 .258824 .388235 rgb
f
254.856 644.051 mo
254.856 652.053 256.37 669.188 257.255 678.497 cv
242.352 669.443 li
242.352 642.232 li
242.352 638.133 245.685 634.801 249.784 634.801 cv
257.667 634.801 li
258.031 634.801 258.385 634.83 258.739 634.889 cv
256.705 636.275 254.856 638.949 254.856 644.051 cv
cp
.235294 .184314 .278431 rgb
f
257.875 701.434 mo
257.875 719.453 243.267 734.062 225.247 734.062 cv
207.228 734.062 192.619 719.453 192.619 701.434 cv
192.619 683.414 207.228 668.806 225.247 668.806 cv
243.267 668.806 257.875 683.414 257.875 701.434 cv
cp
.164706 .0509804 .239216 rgb
f
248.132 701.432 mo
248.132 707.478 245.783 712.982 241.939 717.072 cv
237.781 721.535 231.843 724.317 225.247 724.317 cv
212.605 724.317 202.361 714.074 202.361 701.432 cv
202.361 692.506 207.483 684.759 214.954 680.994 cv
218.041 679.431 221.541 678.546 225.247 678.546 cv
237.889 678.546 248.132 688.8 248.132 701.432 cv
cp
1 .403922 0 rgb
f
241.939 717.072 mo
237.781 721.535 231.843 724.317 225.247 724.317 cv
212.605 724.317 202.361 714.074 202.361 701.432 cv
202.361 692.506 207.483 684.759 214.954 680.994 cv
212.831 689.724 211.602 704.361 223.812 712.648 cv
229.661 716.61 236.011 717.583 241.939 717.072 cv
cp
1 .282353 0 rgb
f
236.463 701.434 mo
236.463 707.628 231.441 712.649 225.247 712.649 cv
219.053 712.649 214.031 707.628 214.031 701.434 cv
214.031 695.239 219.053 690.218 225.247 690.218 cv
231.441 690.218 236.463 695.239 236.463 701.434 cv
cp
.164706 .0509804 .239216 rgb
f
377.964 716.842 mo
377.964 726.853 369.849 734.968 359.838 734.968 cv
349.827 734.968 341.711 726.853 341.711 716.842 cv
341.711 706.83 349.827 698.715 359.838 698.715 cv
369.849 698.715 377.964 706.83 377.964 716.842 cv
cp
f
372.551 716.842 mo
372.551 723.863 366.859 729.555 359.838 729.555 cv
352.816 729.555 347.124 723.863 347.124 716.842 cv
347.124 709.819 352.816 704.128 359.838 704.128 cv
366.859 704.128 372.551 709.819 372.551 716.842 cv
cp
1 .403922 0 rgb
f
366.069 716.842 mo
366.069 720.282 363.279 723.072 359.838 723.072 cv
356.396 723.072 353.606 720.282 353.606 716.842 cv
353.606 713.4 356.396 710.61 359.838 710.61 cv
363.279 710.61 366.069 713.4 366.069 716.842 cv
cp
.164706 .0509804 .239216 rgb
f
310.316 693.05 mo
307.122 693.05 li
307.613 668.806 li
309.825 668.806 li
310.316 693.05 li
cp
.117647 .0980392 .129412 rgb
f
311.586 668.806 mo
314.781 668.806 li
314.29 693.05 li
312.078 693.05 li
311.586 668.806 li
cp
f
318.672 693.05 mo
315.478 693.05 li
315.969 668.806 li
318.181 668.806 li
318.672 693.05 li
cp
f
319.942 668.806 mo
323.137 668.806 li
322.646 693.05 li
320.434 693.05 li
319.942 668.806 li
cp
f
327.335 693.05 mo
324.141 693.05 li
324.632 668.806 li
326.844 668.806 li
327.335 693.05 li
cp
f
335.691 693.05 mo
332.497 693.05 li
332.988 668.806 li
335.2 668.806 li
335.691 693.05 li
cp
f
328.605 668.806 mo
331.8 668.806 li
331.309 693.05 li
329.097 693.05 li
328.605 668.806 li
cp
f
275.32 699.361 mo
274.429 699.361 273.534 699.061 272.798 698.444 cv
79.8555 536.911 li
111.154 497.881 li
112.513 496.187 114.988 495.913 116.682 497.273 cv
118.376 498.632 118.647 501.106 117.289 502.8 cv
90.8086 535.824 li
277.847 692.414 li
279.512 693.809 279.731 696.288 278.337 697.953 cv
277.56 698.882 276.444 699.361 275.32 699.361 cv
cp
.231373 .133333 .298039 rgb
f
281.48 695.497 mo
281.48 699.207 278.473 702.215 274.763 702.215 cv
271.053 702.215 268.045 699.207 268.045 695.497 cv
268.045 691.787 271.053 688.78 274.763 688.78 cv
278.473 688.78 281.48 691.787 281.48 695.497 cv
cp
.0901961 .407843 .32549 rgb
f
279.33 695.497 mo
279.33 698.02 277.285 700.064 274.763 700.064 cv
272.241 700.064 270.196 698.02 270.196 695.497 cv
270.196 692.975 272.241 690.931 274.763 690.931 cv
277.285 690.931 279.33 692.975 279.33 695.497 cv
cp
.141176 .666667 .415686 rgb
f
742.265 127.859 mo
742.08 126.054 740.768 124.437 738.884 124.266 cv
735.637 123.972 734.568 127.601 733.632 129.979 cv
732.572 132.673 730.534 138.99 730.41 139.392 cv
731.027 134.416 732.25 122.701 732.2 118.062 cv
732.151 113.405 728.142 112.816 726.676 114.207 cv
725.607 115.219 725.356 116.905 725.061 118.274 cv
723.777 124.209 722.372 138.505 722.37 138.868 cv
722.388 134.428 722.318 129.983 722.146 125.546 cv
722.059 123.276 721.949 121.003 721.727 118.742 cv
721.529 116.749 721.42 114.421 719.437 113.339 cv
717.594 112.334 715.071 113.116 714.133 115.001 cv
712.502 118.277 714.082 134.781 714.479 138.445 cv
713.96 133.385 712.625 124.254 712.011 120.798 cv
711.762 119.394 711.603 117.69 710.809 116.481 cv
709.718 114.823 707.577 115.089 706.129 116.1 cv
704.371 117.328 703.863 119.31 703.778 121.353 cv
703.552 126.855 705.307 135.732 706.466 141.14 cv
707.508 146.003 708.377 194.517 708.379 195.146 cv
708.379 195.774 714.925 196.283 723 196.283 cv
731.076 196.283 737.622 195.774 737.622 195.146 cv
738.275 147.083 li
739.31 142.81 740.304 138.524 741.208 134.221 cv
741.591 132.396 742.479 129.956 742.265 127.859 cv
cp
1 .831373 0 rgb
f
727.177 147.301 mo
727.177 147.301 714.204 157.142 711.054 165.128 cv
707.903 173.114 709.743 184.921 717.083 183.742 cv
724.424 182.562 724.948 169.585 724.948 167.094 cv
724.948 164.604 733.075 154.642 733.075 150.054 cv
733.075 145.466 727.177 147.301 727.177 147.301 cv
cp
1 .87451 .352941 rgb
f
711.619 181.306 mo
714.569 185.229 721.801 185.272 723.917 173.272 cv
725.38 165.105 722.701 168.777 727.68 160.693 cv
730.461 156.223 735.938 147.893 730.433 147.128 cv
729.369 146.948 728.25 147.064 727.177 147.301 cv
729.493 146.553 732.506 146.502 733.135 148.832 cv
734.129 151.942 730.781 157.218 728.444 161.159 cv
723.706 169.089 726.383 165.21 724.795 173.434 cv
722.825 183.423 717.484 185.153 714.05 183.548 cv
713.012 183.076 712.194 182.245 711.619 181.306 cv
cp
.466667 .137255 .0392157 rgb
f
737.622 195.146 mo
708.389 195.146 li
700.523 227.62 li
700.523 228.248 710.188 228.756 722.108 228.756 cv
734.029 228.756 743.693 228.248 743.693 227.62 cv
737.622 195.146 li
cp
1 .282353 0 rgb
f
742.265 127.859 mo
742.08 126.054 740.768 124.437 738.884 124.266 cv
735.637 123.972 734.568 127.601 733.632 129.979 cv
732.572 132.673 730.534 138.99 730.41 139.392 cv
731.027 134.416 732.25 122.701 732.2 118.062 cv
732.151 113.405 728.142 112.816 726.676 114.207 cv
725.607 115.219 725.356 116.905 725.061 118.274 cv
723.777 124.209 722.372 138.505 722.37 138.868 cv
722.388 134.428 722.318 129.983 722.146 125.546 cv
722.059 123.276 721.949 121.003 721.727 118.742 cv
721.529 116.749 721.42 114.421 719.437 113.339 cv
717.594 112.334 715.071 113.116 714.133 115.001 cv
712.502 118.277 714.082 134.781 714.479 138.445 cv
713.96 133.385 712.625 124.254 712.011 120.798 cv
711.762 119.394 711.603 117.69 710.809 116.481 cv
709.718 114.823 707.577 115.089 706.129 116.1 cv
704.371 117.328 703.863 119.31 703.778 121.353 cv
703.552 126.855 705.307 135.732 706.466 141.14 cv
707.508 146.003 708.377 194.517 708.379 195.146 cv
708.379 195.774 714.925 196.283 723 196.283 cv
731.076 196.283 737.622 195.774 737.622 195.146 cv
738.275 147.083 li
739.31 142.81 740.304 138.524 741.208 134.221 cv
741.591 132.396 742.479 129.956 742.265 127.859 cv
cp
1 .831373 0 rgb
f
736.642 124.304 mo
734.441 125.602 733.605 128.633 731.344 135.251 cv
731.856 130.626 732.601 123.428 732.691 118.793 cv
732.879 112.384 727.313 111.755 725.592 114.83 cv
724.256 117.295 723.022 128.446 722.685 131.402 cv
722.615 127.537 722.567 123.335 722.049 117.842 cv
721.913 116.681 721.759 115.425 721.052 114.329 cv
719.426 111.738 715.345 111.993 713.853 114.777 cv
712.639 117.464 713.18 125.563 713.377 128.65 cv
712.64 123.81 712.519 123.321 712.195 121.351 cv
711.774 119.237 711.599 115.974 709.404 115.386 cv
708.27 115.063 707.061 115.454 706.13 116.1 cv
707.071 115.469 708.282 115.105 709.388 115.442 cv
711.52 116.049 711.634 119.238 712.022 121.38 cv
712.06 121.645 713.494 130.859 714.244 138.465 cv
714.245 138.47 li
713.846 125.12 713.059 116.375 714.933 114.463 cv
716.386 112.833 719.213 112.841 720.393 114.753 cv
721.375 116.285 721.26 118.609 721.677 124.888 cv
721.809 129.543 722.467 141.656 722.467 141.656 cv
722.767 138.471 724.868 118.149 726.446 115.306 cv
727.681 113.107 731.86 113.485 731.701 118.782 cv
731.575 126.571 729.569 142.448 729.438 143.622 cv
730.852 139.529 li
734.368 129.346 735.006 126.319 737.076 125.063 cv
738.414 124.308 740.265 124.669 741.245 126.198 cv
742.565 128.167 741.485 131.213 740.896 133.771 cv
740.872 133.879 737.914 147.149 737.938 147.044 cv
737.824 161.204 737.858 157.017 737.746 171.113 cv
737.622 195.146 li
738.151 171.116 li
738.612 147.125 li
742.809 129.105 742.714 130.166 742.72 128.548 cv
742.818 124.97 739.442 122.75 736.642 124.304 cv
cp
.337255 .141176 .0705882 rgb
f
727.177 147.301 mo
727.177 147.301 714.204 157.142 711.054 165.128 cv
707.903 173.114 709.743 184.921 717.083 183.742 cv
724.424 182.562 724.948 169.585 724.948 167.094 cv
724.948 164.604 733.075 154.642 733.075 150.054 cv
733.075 145.466 727.177 147.301 727.177 147.301 cv
cp
1 .87451 .352941 rgb
f
711.619 181.306 mo
714.569 185.229 721.801 185.272 723.917 173.272 cv
725.38 165.105 722.701 168.777 727.68 160.693 cv
730.461 156.223 735.938 147.893 730.433 147.128 cv
729.369 146.948 728.25 147.064 727.177 147.301 cv
729.493 146.553 732.506 146.502 733.135 148.832 cv
734.129 151.942 730.781 157.218 728.444 161.159 cv
723.706 169.089 726.383 165.21 724.795 173.434 cv
722.825 183.423 717.484 185.153 714.05 183.548 cv
713.012 183.076 712.194 182.245 711.619 181.306 cv
cp
.466667 .137255 .0392157 rgb
f
764.364 329.869 mo
757.519 339.434 li
733.611 317.119 li
722.591 317.521 li
718.324 314.405 li
717.145 313.54 li
731.959 293.574 li
735.224 295.757 li
738.772 298.136 li
739.991 310.483 li
764.364 329.869 li
cp
1 .403922 0 rgb
f
748.156 338.107 mo
748.156 338.107 759.112 344.282 760.706 352.849 cv
762.3 361.415 755.727 373.87 760.706 376.308 cv
765.687 378.746 774.253 367.192 774.253 360.618 cv
774.253 354.044 764.026 340.896 764.026 340.896 cv
764.026 340.896 777.042 329.989 775.994 327.696 cv
775.205 325.969 771.165 321.705 769.372 323.498 cv
767.579 325.291 756.922 338.306 756.922 338.306 cv
748.608 331.119 li
748.156 338.107 li
cp
.235294 .133333 .298039 rgb
f
637.862 334.862 mo
590.509 334.862 551.982 373.378 551.982 420.732 cv
551.982 427.112 552.7 433.325 554.037 439.312 cv
554.44 441.149 554.912 442.969 555.434 444.768 cv
545.121 445.111 li
544.729 443.607 544.364 442.094 544.05 440.569 cv
542.684 434.17 541.966 427.534 541.966 420.732 cv
541.966 367.863 586.97 325.553 639.848 325.553 cv
640.024 325.553 638.226 334.862 637.862 334.862 cv
cp
.807843 .0588235 .0588235 rgb
f
555.434 444.768 mo
545.121 445.111 li
544.729 443.607 544.364 442.094 544.05 440.569 cv
545.907 440.737 548.267 440.728 551 440.187 cv
552.16 439.96 553.172 439.655 554.037 439.312 cv
554.44 441.149 554.912 442.969 555.434 444.768 cv
cp
.576471 .0235294 .0235294 rgb
f
639.187 339.852 mo
630.178 339.852 622.851 347.18 622.851 356.188 cv
622.851 365.195 630.178 372.523 639.187 372.523 cv
648.194 372.523 655.521 365.195 655.521 356.188 cv
655.521 347.18 648.194 339.852 639.187 339.852 cv
cp
639.187 380.492 mo
625.784 380.492 614.882 369.589 614.882 356.188 cv
614.882 342.787 625.784 331.884 639.187 331.884 cv
652.588 331.884 663.49 342.787 663.49 356.188 cv
663.49 369.589 652.588 380.492 639.187 380.492 cv
cp
.807843 .0588235 .0588235 rgb
f
641.516 339.852 mo
621.414 339.852 605.061 356.207 605.061 376.308 cv
605.061 396.41 621.414 412.765 641.516 412.765 cv
661.618 412.765 677.973 396.41 677.973 376.308 cv
677.973 356.207 661.618 339.852 641.516 339.852 cv
cp
641.516 420.733 mo
617.021 420.733 597.092 400.804 597.092 376.308 cv
597.092 351.813 617.021 331.884 641.516 331.884 cv
666.012 331.884 685.94 351.813 685.94 376.308 cv
685.94 400.804 666.012 420.733 641.516 420.733 cv
cp
f
641.516 336.608 mo
612.187 336.608 588.326 360.469 588.326 389.798 cv
588.326 419.126 612.187 442.988 641.516 442.988 cv
670.846 442.988 694.706 419.126 694.706 389.798 cv
694.706 360.469 670.846 336.608 641.516 336.608 cv
cp
641.516 450.956 mo
607.793 450.956 580.357 423.521 580.357 389.798 cv
580.357 356.075 607.793 328.64 641.516 328.64 cv
675.239 328.64 702.675 356.075 702.675 389.798 cv
702.675 423.521 675.239 450.956 641.516 450.956 cv
cp
1 0 0 rgb
f
639.187 333.525 mo
601.509 333.525 570.856 364.177 570.856 401.855 cv
570.856 439.533 601.509 470.186 639.187 470.186 cv
676.864 470.186 707.517 439.533 707.517 401.855 cv
707.517 364.177 676.864 333.525 639.187 333.525 cv
cp
639.187 478.153 mo
597.115 478.153 562.888 443.927 562.888 401.855 cv
562.888 359.784 597.115 325.556 639.187 325.556 cv
681.258 325.556 715.485 359.784 715.485 401.855 cv
715.485 443.927 681.258 478.153 639.187 478.153 cv
cp
.976471 .129412 .129412 rgb
f
728.76 382.996 mo
728.364 430.011 699.44 464.809 642.374 470.11 cv
642.374 478.143 li
642.552 478.144 642.727 478.153 642.905 478.153 cv
695.533 478.153 738.379 435.532 738.774 382.996 cv
728.76 382.996 li
cp
f
642.374 476.564 mo
604.888 479.294 563.178 444.685 562.888 401.855 cv
562.572 445.572 599.064 479.994 641.915 478.537 cv
641.915 478.562 659.938 479.412 679.211 471.463 cv
713.907 457.214 738.729 423.148 738.774 382.996 cv
738.04 434.054 696.368 472.632 642.374 476.564 cv
cp
.517647 .0156863 .0156863 rgb
f
687.213 353.828 mo
699.901 366.32 707.414 383.939 707.517 401.855 cv
707.668 384.263 701.078 366.763 687.748 353.293 cv
644.665 309.641 570.334 341.05 570.856 401.855 cv
571.188 342.819 643.345 310.551 687.213 353.828 cv
cp
f
752.338 329.869 mo
745.702 391.496 li
740.915 390.778 li
722.591 388.045 li
739.44 331.176 li
741.711 323.499 li
752.338 329.869 li
cp
1 .45098 0 rgb
f
752.338 329.869 mo
745.702 391.496 li
740.915 390.778 li
743.009 381.852 747.039 362.329 745.319 350.611 cv
744.12 342.501 741.584 335.767 739.44 331.176 cv
741.711 323.499 li
752.338 329.869 li
cp
.917647 .160784 .0117647 rgb
f
745.344 391.04 mo
737.767 389.994 730.188 388.958 722.591 388.045 cv
729.815 389.337 738.035 390.669 746.057 391.962 cv
748.241 373.361 750.818 348.616 752.338 329.869 cv
751.649 334.99 745.445 390.135 745.344 391.04 cv
cp
.388235 .101961 .0235294 rgb
f
562.993 449.731 mo
549.132 450.754 li
543.253 451.187 li
539.537 451.462 li
539.007 444.236 li
542.723 443.961 li
548.602 443.528 li
562.462 442.507 li
562.993 449.731 li
cp
.317647 .215686 .419608 rgb
f
549.132 450.754 mo
548.602 443.528 li
542.723 443.961 li
543.253 451.187 li
549.132 450.754 li
cp
.545098 .427451 .686275 rgb
f
428.471 420.245 mo
413.004 420.245 li
413.004 399.003 li
428.471 399.003 li
428.471 420.245 li
cp
.309804 .309804 .466667 rgb
f
447.74 444.146 mo
459.135 449.239 470.821 462.984 473.987 479.97 cv
478.487 504.996 474.35 564.184 452.207 569.846 cv
441.543 572.096 433.908 568.323 430.051 556.453 cv
428.884 552.785 428.235 548.989 428.085 545.134 cv
428.855 545.124 li
429.688 556.69 434.82 568.865 446.484 568.64 cv
449.873 568.641 453.5 567.61 456.093 565.49 cv
469.289 554.805 471.634 519.713 471.166 502.74 cv
470.612 483.527 467.821 467.364 453.109 455.326 cv
448.097 451.405 445.367 450.527 445.184 450.419 cv
445.174 450.42 li
447.74 444.146 li
cp
.94902 .505882 .0666667 rgb
f
432.316 420.054 mo
432.316 439.498 li
408.959 439.498 li
408.959 420.054 li
408.959 417.979 410.571 416.289 412.606 416.151 cv
412.872 416.141 li
428.404 416.141 li
430.566 416.141 432.316 417.891 432.316 420.054 cv
cp
.584314 .537255 .937255 rgb
f
432.316 420.054 mo
432.316 439.498 li
423.331 439.498 li
423.4 434.651 423.036 429.206 421.562 425.018 cv
420.097 420.84 416.381 418.019 412.606 416.151 cv
412.872 416.141 li
428.404 416.141 li
430.566 416.141 432.316 417.891 432.316 420.054 cv
cp
.368627 .352941 .686275 rgb
f
454.27 446.437 mo
454.27 446.437 454.253 446.217 454.216 445.94 cv
452.956 436.496 437.929 429.005 419.729 429.005 cv
400.706 429.005 385.285 437.15 385.285 447.198 cv
385.286 447.226 li
381.903 490.599 381.92 533.972 385.345 577.345 cv
408.32 583.891 431.294 583.891 454.269 577.345 cv
457.715 533.705 457.716 490.076 454.27 446.437 cv
1 .972549 0 rgb
f
454.268 577.342 mo
431.294 583.889 408.32 583.889 385.346 577.342 cv
385.307 576.889 385.277 576.447 385.238 575.994 cv
432.424 585.255 446.108 473.089 435 449.574 cv
429.013 436.903 417.836 431.89 408.645 429.973 cv
412.125 429.344 415.85 429.009 419.733 429.009 cv
438.416 429.009 453.56 436.891 454.268 446.429 cv
457.719 490.066 457.719 533.704 454.268 577.342 cv
cp
1 .713726 0 rgb
f
315.843 526.484 mo
306.835 526.484 299.508 529.236 299.508 532.618 cv
299.508 536 306.835 538.752 315.843 538.752 cv
324.851 538.752 332.179 536 332.179 532.618 cv
332.179 529.236 324.851 526.484 315.843 526.484 cv
cp
316.542 544.107 mo
303.141 544.107 291.539 537.649 291.539 532.618 cv
291.539 527.587 302.441 523.492 315.843 523.492 cv
329.245 523.492 340.147 527.587 340.147 532.618 cv
340.147 537.649 329.944 544.107 316.542 544.107 cv
cp
.219608 .113725 .286275 rgb
f
166.38 532.36 mo
159.274 535.051 li
158.469 532.924 li
165.575 530.234 li
166.38 532.36 li
f
420.577 372.884 mo
409.752 372.884 402.48 368.769 402.48 364.926 cv
438.675 364.926 li
438.675 368.769 431.402 372.884 420.577 372.884 cv
cp
406.266 351.771 mo
402.899 351.771 400.169 354.5 400.169 357.867 cv
400.169 364.926 li
400.169 370.684 409.134 375.194 420.577 375.194 cv
432.021 375.194 440.984 370.684 440.984 364.926 cv
440.984 357.867 li
440.984 354.5 438.255 351.771 434.888 351.771 cv
406.266 351.771 li
cp
.129412 .121569 .286275 rgb
f
425.134 389.12 mo
416.598 389.12 li
416.598 371.151 li
425.134 371.151 li
425.134 389.12 li
cp
.411765 .403922 .576471 rgb
f
431.936 399.003 mo
409.218 399.003 li
409.218 391.174 li
409.218 389.295 410.741 387.772 412.62 387.772 cv
428.535 387.772 li
430.413 387.772 431.936 389.295 431.936 391.174 cv
431.936 399.003 li
cp
.584314 .537255 .937255 rgb
f
454.688 454.609 mo
455.329 477.298 457.871 517.819 453.438 576.66 cv
430.834 583.105 408.606 583.309 385.346 577.342 cv
411.507 585.532 432.552 583.665 455.09 578.021 cv
455.495 565.502 461.406 526.497 454.273 446.484 cv
454.688 454.609 li
cp
.819608 .27451 0 rgb
f
471.786 468.438 mo
470.28 469.655 465.605 471.823 464.023 472.943 cv
476.977 504.589 468.155 551.641 456.854 563.226 cv
457.159 563.994 459.518 566.731 459.924 567.454 cv
475.71 553.572 483.358 495.922 471.786 468.438 cv
cp
1 .972549 0 rgb
f
415.625 575.232 mo
415.625 578.238 413.093 580.675 409.968 580.675 cv
406.843 580.675 404.311 578.238 404.311 575.232 cv
404.311 572.227 406.843 569.79 409.968 569.79 cv
413.093 569.79 415.625 572.227 415.625 575.232 cv
cp
.752941 .670588 .807843 rgb
f
409.968 569.79 mo
409.854 569.79 409.743 569.8 409.63 569.807 cv
412.597 569.976 414.95 572.337 414.95 575.232 cv
414.95 578.129 412.597 580.49 409.63 580.659 cv
409.743 580.665 409.854 580.675 409.968 580.675 cv
413.093 580.675 415.626 578.238 415.626 575.232 cv
415.626 572.227 413.093 569.79 409.968 569.79 cv
cp
.270588 .196078 .329412 rgb
f
396.387 580.849 mo
387.042 580.849 377.725 577.761 371.372 573.326 cv
363.565 567.878 359.933 560.654 361.144 552.986 cv
363.627 537.255 349.829 533.14 349.232 533.013 cv
344.649 526.786 li
354.349 528.83 369.648 536.945 366.97 553.906 cv
365.837 561.081 371.356 566.123 374.748 568.49 cv
383.113 574.33 397.354 577.23 408.059 572.755 cv
409.456 572.172 411.065 572.671 411.802 573.993 cv
411.834 574.051 li
412.688 575.581 412.002 577.496 410.389 578.177 cv
405.979 580.037 401.179 580.849 396.387 580.849 cv
cp
.403922 .25098 .486275 rgb
f
167.753 533.62 mo
166.484 528.872 li
215.953 515.646 310.526 523.619 311.425 523.685 cv
308.14 527.012 li
307.25 526.948 216.425 520.608 167.753 533.62 cv
cp
.219608 .113725 .286275 rgb
f
166.484 527.432 mo
168.594 534.641 li
165.645 535.179 li
163.556 528.938 li
166.484 527.432 li
cp
.403922 .25098 .486275 rgb
f
161.269 532.913 mo
160.639 531.479 158.91 530.878 157.444 531.433 cv
157.444 531.433 137.602 539.257 128.293 543.065 cv
126.074 543.973 125.567 546.885 127.347 548.49 cv
135.556 555.894 li
136.474 556.728 137.871 556.728 138.849 555.861 cv
138.849 555.861 141.803 553.443 139.445 551.608 cv
135.821 548.32 li
134.927 547.509 135.206 546.039 136.335 545.611 cv
159.646 536.788 li
161.19 536.204 161.942 534.443 161.269 532.913 cv
.705882 .517647 .827451 rgb
f
138.849 555.861 mo
139.711 555.013 140.565 553.736 140.072 552.645 cv
139.857 552.093 135.5 548.494 135.278 548.209 cv
134.625 547.325 134.92 545.93 135.905 545.373 cv
138.414 543.985 159.666 536.717 160.495 535.889 cv
161.066 535.332 161.357 534.501 161.267 533.689 cv
161.088 531.869 159.17 530.893 157.444 531.433 cv
160.502 530.109 163.198 533.826 160.911 536.289 cv
160.219 537.053 159.443 537.167 158.49 537.6 cv
132.822 548.213 132.456 544.659 139.584 551.455 cv
139.572 551.445 li
140.311 552.151 140.7 552.851 140.382 553.85 cv
140.107 554.692 139.498 555.336 138.849 555.861 cv
cp
.32549 .164706 .447059 rgb
f
132.508 550.447 mo
132.465 550.447 132.428 550.439 132.407 550.431 cv
132.385 550.423 132.379 550.416 132.397 550.416 cv
132.4 550.416 132.402 550.416 132.405 550.416 cv
130.999 549.639 129.772 548.422 129.206 546.897 cv
128.606 545.053 129.621 544.001 131.288 543.028 cv
136.342 540.115 143.099 537.95 149.355 535.977 cv
158.615 533.037 li
154.126 534.512 131.796 541.368 129.779 544.785 cv
128.153 547.147 132.561 549.995 132.648 549.995 cv
132.651 549.995 132.648 549.991 132.639 549.983 cv
132.759 550.047 132.805 550.195 132.741 550.315 cv
132.686 550.42 132.587 550.447 132.508 550.447 cv
.796078 .662745 .882353 rgb
f
398.627 559.509 mo
398.627 559.509 388.551 480.865 390.763 462.188 cv
392.771 445.231 400.652 437.187 402.088 435.848 cv
394.53 443.821 398.627 559.509 398.627 559.509 cv
402.088 435.848 mo
402.162 435.769 402.237 435.702 402.313 435.645 cv
402.313 435.645 402.234 435.711 402.088 435.848 cv
1 .980392 .333333 rgb
f
318.173 526.484 mo
298.071 526.484 281.717 532.625 281.717 540.173 cv
281.717 547.721 298.071 551.316 318.173 551.316 cv
338.275 551.316 354.629 547.721 354.629 540.173 cv
354.629 532.625 338.275 526.484 318.173 526.484 cv
cp
318.173 556.854 mo
293.678 556.854 276.565 549.37 276.565 540.173 cv
276.565 530.976 293.678 523.492 318.173 523.492 cv
342.668 523.492 362.598 530.976 362.598 540.173 cv
362.598 549.37 342.668 556.854 318.173 556.854 cv
cp
.403922 .25098 .486275 rgb
f
139.346 552.078 mo
137.393 551.306 134.434 554.759 136.182 556.102 cv
136.99 556.723 138.18 556.084 138.865 555.511 cv
140.392 554.233 140.338 552.471 139.346 552.078 cv
cp
.219608 .113725 .286275 rgb
f
138.938 551.579 mo
135.426 551.39 134.729 554.438 135.561 555.731 cv
134.301 554.336 135.501 550.841 138.938 551.579 cv
cp
f
138.501 554.775 mo
137.915 555.412 137.152 555.661 136.796 555.334 cv
136.44 555.006 136.627 554.225 137.213 553.589 cv
137.8 552.953 138.563 552.703 138.919 553.03 cv
139.274 553.358 139.088 554.14 138.501 554.775 cv
cp
.0431373 .0235294 .0588235 rgb
f
647.436 544.51 mo
647.436 548.153 647.025 551.65 646.305 554.947 cv
653.644 554.947 li
654.363 551.654 654.754 548.148 654.754 544.51 cv
654.754 525.445 644.096 509.989 630.948 509.989 cv
629.704 509.989 628.482 510.129 627.289 510.396 cv
638.699 512.948 647.436 527.249 647.436 544.51 cv
cp
.0392157 .258824 .0901961 rgb
f
645.063 560.94 mo
649.271 550.78 657.817 540.69 669.021 539.073 cv
673.643 538.484 679.596 539.631 683.412 540.997 cv
694.564 545.146 697.164 554.299 696.083 565.982 cv
695.021 574.496 694.228 576.476 692.345 581.507 cv
691.826 582.375 686.25 598.106 662.477 626.865 cv
656.675 621.956 li
672.685 606.291 694.642 579.304 692.035 557.131 cv
691.348 550.982 687.922 546.853 682.074 544.616 cv
669.121 539.875 659.831 544.268 654.302 555.969 cv
653.296 558.349 652.073 562.047 652.131 563.734 cv
645.063 560.94 li
cp
f
595.07 606.253 mo
582.585 617.656 li
545.623 540.507 li
545.612 540.487 li
543.136 535.316 li
519.752 535.67 li
551.373 511.241 li
548.837 530.559 li
588.041 577.872 li
595.07 606.253 li
cp
.117647 .466667 .2 rgb
f
595.07 606.253 mo
582.585 617.656 li
545.623 540.507 li
552.71 554.8 573.649 593.532 591.413 591.497 cv
595.07 606.253 li
cp
.0745098 .317647 .141176 rgb
f
657.042 545.869 mo
592.435 545.869 li
580.611 632.012 li
580.611 635.189 600.367 637.766 624.738 637.766 cv
649.109 637.766 668.865 635.189 668.865 632.012 cv
657.042 545.869 li
cp
.101961 .388235 .168627 rgb
f
668.867 632.009 mo
668.867 635.194 649.108 637.77 624.738 637.77 cv
600.368 637.77 580.609 635.194 580.609 632.009 cv
581.12 628.313 li
593.389 627.055 606.758 624.488 612.018 619.229 cv
621.042 610.195 623.883 561.141 624.562 545.864 cv
657.041 545.864 li
668.867 632.009 li
cp
.0392157 .258824 .0901961 rgb
f
657.041 545.864 mo
669.997 644.37 648.182 480.549 668.377 632.02 cv
668.104 637.238 606.078 639.623 585.377 634.551 cv
584.043 634.219 580.709 633.367 580.609 632.009 cv
580.678 633.376 584.019 634.308 585.346 634.669 cv
605.1 639.966 667.504 639.273 669.356 631.984 cv
647.985 480.675 671.071 643.942 657.041 545.864 cv
cp
.0117647 .0980392 .027451 rgb
f
657.147 545.869 mo
657.147 550.271 642.661 553.839 624.791 553.839 cv
606.921 553.839 592.435 550.271 592.435 545.869 cv
592.435 541.467 606.921 537.898 624.791 537.898 cv
642.661 537.898 657.147 541.467 657.147 545.869 cv
cp
.219608 .588235 .164706 rgb
f
650.708 545.869 mo
650.708 549.017 639.317 551.569 625.267 551.569 cv
611.215 551.569 599.824 549.017 599.824 545.869 cv
599.824 542.721 611.215 540.168 625.267 540.168 cv
639.317 540.168 650.708 542.721 650.708 545.869 cv
cp
.0117647 .0980392 .027451 rgb
f
608.273 554.947 mo
607.553 551.65 607.143 548.153 607.143 544.51 cv
607.143 527.249 621.825 512.699 633.235 510.146 cv
632.043 509.88 625.138 509.025 623.894 509.025 cv
610.746 509.025 599.476 525.445 599.476 544.51 cv
599.476 548.148 600.215 551.654 600.935 554.947 cv
608.273 554.947 li
cp
.101961 .388235 .168627 rgb
f
443.918 280.179 mo
440.294 280.179 li
440.294 179.205 li
443.918 179.205 li
443.918 280.179 li
cp
.909804 .498039 .219608 rgb
f
440.294 179.205 mo
443.918 179.205 li
443.918 280.179 li
442.731 180.128 li
440.294 179.205 li
cp
.827451 .368627 .0588235 rgb
f
430.041 157.092 mo
430.041 157.092 411.82 168.264 412.413 173.702 cv
413.006 179.139 415.255 179.669 415.255 179.669 cv
415.255 179.669 417.653 184.774 422.003 182.5 cv
426.353 180.227 430.041 157.092 430.041 157.092 cv
cp
.498039 .74902 .168627 rgb
f
464.614 193.277 mo
464.614 193.277 438.612 193.771 437.92 198.813 cv
437.229 203.855 439.323 207.01 443.318 207.01 cv
443.318 207.01 441.71 208.477 445.335 212.457 cv
454.431 222.442 464.614 193.277 464.614 193.277 cv
cp
f
389.631 210.727 mo
389.631 210.727 411.256 196.281 414.704 200.024 cv
418.152 203.768 418.234 207.554 414.956 209.836 cv
414.956 209.836 417.113 210.122 416.411 215.458 cv
414.648 228.85 389.631 210.727 389.631 210.727 cv
cp
f
452.256 202.867 mo
444.571 205.322 436.359 210.319 435.568 217.708 cv
429.603 209.412 420.661 201.961 414.672 194.825 cv
411.058 187.274 415.634 177.922 421.113 171.625 cv
415.529 177.309 411.408 185.335 413.129 192.895 cv
411.703 191.025 410.513 189.173 409.685 187.331 cv
404.759 175.56 424.446 146.818 424.305 146.952 cv
424.438 146.789 423.352 148.119 423.219 148.282 cv
397.534 186.801 408.268 190.198 424.475 207.642 cv
419.495 206.864 413.849 209.814 410.337 213.05 cv
414.477 209.861 421.703 206.949 426.45 209.877 cv
426.474 209.835 li
450.915 237 433.12 237.038 428.234 276.317 cv
431.105 276.561 li
431.929 269.439 435.064 255.749 440.365 241.825 cv
443.381 233.834 441.344 226.656 437.14 220.026 cv
435.682 211.905 444.506 205.875 452.256 202.867 cv
cp
.568627 .819608 .278431 rgb
f
389.631 286.93 mo
468.832 286.93 li
468.832 286.93 459.868 279.125 454.332 280.179 cv
454.332 280.179 448.139 273.923 437.79 276.128 cv
437.79 276.128 432.977 269.106 424.013 270.161 cv
415.05 271.215 410.832 278.491 410.832 278.491 cv
410.832 278.491 395.059 274.698 389.631 286.93 cv
cp
.419608 .192157 .0392157 rgb
f
444.478 230.715 mo
444.168 230.406 443.668 230.406 443.358 230.715 cv
441.797 232.274 439.551 230.404 439.457 230.323 cv
439.126 230.041 438.625 230.08 438.343 230.413 cv
438.061 230.744 438.098 231.242 438.429 231.525 cv
439.161 232.153 440.506 232.917 441.917 232.917 cv
442.789 232.917 443.685 232.625 444.478 231.833 cv
444.786 231.524 444.786 231.024 444.478 230.715 cv
cp
.576471 .305882 .0117647 rgb
f
430.625 240.923 mo
430.456 240.965 430.245 241.019 429.986 240.527 cv
428.978 238.616 432.873 235.071 435.84 232.927 cv
435.009 236.219 432.175 240.54 430.625 240.923 cv
cp
421.074 231.734 mo
420.274 230.34 421.068 228.794 421.614 227.996 cv
422.935 226.063 425.261 224.703 427.133 224.703 cv
427.311 224.703 427.485 224.715 427.653 224.741 cv
430.374 225.148 433.82 227.984 435.419 229.421 cv
429.872 231.581 422.154 233.62 421.074 231.734 cv
cp
438.261 229.969 mo
437.425 229.133 li
437.208 228.915 432.053 223.8 427.888 223.176 cv
425.002 222.742 421.829 224.876 420.308 227.104 cv
419.025 228.981 418.804 230.957 419.702 232.522 cv
420.329 233.614 421.744 234.024 423.518 234.024 cv
427.487 234.024 433.242 231.974 436.003 230.892 cv
433.943 232.252 426.583 237.465 428.586 241.266 cv
429.02 242.086 429.685 242.527 430.461 242.527 cv
430.638 242.527 430.82 242.504 431.005 242.459 cv
433.941 241.732 437.657 234.899 437.657 231.274 cv
437.657 230.22 li
438.261 229.969 li
cp
f
439.245 230.204 mo
439.245 231.053 438.557 231.742 437.707 231.742 cv
436.857 231.742 436.169 231.053 436.169 230.204 cv
436.169 229.354 436.857 228.666 437.707 228.666 cv
438.557 228.666 439.245 229.354 439.245 230.204 cv
cp
.886275 .533333 .176471 rgb
f
769.158 634.574 mo
763.692 693.921 li
763.692 693.94 li
763.692 697.824 752.85 700.97 739.479 700.97 cv
726.926 700.97 716.595 698.197 715.395 694.639 cv
715.307 694.413 709.802 634.574 709.802 634.574 cv
769.158 634.574 li
1 .619608 .0705882 rgb
f
739.479 700.97 mo
726.926 700.97 716.595 698.197 715.395 694.639 cv
755.405 691.975 754.196 645.998 753.272 634.574 cv
769.158 634.574 li
763.692 693.921 li
763.692 693.94 li
763.692 697.824 752.85 700.97 739.479 700.97 cv
1 .384314 .00392157 rgb
f
763.212 693.902 mo
763.171 694.001 763.362 694.98 761.692 696.165 cv
753.222 702.433 718.364 701.967 715.396 694.639 cv
718.645 703.794 761.926 704.57 764.173 694.385 cv
764.173 694.385 769.15 634.676 769.158 634.574 cv
769.158 634.574 764.553 679.646 763.212 693.902 cv
cp
.576471 .152941 .00784314 rgb
f
769.158 634.574 mo
769.158 635.263 768.352 635.921 766.897 636.521 cv
762.434 638.359 751.837 639.647 739.479 639.647 cv
729.993 639.647 721.539 638.891 716.113 637.701 cv
712.161 636.846 709.802 635.754 709.802 634.574 cv
709.802 631.772 723.083 629.502 739.479 629.502 cv
755.867 629.502 769.158 631.772 769.158 634.574 cv
cp
1 .454902 .0823529 rgb
f
766.522 635.612 mo
762.021 637.466 751.406 638.664 739.479 638.664 cv
730.341 638.664 721.9 637.963 716.32 636.74 cv
711.286 635.65 710.797 634.593 710.783 634.593 cv
710.794 634.562 711.449 633.132 719.139 631.876 cv
724.633 630.979 731.856 630.485 739.479 630.485 cv
747.099 630.485 754.32 630.979 759.815 631.876 cv
767.492 633.129 768.162 634.556 768.177 634.556 cv
768.173 634.566 768.001 635.003 766.522 635.612 cv
cp
739.479 629.502 mo
723.083 629.502 709.802 631.772 709.802 634.574 cv
709.802 635.754 712.161 636.846 716.113 637.701 cv
721.539 638.891 729.993 639.647 739.479 639.647 cv
751.837 639.647 762.434 638.359 766.897 636.521 cv
768.352 635.921 769.158 635.263 769.158 634.574 cv
769.158 631.772 755.867 629.502 739.479 629.502 cv
cp
1 .862745 .482353 rgb
f
766.897 636.521 mo
762.434 638.359 751.837 639.647 739.479 639.647 cv
729.993 639.647 721.539 638.891 716.113 637.701 cv
720.576 635.862 731.173 634.574 743.53 634.574 cv
753.017 634.574 761.461 635.331 766.897 636.521 cv
cp
.427451 .239216 .0470588 rgb
f
761.072 562.805 mo
755.822 564.868 749.7 568.361 748.517 573.871 cv
745.167 563.956 740.168 554.858 738.74 540.97 cv
740.029 537.026 743.945 533.054 747.174 530.456 cv
744.031 532.71 740.391 536.016 738.603 539.421 cv
737.611 527.165 739.896 513.71 744.34 503.143 cv
743.453 502.719 li
736.468 518.86 734.586 538.83 740.92 558.647 cv
738.195 556.918 734.021 556.356 730.789 556.507 cv
734.191 556.576 738.852 557.508 741.325 559.893 cv
746.556 575.715 750.96 582.158 748.296 599.567 cv
745.813 595.347 739.223 594.05 734.394 594.026 cv
739.514 594.317 746.71 596.219 748.056 601.086 cv
746.057 613.251 742.202 625.8 737.18 637.444 cv
742.581 637.541 li
746.545 625.125 748.88 614.33 750.355 604.945 cv
754.632 576.624 740.078 572.295 761.167 563.032 cv
763.061 562.209 765.006 561.492 766.998 560.931 cv
764.984 561.413 763.008 562.054 761.072 562.805 cv
cp
.180392 .298039 .0627451 rgb
f
743.946 532.996 mo
743.946 532.996 752.744 535.125 761.1 530.865 cv
769.456 526.605 771.75 513.604 771.75 513.604 cv
771.75 513.604 742.686 511.532 743.946 532.996 cv
cp
.568627 .819608 .278431 rgb
f
707.032 543.313 mo
707.032 543.313 718.337 541.434 725.873 545.201 cv
729.359 546.944 732.944 551.176 732.514 555.308 cv
731.875 561.454 724.481 561.092 720.116 559.792 cv
715.162 558.317 710.623 555.029 708.459 550.235 cv
707.479 548.065 707.032 545.689 707.032 543.313 cv
cp
f
730.216 505.269 mo
730.216 505.269 726.406 511.167 730.216 518.785 cv
734.025 526.403 740.291 523.7 740.291 518.785 cv
740.291 513.87 730.216 505.269 730.216 505.269 cv
cp
f
741.808 490.232 mo
741.808 490.232 750.714 505.839 745.339 509.156 cv
739.965 512.475 735.664 508.051 735.664 505.102 cv
735.664 502.152 741.808 490.232 741.808 490.232 cv
cp
f
779.614 555.4 mo
779.614 555.4 755.529 548.15 753.194 560.316 cv
750.86 572.481 758.355 574.447 763.763 572.973 cv
769.169 571.498 779.614 555.4 779.614 555.4 cv
cp
f
720.427 582.722 mo
720.427 582.722 738.285 579.281 742.258 587.022 cv
746.231 594.764 742.545 601.031 739.228 601.031 cv
735.909 601.031 725.833 597.959 720.427 582.722 cv
cp
f
747.671 634.789 mo
747.364 633.654 745.183 632.748 743.34 633.541 cv
741.496 634.335 741.466 634.713 741.466 634.713 cv
741.466 634.713 738.762 632.219 737.104 633.088 cv
735.444 633.957 735.905 635.582 735.905 635.582 cv
735.905 635.582 734.522 633.995 733.171 633.995 cv
731.819 633.995 731.635 637.661 731.635 637.661 cv
747.148 637.661 li
747.148 637.661 747.979 635.923 747.671 634.789 cv
cp
.427451 .239216 .0470588 rgb
f
766.562 632.5 mo
763.044 632.5 li
767.679 633.559 768.165 634.556 768.177 634.556 cv
768.173 634.566 768.001 635.003 766.522 635.612 cv
762.021 637.466 751.406 638.664 739.479 638.664 cv
730.341 638.664 721.9 637.963 716.32 636.74 cv
711.286 635.65 710.797 634.593 710.783 634.593 cv
710.793 634.566 711.269 633.563 715.914 632.5 cv
712.396 632.5 li
710.734 633.134 709.802 633.835 709.802 634.574 cv
709.802 635.754 712.161 636.846 716.113 637.701 cv
721.539 638.891 729.993 639.647 739.479 639.647 cv
751.837 639.647 762.434 638.359 766.897 636.521 cv
768.352 635.921 769.158 635.263 769.158 634.574 cv
769.158 633.835 768.225 633.134 766.562 632.5 cv
cp
1 .862745 .482353 rgb
f
652.306 255.039 mo
651.241 265.443 li
633.055 265.443 li
633.055 262.002 li
633.055 262.002 627.279 260.774 622.609 262.74 cv
617.94 264.706 612.41 265.443 612.41 265.443 cv
612.41 262.985 li
606.635 262.985 li
606.635 265.443 li
600.245 265.443 li
600.245 262.985 li
593.241 262.985 li
593.241 265.812 li
585.745 265.812 li
585.745 262.985 li
579.724 262.863 li
579.724 265.075 li
574.317 263.969 li
574.317 261.143 li
570.508 259.734 li
570.508 262.125 li
570.508 262.125 566.125 260.037 564.568 256.473 cv
563.012 252.909 564.776 243.307 564.776 243.307 cv
649.644 251.435 li
652.306 255.039 li
1 .807843 0 rgb
f
654.268 160.067 mo
647.071 222.548 li
647.071 222.548 652.547 238.933 652.642 247.779 cv
652.717 254.686 652.314 254.988 652.314 254.988 cv
652.314 254.988 622.495 255.316 615.941 257.61 cv
610.446 259.533 586.06 261.687 572.145 256.151 cv
567.109 254.148 563.895 248.982 564.719 243.627 cv
565.088 241.232 566.251 239.26 569.083 239.26 cv
576.292 239.26 594.97 241.226 598.902 237.294 cv
602.834 233.361 608.732 222.22 606.438 216.649 cv
604.146 211.079 589.074 160.118 589.074 160.118 cv
654.268 160.067 li
1 .403922 0 rgb
f
652.27 254.991 mo
652.269 254.989 li
652.299 254.988 652.314 254.988 652.314 254.988 cv
652.314 254.988 652.489 254.857 652.587 252.794 cv
652.491 254.86 652.317 254.99 652.317 254.99 cv
652.317 254.99 652.301 254.99 652.27 254.991 cv
1 .611765 .458824 rgb
f
633.308 255.6 mo
633.308 255.6 633.308 255.599 633.308 255.599 cv
642.399 255.114 651.547 254.997 652.269 254.989 cv
652.27 254.991 li
651.537 255 642.39 255.121 633.308 255.6 cv
1 .494118 0 rgb
f
633.308 255.599 mo
634.528 253.748 636.518 249.769 636.518 243.31 cv
636.518 233.95 633.348 221.33 633.348 221.33 cv
634.785 215.996 628.162 179.863 625.187 164.287 cv
636.163 164.132 645.511 163.259 650.466 162.031 cv
650.466 162.031 li
650.466 162.031 li
652.776 161.46 654.132 160.832 654.259 160.147 cv
647.067 222.55 li
647.067 222.55 652.548 238.93 652.638 247.78 cv
652.665 250.137 652.636 251.724 652.587 252.794 cv
652.489 254.857 652.314 254.988 652.314 254.988 cv
652.314 254.988 652.299 254.988 652.269 254.989 cv
651.547 254.997 642.399 255.114 633.308 255.599 cv
1 .247059 0 rgb
f
647.509 222.557 mo
649.617 204.468 652.104 183.8 654.266 160.099 cv
651.415 180.573 649.012 201.248 646.62 222.644 cv
649.923 233.145 652.815 242.125 652.519 252.989 cv
652.481 253.673 652.508 254.38 652.304 255.037 cv
652.781 253.733 652.821 248.075 652.763 246.77 cv
652.532 239.904 649.638 229.155 647.509 222.557 cv
cp
.6 .164706 .0156863 rgb
f
654.268 160.041 mo
654.268 160.768 652.894 161.431 650.466 162.031 cv
644.99 163.388 634.147 164.312 621.672 164.312 cv
610.033 164.312 599.809 163.505 594.049 162.296 cv
590.892 161.638 589.064 160.851 589.064 160.016 cv
589.064 157.637 603.663 155.71 621.672 155.71 cv
639.672 155.71 654.268 157.662 654.268 160.041 cv
.827451 .333333 0 rgb
f
621.672 164.312 mo
610.033 164.312 599.809 163.505 594.049 162.296 cv
599.534 160.93 610.357 160.016 622.813 160.016 cv
634.472 160.016 644.705 160.822 650.466 162.031 cv
645.511 163.259 636.163 164.132 625.187 164.287 cv
624.032 164.303 622.859 164.312 621.672 164.312 cv
.686274 .109804 0 rgb
f
710.328 309.057 mo
715.485 315.824 li
734.11 291.885 li
725.732 288.338 li
710.328 309.057 li
cp
.403922 .25098 .486275 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Gardening tools illustration set.eps)
%%CreationDate: 4/1/2019 12:41 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H`neeEZOrT!;m<C"pBkncW0'gF*;!MhV1b-L0g70D(R#cBT]Do>9nRB,c.(1oGct`LodW=:`<Kd5J,nc,eKf:?($iF3-!sP
%Idd+2G@,jimd"4C^]2&ur\,FC2G8Ic@m-Xea\RBSp\r@J?bH@"^<:#ESa]/:p?MV>hgP1klYlh$_u%d;Ie1h-q_-iVpu^`M0>Df(
%ou!E7q3Cp'Rtq%0m?_1os2ToX0Ah0VpNFd0+19EYIJ;jX:Z$ZslHQdK.6el<VYo-=GON9Di_R>dl>PO.q"[:LRI]ndchcP5Z.%Bo
%nRp"bB7KQ=M159ogMcHpm@lSbn,;5VT<Iuu;Z;.A=20"WX*<HKqr,f/n(rQm5CYoCr8IUX^O#M1n%\\cO,%$?ipBg^rpn=CDtslX
%XUdXsa0H`25K8`W9\cVsa52mTn?]jo@p>uuba'>D=n\"W/rsSGji<mpn*N?PHi&jgJ+t[8hgFtfK>47\&)[BWh>^sqSSC:trR_)7
%(Z0Z:p;;CWqVAW(kIT-=fCUHZ^NfXP*H@\1dkBVJmI6Ifs8!ddn`I`mhL95^qu)l=iSE.UfN5=Rn],Qso+k[iq*k;Lf5JG'Mtd7B
%2uBpdP.c]gDsQq\G(4?lXAg:ijAhXS.#iZ6FT0lfO)s8REK,M[puh?Fs6RY8?bQ@5kLgpQB-TA8gjf+Xh&#8+:A`'>4Q^h>$U,Wd
%O]G9QKDjPGX3:K,n<a+Wp--4hp?gK%82fg@ro>hjNlOB[-19gdf3c2'rsBk2)f.^mnG1d-esGiTjaVVpnF,]Xhu27NN.TCToXu:7
%mVA?fPFqcPrbd2Yk?i[NJ,+jAhLG:c5Pk4phgb3\T0@\nrbpXWr:d[mJ,B4tII8a0rp4S&QYl["_b^<DjS[W+++IRrrS*P8D22Z(
%S)""WAc2LZrh9o&Mf^"BZ/&+1[*KS4mX;dh2t)4oqu=mbffT*#p-F1Da)]Z.s0qe'mrJ?,[sr2"rB.o'QQtgFE*qWbn#[lu8G.bB
%s7]uP[XUeqd(*J4r=<h]I/dte5Q:HIk3FZArl:K=^]%O,jj1\hoC\R`&,_?8jfSFc44rE]./n3=+)?f?I10rM+F]jZ[Jkeaq2aG3
%KAFck)^2uFD;,d#[='hP`-q>(r3JIirp"^=e=1CVcIDOAYJ9kp?iP`+d"-R!pj\5#pH-`uI[<.nj_qm0S+g:(qrTEc=7U^K^3e^'
%4i_oq5'`0:cT7?iO]1B#1/F'NNQ3mR7=$qk*7((]#9L1^X;uI?qo4**p\X@4%q#@if6Ygd^AI']*rb0tq_/!B00>M!"7U1&!0"D&
%;2Gn;Nq9XfIL04-F@6*.G_3X#O*^QB2=JUM!jcd+-iE_NpUbp#oAu>-IeD[EYQ+%Hk<JA:jGU_]SQd]sB_?]_SWlG_s-!uf"8D[S
%.BLiU;a,ZQ'I3OM\[Xfp`)on/`1_-bkUV-/^@mUa:0DK9Wp"err;Y9+]'=QcrP^k)?[cB3r$V77jZgKTp@H%Gpu?RJoARrLGAmML
%Ka38,Dr5t[<r'Wd^O,_B>FB'er`X%fmf#hcHIU+DoMITjIXI[\e'!TogM!4IH$M7hJ+g3ug9<+=cX1&RpqmV\^3F:Vld$Z%qY]H!
%p2U-32g4?TcXnloLZ^<Sq8lulne3gD='DBQT<OICCaJmH/h=gO3ZdHDg77reb,Zl\bj*+7IJ3TtFpcs^3e9tF*rZ^@5K(B]nat2m
%+..b#Vh)\_ftZr+cenY9mc2?t$f/_lX7I"EBD@$Ro7ueLr8Q\cGMde+Df]gKM/%F.s7;GHjHL2P2s&85F1*CCs',;;c-?9h?h`I1
%^M1Ft5<Inhs.4/D(]V2&^Xr2V1k/\hrCd.5r7?EVro0PRC`NCdh=iE@M>^+_'4@&)T$'cP<F4:P-4"Cf]oK\jpKV(jX89DVg(&H8
%;^8EPhI^!Z\\5@OmI_hkBqP*0^Y2m6IJ23`mJ!Wqm[oNW*n-AHk[TQ3ep&+Zj4/B;O.#@nbI$^tqnt]po6J'=YNMh,#.]0H@M`s`
%_`Q@rIp2Y`qq(W_q`"=Tr&sTE]RMU6HY'tDqUla9jF?T1N;L'0;tnUEimIL=pi##<bC<=c4o=]eI]r7I1ZJG<rV(%(dc!FgU]4s*
%RlN;TJ'EGuIj9E7r$9tY8G:K\;d+1uYFGLW_nRht_iROhfd6/$?bNn?rctd+Zi-K^\*Q'LZd8Ql#/Mf/,-NJFTD[c8%5A@NA3W6\
%5K[d=i?\9_fmZ`j>P=Q[)uOjUfl2;C_>$q'ZO-0D:L94_m)@lra*i"^r-b=;[GBQ[oCMS&o6R"S_hMcMY0Y'6<dHrGOM&$VIX-6g
%H?rajo4^>[VtO)^MG;"\FP'EqEFKIOZC]ZOEt'(NbsnQZ*ID(I%Ck$`YV.nXTB<FV4DZi5)qDnsGFF9rbLcG3?>S+Ug$#%d$i4P/
%r5<3#)0>N:O08@D:;(M*i#cRfI`js;Ia@nHGOXngds(XFI;8$R^D&?@-K_ZAg2*Kqqu2A!hcD^mT569,S()$NZt(uZ`MWR5dhG&'
%7?GZipAJ@@;jjL2R]2HdVVnBJeXi(&Qf#CP.=R_OR%XEOdj2*q?iOCYbn'd<^\Cn&MBD3n*G+d=la>R6@4sCjVloa8]7'Ni6f?(@
%_M\k[f;:\@)^NB,9=$o?D"&tp7*dcY?J2"Je:q875uqg+[3)pEr.DcV"2EST4R6QX*'__5af^]6!qW+t_KiFIjN<.5UMOKrin<Z=
%2,4TS%fJ@U1eI'.b,38OHFcc`9pE"4$Dtp$Vhn-2:OZd%"Ht+ad(g@C"R.g%18]ciNp"-A;<YOE0Cr9?gEYp/91(6;f5^Z*EVo:c
%JD[nJE3K<>A%qd;cUVXGGSFhMPl9tFa-SA1@BXQmHd9+d9T+1M[tFF.2eMOJ[4*(W%K:ngIsGm`q6^ZUI)=M,[HXaD[W9.>A(hVs
%i=]HeZX;lnNl>8H3>Q^MkZ9aj?M6ZrV57IUqloO+6\5^Db;?oK733sa1*mj^r30ImNLjc][BH6FJ#>7*6hBNN]heXoN5'3nI\^Ik
%1QQ^dm5/lMn9WV>);K['m"WbF4W_jE3jS_!RL3>c2S>NNCRK/(M\5ii4HZ`0P\7saahC,0(k"8G/TB8cPr<VWkrP>U.+E^;C\C7S
%!p8UAI[p#ohX&-$'0Fpr0b0^`fmr#Fm8NY)4]bG&1_B[6ftqj&ZF*3/>qU?rA"Jt[M>aFpJ7QTuH*+1?b@=P`,*#ifbq-<(+7_'K
%nmCU/r/\TKTCY8r.gH=?[XE90@sTCQMN,c+d8G?\CG=0,K,Pgg+.d-sQt\g8V9h"9oK]#3AXHh5hSJFq2#7F*]S!-O%nt<d6c`jV
%<;.!%)%05!0B'-X@s\RF*=R6%:[Tm'a$:)^QjEh<W6fHr]t<`@/$UQ&(\\s\Z\.gL5?'eCP-1hJqhdmM"]UPIc`)AlJE19H<0/O4
%WhIQ]$`Zb?8EpHfM(/fY__rFMC^@pEV?;b^RLci3L'_kH8s:DA;^.0We"!'si?lN%.a6lmB)gl]:G4A5f=j/$3LTPFm3N6hN$gEM
%?e_SdbYB7`f1fg'.Q*3CiCj*tp**i?pc(c7pG&u/[!\Pj8J@8YDN'p2)_j#)Mn0.^l"OnfB]R+adHL,jA%FPT`m?`'1la8Q??7^M
%=??E+iM0!)#pY=;b!t&EWY.ge`YCt.`mm)T?KdlmVM,R+loN/MX4et+m]XY$p*iM"4P+ruAMM2rI#34/#h'uap*+.Hm:CCabNO8k
%dIesE4W1&(P%&8+2RCn'Pc9qKBhH:-@gM*"UZ[EP7#ZrbIqCN"D>-A,+o+[5/,tp_TZG'L>D%<Q1ghk*PCtQN2R0MpA"rgE346oX
%I6>#WO`nQspm6tsF&`),\9R[BN=-[=@J\223i%C5$geN=A)o[CI`j]*@n:+k[0J@FbF#j*UqT?YoTI3hBVuZu;>-coHN1[ms8J":
%>(e5Pd-S?SDJ'C=N.$'nnXuI_UuSl'2XZ]djq3R@l`:r&^K"buqK6PSn#pcp)L#qo=PqC@fHgTr;9&,@nZO<0^EWC%3+<Tr_WW[P
%M\3/3Gh8i7l0@tZTBmMc*jE$sR0M$\JslZ0o\*TuB#AK=RdnPO$I&'q3Gtn8o?/Xk*=CDQV7#:4VtN1BlcN>TYX+#iD^rWJrmu7h
%i&8DG=r19#24]Y<\eL@27&(Cr#NDE:+K+2?h1a-&;.4k9?sMn1j$AJ)R20?J#SE`H\Bi!9cR["\Sf$E(N9pJf&K?'Y^I-5b,;r?4
%9?bE<i9qAf\]/GZ9>!$.nSI)d6']a"8l8t"&Q&a6?5R!O2HC#L/6,!%G1bOBg9_bb/Pce`%#.udNOiq9mpON(Q"eBR)jRJV4k^b?
%2HD=10Sps?f/Aq%CfEXPkaj]T46+S>n`[m'^"5.a?>Nq1faKSggZD/8R8Xq;KF@W*6?rj._2#K[BFe]2ZSHK^4T+^;A)cCd`4q@i
%Iif@(gmGST9301MM7Q3qo5^$f4prPSb8qdfLHgl:r80Ng?2>"D9YWH;pd7.@1Cj8r0]u+,W)/>nG+2;-?f1h">PRdes$Iffc!I^3
%q0MC=onV&Nj#W4sOOJN_TiH3H:\rsUrZhFBSMhHfq='`cdIr't5Q<C#rhH%OiD1Nol@0ic?[T_cIXrO!;K:]OY9<f#ocF,--Jg]T
%a4GD1G3Sr>aEE(,#>ZGUIJ*#LJ6(QTps$_&H1$GPG^f\lbD2]RrK4j\cNF=Em.nohIr@!$0\t'(6%%dD_@ceQrj/6p5CTN:][C<i
%RC3Ze8ss06B<rs'oeC6b<JR0kR5'qBm\DZ]rpgL//+)j,hI4pSAQ-k2$)H]#4:M,%9sP!0'&^VR^f7+[:J*o*&"iI'3Zlfj%FR@o
%%BY*Sl/uPN$b1&#6S0qob09=!Gi<'ofe)CW0[lf1=?ClsO!PfiSn2R'`@a(j7rJ96QH,cGl'F3*^%P.aR[q&Jgp[T1ZJ?pr(#,SW
%FZo)ae@_ZSZQj3tJl[U/2TqBh-(dubda6Z_[GBP]9]d3Il=Y=sbMtEXqdF&_ajZlaouDda]EoD35dQ6Jo3mX!Co4YL9bZ6Bb)`FB
%in:KoC9sKnQF\>Ur$j%mh<paFe'$pJ%;.RJ?Om;"86Pht3[AE#\#J:F/jJ&[9*hc)L7LAt@nli"S_qjP.K7n)EV3gf[<H)Pc8:Tq
%K8qTI\6D"O?(sVmT=P`lAUb]^ZG_m]L/bUjGg&\,AJcuk0s+l>VW0BGHUeniIATb29D4'(O7AsbJ=%F[-\"^E&]s;NS0MHOSG*E]
%P^"4VE(BM"m"glI%n&!p<VpBkA=M2"BRUr`+&Qj#=l10:OkVEZYj'#kJHOAY",C1@aL\p.fDr0BoP!)`jX[UtB2Z&1!(V@*29"da
%).E9:03mYH;pT'*O0<WWN5aVu+kT!8,<rXi$Lt21O'F_iCtdt"S3D3Hl2,'e4NcVE2XZ=`Z;0<H<ZoL_+0LloikYAW&'QAJG[8.W
%&cla+NH(?Z8CL$Fk+`Cb5&647Zm0A3(g2L_C=PgY:^7+:,<jig;Sq(m$"pE;Xp?Ih\Od;W%4E&OJ<mlB-p%bi##/J@8%osU%Pacs
%?3&;XCuR&1Uri#A#/@T^4Pqng=%m1ne>sR8T.?m[_X>uK!Bco9a0ZNN0B*XWqo!kT\/J>6R2V+ie',O:=bd;]QR_4NpIV>Ek)aV>
%5]GYg-EtUCj(sQ-c^KHW8fZITdNGrAJaHmDj`rQN.DT`=jgNUYWS1G@eC<S.Ga[#[XkdQrDhlYRDqS0QM;*bGn:rf"Lp:G>d0u_g
%UUZY]VU#DHZ8M?2JX;ndC67.RKTpNfJq>Xdl\""lV#Y6CgO6gM';dl.V8Ws,Nj^Qq:"*Bk]5ciViu;qX):1D;;#%uBff-5@-4f<X
%qhW/V>mRCHrUH&R2hjf#%<,6CVSWO<X93C_<iU&pgiNRpp:_RqT1Ma3'^^VYblh9AGt0h+"P:PO;0fI"&(@m6A#D'e"TVTm]QHGD
%2D%oY*dO')04be.j4g1!W#1kED\_$8UOAuc8i@JAmX3Y+_r>(a!K3Tg5(,[BfjF6KB&-^V)5MF.>G:l0Z-B=:E'Pe??Dlam!dG<T
%[NEE,32CUAXU95/*/;S.<PjKm$.d8pe@AgAmJl"t$Ib2o9EcABB#dk7>_[Q[?F5u$)?o$ON,oENR<^XuR*O%4"uNPi0&q$-!]Wlu
%q-#q/nCSq9Q-0r]>T7=5<+WI7\njOHqo=Y<]>142hmOM_HY'Nnp_fLO1r4_X'mi3*D0'/\*tqIc'OXMLg"Vl,,g94D?gOncQTLK^
%,$Sp.'Il6D1f"FA?lZcFKtjk4k[s5X_qBsu0JP"?X1:oI]S8km63nM@;g+fj/;Mr3.>W`rci]JYEK(p?0>;'bo!#loC&2T!#asiF
%,Fg[$0hlC]C-gRR<r\,X@[m-W[gt8&E)^-=Zo?pB5tZPk_3(B"h4B4K;_1LIqf/M*-J"pUX(B<i_h,,5P-aKT2a/P_4PTq=]<Rj=
%>e[r-UlA;/)po'`<7G>i]Yn67Im2qiS&*IGH'GQHV*\sTJ&ll-'Q:T*)M'4Ej5b`N^22P[mlW)eV&/h]f"E%-PR.[DA&_eMfgk0r
%o";B;R*0+"E<Rh:KI5T7->#]'>/"fKIDKdKc=GdFKcQ&f\n6G/hrpcddio#*bG^k^O*>'NCn#91qj[4k0U#2WYs/AFe(!OG@4rA9
%R3k%W>DGol8B9(sX."o#!OXD<_cJ<fCSa7eh3P1e:alX`&-U0uh1P[`PtmV\_$#NBG:FV.9UJG>p(3UD#JjZ4W?%;qjI3[VG"3[o
%h:k'aa2qKf+_W^+m>\6B4c[ut*u\XdPGEBgZ&4N\)kmEqN>!9iU"sq5=Et3/T5V?PpLK;P9iW.mE(?ng.Whb+cY?D"r4b5:eip`O
%q@c;4VP+:Dk"*U],A"GuJ/LH.o+`,W&.UgnD4<`:?4A^,"Gr'%+dZg`G1^Tho$g9YO8ulEXMP+((WTt')2B9ZeQgO%i'Pgg==Q\6
%R<LFF'@s8:KGh>C<c^/5g8\=DTq:U)^WUo<8$j_lRZ319k\<#j\I.c\b`Jc*`i,3#ltDEEG-rV.#H0OO*paP[`^!=-jfcq\a+Uk<
%#-Zj3fnKp2,F^0ari%'6eHQ&0AqKH[QY:sX,B"[50X4<O:CKNJ/]tPT<?*A)9*/5SI[o/,p?d.;.:q?h2$^L*L6lW;JZaa!d`XJ2
%ZNK#ln!n>:hY4g#miJf<8+Q\bNh9M(Uq@\CS=k.B"bU2lNQMM4N/q"d#k?%(lj9$/?C?D80aM_>>B)'Yqe_d"V7OQ0L22Zbgu1NP
%&?!Kg$>ahV]`N-:F>qWCc\W!1(OEG.DRO96#IKt%HRF#Y+rYD-Z;&[Y=tHJ*D:"7q8LL]\&$[D!aK2<D*haU;)'q!19Zm#Ic6ZA(
%:qnNk"$NoRiMGJ-prJur[S9rBJYTs]!R(]WnN!O$q"j](A`sT@D;_k)QM`/8Kdf:R&U*-4`);aAD!!uCpo2K-W7f`%pT>>g_G!?k
%#3_kLpu\+="U;S.=>hf>/#O^*Wn1Zu0U/msLO#4\Gp&CT'aFb,:(Yd"Ks.]j>n2q/O#s"c+jKe.&9Jjg-7GoEZH(9nL/,6#DZF9Y
%+,u^2pK7\/OleBcN"D91V[^Yp'>R\9#;F#l9*u`ngSfpE<7mSH[b1V*A$3eTPi/6.W,cQI><B/]\1e7?Ar`9>X'WiD3En>J-HB`G
%=0_-inTo0l%-e6On6"j^[*332@>s0VG\K1T,oH7k>FDaT:sh$3Efoc\[HV#a's*@J\g"N.BEoNT<XEJp7u7c\eg\8BjI_J$#^:%p
%>BWEPU`<2XXdsWYOu](f.o?TA.>FA!I@-<j9M\bs2/2uW5cZZ+a,ZiWA8M']YicR:O\_9Z\5QNU\.EQ.G?US@53-$U2(S'#7[o@2
%_8E=0ajKV%L_fCFm2j([4*Q9L@B7d#')QH_S(=HgoRgE$'R#!W2S#J6+);r;hPY(ZD0]Ys.2<<(Y9^Ld$Ig:75CuP=_$JY+Y?5m&
%[0]e`?^CRnONJGk=Ut0j<tE,4%8<4fc/T(T?K-_OGH;n9"*e17R.2<@-oMnc!R<uo,9@rd$jZBIBT?)lor1;='Y'=mBu4X>`+cET
%_bnVpb(q3L@H<RVg5%IGeBcZ2O'6KWmcaY-*SG.KkG$%#2U,)4L+dEQkL)em@:7(=0l2Y2P#HK0la4fGj^S_I&+sLs@`7.Qi=s2)
%@MDW?5=pcF^Kd"P$e@j^II&>fO8#,_/pi`_M[C,:Y'n(L@[l#-@$AYq/g_'M1_.T'IP<=t-*nc(__"gnI'0QER;HZ5<l]&2DN]dY
%$E!"4(i+jdZ)E0_"o?J21l[5m?Og5V\R:M2Y+KeIrGE,Vg-Q4%$AmcMGS$6qPi/uBP1RI0UkK(oK4E/Id7#[4+]s\B9uK:FZ%3q)
%>M\Bo=_S=UJ;,!q#cqZ4'.e<OgCqU"Nj`Y.@Bj5L&n*O`'iWT>6"l7D=mAViHl`;Ikt$VWkAH8+%`<p98A]^BHk:@<+'IbM0gf^2
%0dHJ4Lg\dk44e_@E*hn@PWlEfMZr+'9Qh:WQ'd+_q-o"K_%V(gD"uMah+`m^$O(\m5lq2'-caY-XoRqqNh%1U%(3Y\jp2*IPTs)I
%KmG&!4h:3gZ-FTM?oKf7ioPn1f6Ti4.H/fce??QW+X_mb+S-e%@)a!Q=6>0cKd^cV.nBo1F(dhO!@U]iK+':"K5uQ5F;]'Z#'B5Q
%0WoRgn%`T>Bh"mP;=cF8ONFu0NQsC!?MHYBP%u1*DL-q])J<K?)/99M_#t'iOQ?heLY\Y3ltS:+1@4h:'FuN$-8Z`BINKC:HFfWS
%eDXgQF2GGaa1Ms*3Ug>b/HIBFc.a$S#_bR5\.TrLA(,_6dma@)Z6j6eBD6BdE=Semi(EQ.Yf9@5H7]gbl:sXVbcBD0O37h'huPiA
%Q=g>oS*4\BNNWub)GF?pRHs?%Da#uuk92.4pL72E55Ta$2n=)YKgNX7cu[u3iX>nNC*:=AgkX#%/:&&nfdK$=O>4Wi_]IrU6?!6[
%S$JGo@NeB:2]k'p2`Enb!enn\Aek.5rp=MEic5<d_D*;X&sbS3:eT8`eT@pa,(U$OJ/$R^%QbX(\@BZA*r\?ib>C)]+Dnf42b#Vu
%YV1^'fe@b,n'r7`,H(U^WA+`g=`JBqq?.]8))U%sZANcAU*3O/G/>V[J83:2%%C/AOInPU9]o8pY#\R!Of*d'?ild:]GeXcObNAd
%nCKR+D;8Zh"h7,.n<c3a[!7sB^doCV.l55j?B>W^eWh/uE!lE'VHZ[;7Lc\+9A*mk*5^BgC8!M\@u*XB9Th,%KcN.WQNHI8@@3'G
%iGo[Lfk41mNXHFEAH&;KS^3WbZYs<G7JT1KcqkGt\0N%h;ma\t7J75"+%,Bbnb&dp>oUqOM$$Za[K$j6Ef@*aP!);h!r%GkM>3GR
%ZU=7W8g;fTlQ0aO1YZ_T`drCjVD4b(pkE`f#!X7kYDNksDiZLk-@9lf_DJiY7"cZ6<5?p6^ZGji_u1SqL^H<>O_J_D%rK2]T3GYI
%Z`[u'9cjKn0ZY#._5So0S@eZ+Zp7\DKFkUa.kE2^Po2GjRQSb/TeR)D$^.d86GO0UAPS8KjL;t4g%X9PMh_:d?Gf^MnLP1OL&m$c
%NU$Z`'*npHB$CcHHZ1Ui*T<$mom)]8LL?_'IaTc5?E!a@>d1f#\p`?7'*ZhFbKRg1L===34Zl6c00Tl+UQ^7R%osq9"Z`5jPo7RM
%+L3W(kPNQTH@WK9_T@Z:S#2Ia_5SCUfaKZhG+kG<NN*fC&%Zl(ZSCt$O9FH<;+SqTJWsXTM's<"%+&FA+XmL&ajJhgK=GBt_h3Uh
%?oZI+@SRG;"(scJ$NnKV1H85&`HX.=[Al2G,?PVNPj&D0G%7JlJ;Kg41_QS'lfdLi*5_Y06C%`V9$8#bo/UL/!'@tuNc4eF/2CDS
%]s8j#p2-2Lg4G4'niG[@KNRi>?0j;+acD5D"Och1VKJFY<XA60+`![UV`$rgDX^q*^#Q],@2qhs`%R/i9nrdYV8BHgJ--dC1PS&0
%d?k4-/.FMMq3d]2VaU7f`'P"Fn=5;d#_5Q"qbf;a4:6%s;^OsP\37/]!9Ctrj^4IQOU]`1Vo]&M8"0Qh,X2`f:'e;="Y!Bbg"i($
%PgeZ%Q#rK'0c(gQln<lgi_c*Ll3bHd^3]RCN:P7]M&Ma_R+s>L*\0^6R:9Hg3tuji(WF?#R/gH4pf99QK>L#"(Kql7[$:r<kJJ<t
%IR11jLN-TiA=\hj+;"SX^g9a)L^W1KQ[E4sl*1eM;iD(:nVL=NQ"o<ZjVN]1]+]ZZp0]=Z6Ae&UGHtTWd;?_ui,5T`n8eiDGZ-N;
%OBjGDM/JbQ[[RAfQ?#\:m9<RhMUfq0&35.M^iHOsR.Yd"`c]V2k6XQ;(Z?=nEL:5s:3CLY53J#7g`A<f;e+h;(Zr70E@$0OJgsQ9
%mq09KrO3)$%MC=sPMf:QWj$ea*JSNj/3n+-nmF+JJZ7af$nf@X-,+ou_`KLA-'okR$A'@%NaWQ14XbCf[YdEt]+)JrN!Qu>AiW4?
%cr^VUdQ1mMCa!$nC8C_p$f"*=[T$qNEZOGGbG!EDb^4^]pkZh88F5IflRLs,@[4/h[o:0QQm-G#,d;mj9-eeF]+V43Ou:4q/3$j9
%2(?>26d#H5KhIYijLL>p$;_r]UX4\I"ph)klle.DS*[NtAB\7>T5G.9@$T?`7&emuT+8@YR=dq))u"*1o&u0EH%\GSRep:,9>RsQ
%*dQM@LhX_Ub8NV#N@GQl(;d)WUEbm_a2di4%[j<XOQOiNj"g4d6f`TKcc`bRro8LgIrFg\(mBa=QO^>Y#AI`M(I<o_3W;,jbG.Qt
%!a`*8lr%ccA]=d[)'Za"oAQ`%A^[nHS;I?a`8),T7bA6kD$[SR8G*Gu-R*R.W][t,$9p"08*-0W!?7D17CEP/X6lsrXA9>TR).-q
%$cR]l\B8^Sn<5$R?e6<hX9tHJ>B$ktp1$FDCj:+'#p<Wa+VOVcbY*>G#WA3DkcoeG',DbpJ74ij[08@k/-,`X@S5!(K3a%tieS:j
%K*qtiLZ2P(n^Nh*.@(]d,K(+3LB=6+7PrL63Ltp;Z]mW0!s-(S#[kGH!(DJV-bSfl,8MG%7e3l04GQ16.1-gK1XQf@)4<C!!RWh&
%1S^[`1k?1V:3e7PIl)lA!*hMdY(3%iN\54q_eFah5V-%/j,a@0J5*^FOp90S7Bedd)#&'A^`=724I!*7%jN.@JXsoX[WmF(3k-)@
%iLsYjhrQ$p)/kb#!.PBW.g7WUO^6Ejq[NWfD&aPXI):V@9qFdkmM@'j`HtqfSm(LsSp0[613Ed<.u%m._GS1K>6HRD9,nI?;h(#Q
%`%M-NfdkN=M[@7W8]'G\Lu(=uQ(7LJ1A=+0$b**P+XiU_Lp)+HG*mcuYKKa(@$rNHI"-F7',G%'C52$NAKM/\VW:i"##4BG*"G+o
%E/;&MZjU!_cddlm+!-]c4QhS\gb=EXTA,6T'JBP*YsVh-F3)>.%Km3k;m<T:A'g0&_O)M9M&;qg%ArHEI5[-p%H%U(9fP9T0O@j(
%E&(V]mEea]PWQ2MaMflh%YPkpKJ!KY9G5/-R.*A`%`'cL3ie:Ybf:2Iq=\5"-U::>\&%bW6@CU4#6CoDU-?%,gP.CaXU*QKU`574
%":l@!J.(UT#u5_p]W!.fr#7[1!=N^GTX2P!i:-obI_h7[`=707GVoUs![2T7Q%:!0@.#1-4CatE17XYd9*Eo@EZF`fc[91[]2X<k
%S"*#i'7_9`Gg@41R@ENIQgc>H]iNt%!jiY-87X$7kj2%33M=W6Hc;'VU7`5cl+Ua1hb7Me[QMklY;pOV-Br.E!!(dG%lW&RJg"+e
%2BQVG'<;R[7:^!r`/c(e0HPY6W<bjq$?`kXl$86U+\\hI7U,rA766j`@K\utcm>j5RWJtF$aY%Ie+KDf0R+^Jr#:5.@Qjc$[HRu@
%,?9N>ol2%-la[qtC9Tt4RUq3dn2.!I,-?Cj<VY&H?QmmZa*3g%Bpi!E<Jn'o9V9+K6kG<X$jKg<QW,sr6k,aoZ6+*b2r$E?5mfdV
%f&t@()*t114)tJd^]E4!"L8jPF(<kZkX,X?>XHRJ$=+,Q2o*3p[%2fK'CV%&5$(fG%^'+Ms6.gc<>e"*L@$E,f_)1ihr@+*1t0R)
%_]m8](ja<kME7DYLVsFn4FQ2:eiXN54YuU:f_r6NZ_.4*f]$G6rq@N6i0W>MGk^m7*e*t`r:KgJhgP0UpYW:&`5a09NnU<i5nHNV
%Wf!uH/;OAGZF,E,;bDjr3?1N-kj1bS0a:,J#K4tFP]XYE6*ujr?Lbr*g6mL;S,dgm`qF[XVGQ5R/rq.'q[87M**lC.F2,\fNtbZ^
%fB#T.Y+i+d3(tA@C8U3f_!ba@hPMp#.u\VN7M+46]`#8!&1G3.6hZsV*"XB^#TE]iOb]6&L^E[HK[i72W^)`);]qdJg>8E9\#..c
%m[lrXd\-dDq)7a5cnF,tjr/mm')daL3$4sVRX[tb.8[=V4_I=MnZF%f+Tr4=6]h5p&uC6@@%-QER#56<fffaF1M>#=F<q*CgK][8
%l/2s'$_3esbJZ3*WYc?%L?aBA`DUlR9+J/G"FuiH08Ecc=9:5O.DQ6dgpNn3Zo<!rOD9`$h#J#"1u/\=@BdXUq<7BY`Ft9B+%e8^
%,(`mOmRTsEEM\$8*\^n@_CSCVk,d9u$+r&`/@2W?"P4emGTTFgCO/="D@n,R9O26q[\.X:EK-n5LJ%<YQ"BJj*-UA?AG2c0oLP0p
%qeFXB=SPuN9/LgeH%6_Pc\(>nq_ISp*WEpFq^qnW)aH-pJ;*ZU[tL+nX>#.6WUME>k9W9iJG<$T5?FIM+n/1K:p,<:L'8CZUDX`f
%,f=<383m9o2Kgjj^Y'G0k9H6OBN$$db%8$s"h@`8[i_bu^$(Es$'UC5Cj8u#mPZ&U3A_<AEAS4=%HmQn!?C#X[$'r=(0boA%m+u,
%$ZIFE3Opa;39+uU?8VaYe-Em'HC)_J&XR@\er);*bi6MX5QE2Wp5.K.fF)9&kI(*HWfYO<W!'1ofh_[$*+m+qs/DSHL;QB_&pIOo
%n/LrB<'++=#sYRif9q@KDl3%4,;]nrT/e.R2X?K+]cZ<%NuR(Ukl6Ygj#@]B/nF]Z6j"8Bc*k;iC!+!r`rr#d-*Q-cF6RKZT:%,7
%4$B8>Qj5>uOo&7'-Y<DO#0\;P8?Aj)qZ5h'9A/6>5j-K;gmSN5^EW8EZPqL]\3)*Gd#KP;fMlr4fB#!g@5o5#iG?:GadNnDPMid<
%g'dKmehtmf0uF\M4sCaBRfsmQ0m*C-?^k(3p4@MC0W8B]UQUn+#BQppiP+1S'JLRIaa$'=-DLUNBb%Io.e?PNJU++?V-H14W7^5n
%<+X6M5Ys_2Mm4@`Sd,Tp1&d7MA:DI5!!1RLW+X?Zm-/[_W#S-X24q)pfPr`Gm4B'Kg7[E7+<q@+F2IV%@NKG^TAb<j.4L8q*PC4f
%A[b3fcdPEOCl3p@&8PfGeO^C5UEi5?,#,cl4e@di[kPaR7%>/HPjg\kQg.Cf62E$[Hq]T?_&":4g8hjll,3+6_;EV&&m-OeNt;q&
%]]r\XZ$6^8nWFi^%^F#S;Qb`UV@euHr-0Kl8;N.i'4g)W8n-%!nF-Ss9ucJ7,Tuph!DD$B2W>Mj5+jpPKsag(+@Da]3TL01G[8?r
%C5(>2`/]l^p`1N0!&A^$^f7Z.Jht%dCqoF^3//Uh3`rQu3"g"5W]FG@]l"WR0Ib,IU%gbYrPs*d=>[hI.F43XFtY.MAmc5b&cn4R
%UJ>]niUNjdn--gT'VkSbW""-llldFe<`kpAAKGLoM"">4E-iaVEsU$B?lVX\@7ih;$/\JT&EQ$7dBW:&GH9`q&hm1)RZ4s"9,OIV
%#l8)OEVUFTn:S9+XI,NL%\S+Fm8+-3M%<!P-RJh%V[cHPSmBd`=?!a/9*_4^/>trRW,T2G_NN%+6Eb.UPI/Da,rl+,]O2@'/,>3B
%L=*6rbj4@%)/ibD`8gsRo"<-pa9?0p%i'XCVI]`Y$'G0dg]p\:Lr,b#OWYpJ+#Oc9?="iWe-KZ,UCt_N(goT_1[)(So8k83.iN1[
%Z[d!"$u&tT-I#q]:7RSreR9Pu99AlPCd2.lQ*op231uZS51p;d`lc<VE:tfDSG;;7XB#jP*QYg_7=U-5+fP#h2"O(W-t?=5Skq_p
%lcKruDqAI0TU6GH?:O?bW9N7,W7D41AjaWQ9D/rqMpNA7'T$gP'9<4M-#s27?&mD/DeCtt5!]PS`7PprfNi"d%'B'#No9KLMAISB
%eA@D_'iW3),F)7R5A)nYi25Jt!F\r$r=B-*cIYVD49Q=PPc8uE,moAsQJ4qq!C4Nt<X8^T$93',!>Pct+WUgRj$[uIPY(CI?BoMi
%8AAJ[=J!\D0q/uZ\?::;O/EQGFMo&6)+NI#O(-*LSkR6BQ^J_?X>,eL@ne(2@2<LS5fM8uaU1G+&Ouj!8lesR/qGYfp)VG=;2Q>P
%s)puMi6p^USqY<U\#8dnk!s,8lKP=<0dZU-&<;IF?5*kqK*l^FR;rH)ebJE&eE(n`)2l+Lg]IilTKU=6QfG<CQK@5\h.p"5+O1%r
%b_S.n:Q(c0FP'N'3<ZOr#uWnGa>/%b&^tZWa83jJ6mgGL&ebaf?LsV8TH950CgOR8Zb4K]CXXLg[0s:gVEirK+A:4s#'M(8DfeJ9
%;($?N;bi@B=>$(aC\Uao[49Eecn%U0oHV/5e`eTA1T1#GbGr"P._4ME=LK'[KfUe,m;:l%k=8DT/e)]UR]\UW!<Uhp6%J#+"?Wgl
%C"6NF:Q*ucD4Hrf12B7Ma3S7\Up!q!P-HDJd/]Z3@j+;S%oo-e6ANBho<LK]?R^8g6eMK3LLh/161*^BfLGZZ"]u[>V'GVH@?_8V
%QcfhX.$P!"1@?ZSRc9>mD0%g8ThF4Y.>m^!9n<'T=H$Fr9,.)C6HOe$g//_+H&.h4UWX!j/-Hscfe[1NE-s%$2#B6:)Gl`%]e"h\
%"-^H6S$7G&"b:LK,`P<=-*g"0UQi'*0kJn$71*q%D^:i]("-'d-Ik%JM5gZ*&&RqAb7APE6C`9)$3J59P-6n\$rn*MCHN>)gsm<9
%!utHV3]`%KS[&Jgp<u`II!*'.he;H`]S;^:<>lN<hsInU@?0VaEg5LY9faY>[_c9\p-d:nrs$ZQMpp.8WVC3cR%6DiQe']]63q`!
%/e<Y\VpfrDiHcn[8m'P]+%BcCMR$n^6VpW8'f9)9S*^.Z?3-:4OrKE`Z4lKU:rArp`G[$#cUJ:WYeq'[9gfK*"<;_#KEqn`7YhZ-
%Fg#-Ef"KFor*&-t!lc)\WH2Q'P`2rX&29m20('=s:+m39D[,Yr(kT*t@VmrAOfq0u#3?(/)oH3!(YKcM)X5?PD;(bD$@u<P014Zc
%^LQGs[G)W!>#\+Pe0'AUW9\+/DbWXh:K$1l_80Fpe;4&H-P"orVVFiP/FB4Bl;"P#ADWHB52V>$BH!CR""]PMKBk;Jf1aBXU;KpR
%BmL27go+o+UuerW_XU/q&PS!8*J.F4LUe*q$]]Je?)t%R)D'L1aEuVI6K!%De@aPJX[=i,(&7VW3%c&S/Y1^a.Kj'4!,'fn9d_!M
%q3iMI?^!t#Bfd^Ci,rZ%Ro#1YNP!rM79i=26!&nAU2`+l4lUc4T)q5p#V-!+J:&noK-^N1"$&#b@mlQKg/I#ECepkb$::?G-q(9`
%dPkZ-em]orK]5gcabXk(D7/HY%3J^)VMAi:Ia6O+Plek0BE2T&)6qH_Ol[<s37#]DjTZ+`9FM\gac2l&ib_p:QVUrm@lCD",?%tP
%A-T_4N]A3jA?Hf+:3Hfs)0kg)->C6ZlTUA^>!fG7Ns,P9`p*0Wq`)<)8?n8_Oq+sR'<s/GX&(/<o6-d^"gDB+;fQB6rJ22UPS8GZ
%$@4]0_&q&"fcZT%[)+hU"CX8)"gS3@?f9eP21.H>6`(Li"DL`MV2L%c*["Tu*mVfA@YufGAYLUIEgi\<[=A'EhuZ$o26qmcAHX`[
%C*Ef[Lrn[+WcI9M`%+9EWQZC,]7e!>&m#dbSWLN0Z8U3BN'0p+VE=gp=^+8s46)j(oUmQq@ThME`abT?eJGmn4=dJoJO%C!c9<Fn
%Bm@<:pGigO6Xb+c%XQad:s<6E*o#p_1D-q:kRI(AZ5WXd#erh8(orTLA+``^5iXnI\:[.l+fG,Y0i_%[+FZB6"b,O?n(%FZ^6GQO
%X0T<I,be%AN4$+c:k$.g;[2??8s,X?L:^:D!Sl'tB@NUqL_Qns\hAI8e@fn1-HJjQZI`92,cC^m!5(NVI]>d>/jj`\=k-^q!(1WL
%d=P'BO[DGciGcPl6k.+L:^Btj,8"rUdcLG:,DZ>ScfF5h$hO2K('iQi.h<gM+*k?W8>D6jVO&C\0G?_Ia#_rcT'Wot)#quBTDdd:
%YM[(ip?`Zgfb&\5hnJ-C]Qs8EB.r_'rL;-is"0Y"^$5(clKdE,^]3eirr[cK53qb=-Je44SC%W7Y$UP_a-aOH+Zm`f6Z_C_3_%=#
%6jmDC\l'Ud=?Np.k2Vd*bYENoRhiN!/+54jnlb+P4bd`f=5L%!nA1L0]943;KM9*Ik<-aBmPZJSYt\0W8pSX5A.gS4L,4nK2]fgt
%YE.n-JZV>j=KiejQ4!meOW?A'bV4Gu>fT*ZVcl"/1$V1<JOG;c@K!.R'q\1?="-.W/*n&8P2J@'`VFXp1rhIUR"OP2_EcH/A3$e]
%20F,3j6D/!B/rHZ[c&RPEnl&=]s/OZ%k:<t-TPc_^8@+T(h"P$KIb(t+sFMXPN!G@\P*T'[YX^/4?k#L"rnbnH1Dn5Z%R"<@rD%%
%\;_qBl_HGYBh5fIbf7.rlh)K3j+`4+e\??gJ_MaFhh'GsNh&-WY-c1LC>Gu2h9!DjWH"O?[(9-R_cJ7HX5`\2L/>3BBT.)fX+sLJ
%MT^9P-_'X.(\VN9\0u1*dhtZ<QEqI(5&NEl1!,AE&=_LcN+!>L#O>@/A%Ku&9ZEiR7J`:jG^/^&G`9n(@AkMdN0i/]h,oV5<B>ht
%@Q;K<);bc2@r/&gB/%=[XSiocna]!Ik:_Rt"ag2;?TbquU;:/p=UjOOaGY',n2,%<`;l+<d0T#HQ3foE"EcF88[@F5W1X[1A:qI\
%l_JS5PIc"VhJUi^7(n_=cq@+EXn=alJo+sMkD]hMbJaqQ@_@/CA:qGFHk*$dYJeE'JM+cCXI0Ma=Q_9u.ZV<tNON$<<B%TF">h1r
%VCO`-OEVp%k.!^5_g./SjRd^ZMUBZfD=R0^C9SJ+l@R)'8("%bToD-FnPTO8&/L&q'R[mC@oPCu@L+^!Juojj$H1GHX;L]ZSD\Q4
%1M#K+<AEV:4P#&N!oHL=mY.Ta_4,=Zo+Z6WfdM$4@P"E2P&Dnj+Gke2(*pk9M9n1PMOP9Pgc11\6Pb<L(^pqBUd7idJd8Yu\1n[V
%O/iFM1!6)-V'%2+p)u3=PHb\0OU6QDdh<B[?fkrJL0XgQs%6$[QEE&'2fVoR173n1A&nAT0b^n;\E=t]#(4SVJQ=t<q7+fb=0Gd7
%>%02,%@&FTR6d.T54>;c8/YA=*)f:W)POXO.>b;m7!F(!F+USL#`4sR!Tm1*`3kJWpdRbY>]Bre0`p7?oH5B5c%V1O2_JRN<N?6;
%EV<rmR#!sbk0CK76^k9=ceRtO`$kTb!(e`[@+erI0Pse(J1Xh8io&;l%Uu:A`F$[;O+Xb;ri@Mc%WDjY@U+bCs%Y-#:s+iqkt41a
%MNDtD'XP$3]PK'd7/@l5aH_)h"o2`29g+HXG.fKe+HZZIJ2gk\LRYp5:,@iU3D#$8VH/fcT:EgWQq"/5.#5(`ahaiV!k)76H6jP#
%qB&D9_)KS@Mo$;##k#qfgFrs=Z![agE')#7'jSWcO[@ThSlEVK]#.,GVIAs2G7b%[StUuZi5RP]]*IJ1cjW:^0QlA+_t\S+N#TlX
%'?`a>$mT<gdleP&)lfiW]+YT?kj'/['Xj_5K3fBuV;Ab:@AAsVeZ"6'-cGogAmqpmJ3)m`/;sucDV05g!O#`WDd),bD(0A(_F.QI
%Fd!.7p#%Bq<)4V;L@W&U$A65/jfZEJ9\0;hl\*-J!9N:Und,CW=)-T>_Bf%qD:8f$40<O9'@'6=GsNdI'k@_&@2r5"SOg7)NG[hj
%7N1#\b,,b'7;q;-,)kko(,\/YE>Pgo-3rsPT"OJ*_T72eZ=O#rcohd=iI`AKXH*X?D=j!27/Xl'$MCCR0!H)$erRn);*E=HaW1fA
%i><qbn=b6pSN.OOG%7&\_0AEAU^]MdrbeOJ=M#.<$I3&;2mJH\cJV<=iPl]ChI!?'RkXV6n`&[=?K,_2dfgtSGDsc^N&mWCWIhH$
%$#^2)ZE!\u_%b+a8j8)`Qf+Z`T&:b4[:t4ieHb7h=Ft&[7M6]Xi!<YH%QO>=kZ?`L?Q"Gm@(OKm&OplI.)/M>fA=6i",AS_JPkK]
%o58SV+*';Xi5JB5h:05J)h:3fbeOH(C<bTKHb$CX_$g_l$EM-u)>G>uXirj_0]oF7XIU:)B=P%aCRlF>?kIB.GA^ef`"M8HeA/<+
%b1OqR$r+3S-O'dM,hSNT(YH_:FlT>&VFOrV@Kj3nMA[":ARHTgN[%)GTf!Zj\WHsRQ-sW.)M<\'gqj3@6p2C`pkTScCh;k,"?r?]
%0,T6P^+&YK#`L/h(f>kq(oX%$Q(S562EGZ5gt7.^huMUJAAB<s@'NZF#pBj[b+/l!HODK>!bTtAfaWT:^c!aq)\6o]XBX$O,Maql
%-AS6PKoN5\^bFP?Ri<WgGh#-&.uXt:,f2W%$K)I""#+[FF/I1^bdTq0Op`$HYUBpLi;Ws]!Qm.\J+<8D,.l;'(6>^(qeu!cpE9J>
%!e;,f9+`55\rdMCl<fVY/<Z&b%Rsm\HWT36fI,$2_>=V"#K#\toPFj[i8?-S09,pN$CU_(nG^H$NV@W)SbKU%l)8CHrdJ\GSoue3
%da!8aV>XDdPIXhG;tXV*:&>=6`"H276Mm70-^QdZ0D8ni+D?8P8POUoDR@.m'4;m:]oXWm'=>N2"d2#u7/I@V#!^+QAG>m9XM:"h
%G&FCrW<<HMYl9NgeVVb>TcqnfR&_1l08\Tj1(rn+N`:`Y=FWnQ4+bTLK],3J!a'+6`?1u?QY=S3&'T(M8:SVO>K]V7b6K;I.7esa
%=38RI:S+dQ]o4X9J!gI%g,_fTq15J8Dkt-=<@K<XUq_.U8tZ=OYD*$UE*(IpVW\;"Fj=@bbVD`MSA/k]^`_m$o+tI>(-=L*ED&pS
%"m7O7b$a[toJbkS((AVu_R)j6)l165E6R3AIsIu#CX2cL#pG,@q?mV12t!c^Us&Ec5gj#X79T>lBn%"-AB+,]qTDR'k*=Ep145m.
%SBoF0**@Q_r<6+gE>06PCQM@*1)ct'BMPEoGur;KeY;!Q.=\n_BIDgn:;g=n/)N#>62\MapWKe-l:@H8(QY;th2UrK/V!"Npq)\6
%)1q;nBo1n-q^:2QU64^]k@O55Tf8J.(BQA@hoL7ZFtd6ArB_Vr7]6*BgrZ,O(M2rMS34QFcP>o:k^e*dEo)(jq:l,K#15(giUiM/
%g;k!t5Ar[!Mm\sJnr$$U")C[&MeuS@=,pY/MPte<iPGm<Mfjb]ZCW-):@O__-Ys0B?O#[RXs.A8ePRl`=,()I23MMU__9n0UXm`[
%bEmpt\M=";N'GH3puOD-`ZY&Q^kmV<JmY@)g=QPCb0d<'$%A;]!GfT4i"pT3gF!8U=_NJB4:$E+,[sN^')]$u"l^02n-b6%RH"^j
%HnVQ?]MeZ*MC%+.IT](!G^!!^6GVs,NT(c&?j?%fJ4#5p;#F5,Nc\?[?_TIc!-3s([WcGC@13)8('CWQ2i_8(3UM./n]T`j)!W*U
%.B&)@1r#,-Y7WV+!W*SSD^#Y=]T`7[8<dYHr)/'14\1#N@)nlib:dtJk_l"n=+(od&!gR5eZ$H(/AI:pBaC#3#Y<)N/ADn'df%>[
%/#g4>i;)Jk=Fo^!^C[X/ji6o8*Ys!Xi;$Aa#Vqt$[D)Ar\FKKsR9D85k8/Q&\>TYY02UKDWHh:2?Xg];pFV=oFlHu1q;jMipQam-
%;C.dMZqJ>^;'&$S7Le5S)p>E-i`Z'e@S,5&$$JS<r,20$NTHK2T]W6&r8L.j,f+2D;(8/&gh;-[(?R,\INe7Cb@uDS@=7!&o:'q#
%$"s(q\]?TF/AK"!YN82l-d+.a<7Y0Ur,T2G^=Wb^?ii&]Gbb'\3XaT+@/7cmWpC+Z?b?e%6/5Rk!Rl8d@V>MU&/2i6=FO3?/u!QU
%?^;"P=q\1\+\P+?SE6*W4"4gF/AIFtedIdN8c1JWoR5'P^UODCZ\RK.-dAj9-$%`s^X0U2;EN.,L;E/!RU8Zq\-:,1c;&n5d/65G
%Aa;hWb7spiGC`;,%O[bWRU6@j^!lo=HH^=5bqE^d\3+JK@I8$N[hE_9<$*SfK&i8Dd[W4J0,2q&jj*H*jlVCp$:-Gsf*I]"%c)2j
%439./LU6MGmDB?n."21YL6[$qpgmAjKom7qld#Ijqd=K)FJnm#@j_s]lStE-f6M_j=Lao,^G:;/D9HL@3l9)KC>[[X;Yt@";u9<s
%SV+6b4LV=h\ha-mYGL);M/>:eI=:]Zl5LqFoX1/9DSdiNkJ@1($%8_<h$9YB4?QR%E.I0]1cIJQl.+-HkDSpUI2?_6o?]2*OnfK*
%DA6?i__JqmjU2P&;AEN+HqEX-b9lfAG,h%P(Vsu;L`;=,KGa?tieqZ4Qltof7%>gC<t8S*`3ZD2R-m<M*8.Qhn7>9UV`TNLGAAB.
%HnkZ:<u_@W,PjT/q0PENeQ:Gr]kD)4<*lg'p+0mnQ+WG=d2Xs-NFU<W1T5Z:VUX,IDBgmP4'$[^`4\^EVGWnn(S"t[[l\F[+ce&7
%Fk0lpMq-f`UaOA<P]>mQA`$]-i/4fVo`GlOi6Ku5qoIuRHR8%?c%+9eq0K[MN'Z&g$8u:bY&(d&G(Y*]Z<ij8@@T>Zms1'(<U]?\
%l:en=:&NXBgNe*2n%nd[GB6:k;Vi9C:p)(W^nRfAe9>):\q6[..E-0-]qkW-K:`i92IX<(5Aq*hgus$]ErcM/0>RN;j`5NNn-qaC
%hoL)0@`b+/(To:cG'NP!CgWTU\'0\S_3[MAg(P(EJGb[tG<+>OORg8\F8c4'VBWBOmD2Oq?:Y6g<^;TlP]i5\dSY"mh+K7sE)*[.
%,A[qL`NmR5`QaE+#cYM#nm\;fC(=-J(o'MVN\%3#StEbpo"sERZ7m\PGu'4hnhsiX2+TYu?J63?i1T.rBd#NI#D.5Vi>X*3[P!/p
%(BUJLJs)H%Q?usfH"j#Ck+.[%1_aaFkENX:1K%PfrUOktaicpi[)S)gQVqGoSW[(5].u8H08";@l+^-e1?8Lp-Ra73R_dI2P'8ob
%_MsZo:JSA`(jWT+)25/JY0f,>1%M=jVMlK*,'s2qh4__=]:n(*LJIaZN4]b7$US0#4lYmIKY37M@<_u"07sZ%g4GEQ_%A$CYCsRC
%WcUR6N^ldJ+QP\T?<de^Y>Rfm4L>ZQ]VNV^j3G\<KRHj0=k"JQ7*]<6nX_Q[=$Brb*jM@C+0W3,g>%(gpl]`eDLB*q:Ou^gKY/_<
%,*/7/J!\ldgt6iPWcC:Bl9:TA=ZIIo(tnd"?+G1t94?)%POSuOX4H")Z[e]s`5O5MR=YT<jEX.N(1irfHZ<B6GSLWt-&`X9*RUo^
%CqP^9j`IE\7@XV.9<dq]=)UCEbJKCSmTdD"`oTV$@g4fPeC.7=g5Uh'ZD*4N_X`H5eHQ?Kn7cn&i!$iT"B,Xq%-K8Q#2TrOeZK%f
%_n5UFs6^_1YNpfE&KDG/?eKYNL]cp#aEK`4b9Llp?'9iCIcoPk^Cr%gS9l%T:pm]*]h:\jE@9W1d8<9D]:IoN+PlFVA%ZgL&rRqX
%?7,EoT-UK&?S/@JaEDH[]51`3FIa*5Z9CFrc*pmtjE76P,nsaHc*iPeO[,-6fe-Ap>Q0Fp(Odd<CVdCdLS2u$WHPNUYkj>n(\eg?
%/T@Fi2FgA\oB_&F[baT!;&kHmC2iMte<Y!(?(c-:HGB"969&0+oX[<VZo0g80$lcNBl<"CNPVEu\TOC1NF%XM)kV=`?'N_MU@.(a
%1u@123it"aC'`G*ZKd%GK<8FL<4@-Si8E*R2%Y#.Dj7gE,*E_+\hL1K&Df\]TT`UeFTHXj[b(=sOkLdMY7$6lHjW<uF&)9F4RZHr
%Zg#=i_RL%1>u];tRrRK:?1&a;Q1"4W9YmM4Zng>-Y"ZD,_BN5,7(RnM_k.G\?,3WUjh&t)##76^FI.d.K1$O1EM6+$bBs:20M$:1
%E$$(2dkUbZ$=2.6dZ&AVh;r1)_4\D&IXEBe75BH+YoYW9YB(3gmUjbU&a3,MM&ul3M9MiBD$""_d'Eqlae6ful%h)!K.`I<#5j'=
%2au&L.td88Z6$u4XqQFSQN[bQ\_\`V8\r3(Mc8gp2p2]t:8+^fENOEl>oIDCl7pQs5cuR'dPLQ.fU_!*+.5N@H.:fuTt@%#]JJaq
%elt8\8V703IW@p6'7[?Y-Z7DrXq_D[S37\/0o9rrcXkX=<BQAu\][WiK+V0N3B&Qdk$6G)[!^O=?+ZKY%IW"-^N:dJV#g%>L^F=E
%/[61*%H>&DYIP8'10teos5AOE=[\(X,D.1'qqcnhYS><l.LTGE@8l>e68kJUFY8`j,RNa@4u^\WVp=,Q2sOY&O\'cTe@DSiSnh9f
%16knZAUEA:3nu.nl<FUFU>",-[$=(:H`=]3OTe*,Qu`l:B4'$$'k<"CU>D(oQT%q0-I,?5'dAHT=g%f?HR$h4PZ*![O2FtW'B`9<
%@<UI_F(lSN-?mPtG=+64F!9Jth2$.:R,Ztn3LAY3G`on599h7'SN)sb.UH?kk@/s_q$c7f,s0;]'BbON".qf6F-V.!BiF1=1Vf?'
%UWt/W$B#gm3Yqk/J3fa,N'ciSl<HY-&;:JV>RH@eEf]LBLit/k77p?/]L=T)al<`f>jTkN')s6&"Xo!8`?<H;jpsBgN4;.?PREVV
%k:WVEkBeja)5OBRhHZj_3)FM*\WAS9-W;%]9=2Hd3#>^A#+f_N\YOY+cPja4&29=d`46St?F^[2OpJ$:@P,(lR?:l*3,pR3A$O@F
%3&_G8?-=S?75]%,K0r?8fE322bR8EnP%[A=`4<PL-EBG'PD[hjh2$+qe`E;\2jNMO85>[J!Be"6EA"'*f`c@JGN2nHi`r'83?@J.
%!X-^fj4;L_L/1LqCJa23_2UPNPWF(B:=%Q^Yi7!]Vb=Rak9?27R+^=J]D!!"\Yn@XT"CgbSst<T/]`!CCu2[C;sg&4QUTKpJq>nI
%#rORq30Ae,/m37ad)`*#SI*kPVSn>nQtKh4#CY,-BWBrZkg!=Pq6r%3Dm[&c'Z9PNg0A4peT*P&p?Y4Z(YW-"1EKdI8=PO2-%JJ3
%k&P3^?MiG>UsaL,hHXl[5qmP)+eVPOj3<:BaOhW\V80^p$:+groB]Q<>eY(mJ52WXUi1oFAI4Uh?++[i\bO[3<s<Rr8J$Wf`sU"S
%]h\)eS4b7t(6Q;-G]k:hc('^Na4=UAk$3^HX<%EG(=2Vik$1NG+29Pnnr2Y)%-Cdrrg4c<k$1H1@QTEfBot.slbp?@=\0#8`4:Q?
%OTaT/S@aKE30u/GnqOULOEb,CJ%H<U6EJSr`46F5UUl;'\VjQmYJdsco1K7,Y*dh<;sB1c,"iC%R<&Z9A/[FpF+I:&7omRP;Ud,N
%WH/pkk,T$X>ZQUm3TZd@S,n$2.s3I-Sob<@E)$NRitgEpF&/c6)6l,WpWjS,n]*Q`^Oc((W[r17>Zc&IOInFF/rY1(Bu-3qE&"*C
%2p0pY(rg13mD=p&_VD-]s#XSj$&@/Q2-,7t?rk;#Eb@5.]TVBn)sl0d#4&@B.G*OZGG\UZ8YRWMd2(r=,)-nP,*eG]]^b%a<=X`b
%kK-.p%E6:P5RRd(p5$Dfj?a-^HB@23#'e?dOc'PJe-b"KEe-J/ll@O,>\l&OKbQg*[S^1Nj2WIpYg&0#`s'I(@#KGWJ.C&S\8\u5
%$U_S3=s.uAT_C3#0Ea$!EaQ=r!>kl8Q*bBoJ-33&:5iC<gT4abEFETmp_chab>*FTfpoPp(p(dUL_@02i>"6q/cb@u44mOU&0O/Z
%-cC]QWQ=#8`H_GrhgDr1Vuc:V%_&,25Sb4i1:*n\M\1R]\65PM.br0LYVm.I6Yrf>,$[,-,W3+&i$.#T:DR3bfk>q;=o`C-#C0K*
%,_Q_\[3I)=ER5mYMh`hn2*JVbi1anK?dAIc8X0:j`p%DmbJ4\$ZJP^,PM%BU[IO<7+:o=D[kK/^5lO@nL2\Y!CsIEd1>'it41t4U
%7XC!B]O^Y+L6H!Jj"697ZcA@$(9j=qXmK5dM&)Y1"Q(e-A6FSi-f$?qOkdOnG)KG;=l_;6KIE%1&Y;`Mid)fPA;5UPoK"q[/Mm:1
%h2-"mKOkfZ[o#d=1q-0RUZL9rjd)Gg9&1c%]-,ZbDMqS9h`,KS4Nq9L'`%jDRT^/T>=<h3Ec2)iUuY'^o@pR)#OjD7HssY3H"XU?
%&-^6CD@;1/eCOi4/Zt>.lZQLoLfsm+&BqR:\ah;@fG530ocmXE66ZE-E)p0sT3rEpW@cs.@%fMS>6p@-#YJ<?@NnnrN4.XF+!]SZ
%D1eQ0#]6gUMAIYI`?q5j2a1HY'%j3MB3Vr7,FkV7V%cnc=#+"04L+l[FX5Te\%J\V;,`1*G[n$j[0+;<,C7*1T-$2(aHZC<B<alh
%'DajoCp=EjQ6<HO2Mu9f*4EDX<dRct<ZaS9Y\d?(*td-LYMpj=cG,raD[1\B"ti1Q=8#f2dLhEf2lrOnQTB=B,#0iVDVVXXAbPAa
%Y,s6D4dg)Zbi\hZ\@.5hB_0e%?W!B&(5&?Y4)=4os7N`jCF;XDa]XNZPE1*fX9I2Yl0b+I(;\,NVe()9m]"bF>HNuNS#gcm50(3K
%Ze%S#\S>uCJ[T&eeN++^1Y%Z?i+&Kb[be)5:T`35bu/>H6qc<;C(]]:(Qqs\>;h.RN`nbsb"!/R75dmpe7N("K:nO<c`Q("Bn?6H
%A$aY$pLri9/94pY5oo3"Ea&>E[;Km9`pTHJW+iL`Z9[tM9m_DSLg2u99oB"J2shBlj^9OAbg2KB(=@JKIF"SP:P\itk<Jg7@Jo0?
%hU&6hco5iGTG9/6JsnTbWe-WS.5W`6h2#e(fYbK3?<U<a_jCm:g?/'`2ca*1W$QhiF!iMN%)#mMgI$I=qAq5HQ73YbOf&<h1^Ig;
%bL5^IO1'="B*>%s8Hk(j1p`iPnLW?b7QZe^=@*;F)chSid=V;:d:+I:/VI4_Jr+Yr!sL'H"`5V$kDb64O`NJo5spPc+ND[SmXiBM
%k)G%;:=X:e$12hA1Y?8oB,bb'Zj>SAQ#0@MTp2df1XO/8NIWp?_*:#O.5c?]LD.S\fOk4'ARNK21WakJmb,:%V4J-)0[C4>>6XQ`
%E$C/YmjqkQ<FiHDn2ArK_)aXtl$FYG*T#""3+n"6Ee7^86bV]V1Wg-S<jife_V+2/m(kUgUg?luDT5gImu"\H0uUnF;+df";ADag
%7Q3E"a=#VPVtXC&[b9mc`,B1mdlh:*R[o#hFK4$8b?gTKK-Mh$B'8ee5f#6<*Vj]QR@Tol%@5[I<9Fo?ZQQ[#MGKiaZP;Q-.;!kP
%baW#V2*.*K2hK_*G*6>8P4ZG_#JD\3>]RH_bCYf^@AY06?!b4R\RkRp]t_f`/N]LQ1PfV)"]<C>o?-'!fZs:^.i\E&RoL6u`)=]"
%PsspHM\L**Z3WaZG<GJFW@B,@A^>F&).dHV1n@Hd.a8XnYqb9WCpF%\MQKoqZ8;%p_%Ac/1VqnWA3m+[R_b(0fs=Et=lQ3sqM7WW
%`$.]I-]K[F7bTt-A;;C!DBuLiLjq'L(<IT0W%h'T=VHUKn&?L)&RcaFA<;Ms8d`J/OPPL=L[6H(M/7D4S'>A&EZi9&'XC-ZE&[M;
%:gMP6;ok/0BSl-<:*C!]II#9e$^U^23^W"jKaX)-,^H7@O^^r%:WB`e?pf%5&dVSXI3XdVPpW^uRl_D=26qotFmKD5iZ!"k&t3XQ
%k01+&X+p=7%5$6^Mcf+"j9,'P`SUYMD)D]L[<Z9@[4!/AV2_S_/uF$1E<o1f-f>\mTQPrQ\$eV57)mQ)1R=7FX),r2O0+h:+5L9"
%GKSQf).bARF#!CoV/,AK@DTqY2A0^/]5i9#O@-=</BeI'3r7%K>JZecodl:Gq1q[;\SbeJ<iPn8!2DV9cI)hbmEsF;7Q>n#HVeAE
%-aU.p',,U^))>)/G`!-LM<,FJPY<HVLUVOhdYZfqRP()bV[/!s)G,&jnDN;T;O0N;&tgpN_24@8i3?AbeWmiB32htV4nW+oRA@'3
%,p[r2ln,B/fB2$3Zq*BsSJQ9Hi$^H94GAH!!_`j*'bVc<>n1`<2On(3ThIt)9AoAMj_S[XM#d>+>o9%)/SEgGGh'>&]$qJ**/sQc
%)HD3=o*,PP8r6:mZ;Y9V?u_P0*IG.+IP(F^pTpHL^$K1*Tp9bo#49^ZL2PV=Lh/q#HEZ7%g:iml2hBd:45V\oWkh@6$&0G/nYYoo
%b/f"$3+:``ZLS$/l@9BI#Mc$Y'H8eod\A?g9uMoA.H1__FM('M&EBW`Q%pHlo5mk,_H-37W8g8ZY>)L*K!J]^`UNR5DP+c/Kbb>T
%@Id@5X[A-U\d3!(b]XHZ^Hb=P?6_\E-TQpj/'$CEqm(eB/>BqMY@4M0P4m_K=C`AraM1!7W"L_uPSYTjlH?$K^jtZB591j&YL-?h
%LTs/6!1`ji51'W+Jo6tt7T4)<9X6'cAm=T?DVa/(%$QIJ1^\"!M*t23iCo/oN1h9.(Ig\8Pe8N%F<4T[pK][G%Q4G^&804B2bK?G
%f?,bMLkSqj5B>-AM!A"6GUBjP-(ZO!.IVh$n&(&&fVha),bV!?qOS)F26JU"@b.sf<K;(:!Q<2*gi,/q"IB<amBOtL;%C$<-XM6M
%i5H_e_?&7r><DCk<1X"f-u9I?XRM/[-1-YeDhLqL)Ij&?"l9E]$@gR"DNF.nJZ9G)W?%m8o'u=W2%Ub%*G_CZZD)#H??0R1lO8#m
%[L(R'B%jHP==VlnA52dX<)=RT3BP&@oB5XHLsb,h_h[+95B*gA3@>Tk,D@q?dL6&=aY*sMRG:s'gK;R%!AYM4DiJ0,YJ'?,+iJ26
%35?njBS:+P"P+%,?$KjAfmj9a.Uk;M"o*m_VJZC8-'eWGK_ZdZC'KgB6l(PiV^2A0N5Qt1Sk'S*\maai8U*Kl;@:rs)<e*q*5f+<
%/4?"-IKe+`BRaTL;+YkE6&:rN+qm$rFUqSba?J&nge:;m.lXIi_;Hq##'Lem1sa*b,aXjo"cM]jf%=MT:GfIf_F,&(p>j%MV['1T
%DFrJ0D1l@*;D#^Fk%#Y@En@589`4u/bd!8K#2h$2nA.P>I("LFOZ7OW%(M]>.paQ]!4OcB[ckUbEX[L1_iQ!F`U87-T7WlhM_1g'
%&,bqd.3N'Z#[@F5F\51eJH;-6`W<8$80B["b-D5V&Qm,D56:*4&qaieUo6Q*+A,CD;B>MW=+[4VNCfj<VjE3h^9(.-Pu[9L>^YX,
%KSW&]fpfg(#$i7H9Z)KWRb=";8"8BWkt[%#.@,;,?Qg8B(CG_p?(gblQ:sVV$cV1SJ:uHmhuTOb"ps\W,'pp^2!SB2LaP(D'%N#Q
%lKn,aL1#eCDc,M;=7_G(HUl"jKs@T%.Mc;Dak"hY[P'oph8NbkA\gPZUmu(%\ErV+=@ZMO#_2f-%j._MbOK*8TEMhu&sWJ.h9.p[
%1l'At7]5TUVMIbT_#X4\_T*nJJc.\>@SsA)4$jn3(r7BBS8S!DR3LnM[^8Rj0VQ#Q[-.i,&%o1WBCQI5i%^W=m+.pn%D'8,2H_Qe
%1T#K)//iSWK/du!/63e-h1j7FQB!5T"VOl6n48!m2?;SSe8TUK>&(!&E9\.%K+2gs\?\IRLM)!1`MNAmQ.r0hIe]9[EaeiGFYB6T
%D"aQK$rXqa\qV[ug&>Wao;`d^6./NC@79:O*i^a#>":DRJ9%;#f0/<i&h\rqIQ5u[Ra$Wr#d&6J0A3hb4e;`k[i]o%Y/gVMVcNd4
%Q<SOD"dk0-^T@+.[uG_c::Q>h]EGbg(X"YgM'*6k/>0,s$+c%<3n"3$P#/n8$KCPO6GsF%5Nba8@6J^VMQ/K+-Pj_<J#q>\>L-:5
%XtYdC/E;?,C#u9`W).*F!#+s1^b5/)=B/,ig_'Ju\QFk/O2pZsHaRiPXt@'Co*\tVg)S%jP-'QX#Vk<)=cVhbE9cMa5uO35HCC5O
%[<7Ab(`@5:o\FUO+UN/p>kEsoLQkttb]&*5Hj)_k/4Ms>*!+)-#(HbiFgBVU@XQP[eE\ClXXNJMh?SE0iMM1aSI/R6?:nG]eA)?A
%ntH[SVo06<(cDSSa$iuf4uP.dmO6oA.o6%R8S4T(4"TBAEbLd]g0J>(\fcg%@)rK5o.IJILb.#9gg[H/A=Su`&9MAP<U5p>OY60T
%+*QMOUO-[]ZeCpNM=<3JA4W1'Eg*PcQb_sckIa;<Qsa<Epbs2pd\ogF3kL>7AQe@H@7"&TXgO?X_!D!plFKK1h9]AZ3+3j>isSFA
%WHhIc`R?DWQ_ij"pe\ktWQ9;"(Ho/K.+`.2'=C&)*o[(XQ;b7:,fY*;#3!._roL(P""m>ID0dk)6J$i),+LV8,<d>1R%jfF16@sC
%7AW+/-%78#%!cOB*Im&':m]e-g/:O(L)UIh$0]:#$s/S;jd^'W>d*,oA)M\HR3B30n=5EJI"Mi?].J\3McQp7H'oW[O&C^%[@!N?
%'#CHNX8`a3-A!5.OL-\a0TISO10#Z!MBI[b\XY$t^PL7,@LZZ4DT]4DPAHTAgQ0JJIAeVB?ilKUZhR(cmDueGnTZ0%pj0+3`U^2:
%crH0O66eH73Z5nh$'iNK<_-FgrWbc#M.H4Ge)IJu_J/A`%Hr[/iZLFjkhO*!7eeA'&0t"f5S%oX.0kXik"q6%X6Yp^q.J(\_2HpJ
%:E8gk4:faQTak7;&b&0Cr=E$5YVDWe%k[%a,C512"uAl2T;k/1=9l6?\6sZ,d?r7('9AamTP/ed!3!id\,@2mlH(b=-Rm2:BfLRf
%2)r:)gr7j/!A_U'o_*!SfL9h(B/2Q.>K3C'r*f7"4RBog>jd)aC;!jl[Z[\86-?9^6*/$0%;gc'jr$15[#8W$g'L&9^ui_X?)57Y
%@.b`J2-p=%N5XP4,i5+o8D;>lkr<Ke+%QHn9Je&uN<'O+J=PFm`H*_uMC:%-(Hj/0a9Hhk`t4m.:jlRqh?m=9hVauL;$6ItYt-G@
%'I6m#b3`&XJ.NtM`FlN3h#jf>JNhDin:.Wsbr!dlMQU]-5&(I!$STXM/5;$+G4_g?V+qaZ%$/VGPTT/OIe`R%$'S3g"Ip2*0M*UO
%@QSQd/?sZi:_JZWVNM-rcIM/-J:4Lt-W?+h"E1nD7-%r9@F^1SAa]_eaZRkTMNeR%=T`UCW?Tn):VN=9K@OY@K-u3M-_MYdkrb%3
%.)_''nl0Qk+jiBe,uH9H8H?geiO5*pe_>C)B&A!KO`#TGU`=<BU%o^'N+p7+4ph96pe(+$7_B(".j5a<m6etk77\d7Db+!-`VoQp
%+lU,/`\H*:8A_hYAYbFb!D*ENf^99*[SX8V4QL!.E>3Pi?ugpA7?(i@03.qo,B/JFDYH\4Y\oaIX;O)'D\\A=ln?Q8:U99A<?eE-
%&;8,uZC<V;SKQm;%e();U0puf9nEiL&jR\0Fuk8\DP9AU\Ltr"6.4'`@AJ%F95+TB6c_Y(V3[Xt%/8"=PT8C[:Pot8F<p`VnoJDm
%;`'inQhMm8r\@#b7Njcgf_Z0TKFNR!DsG-rX0$AAbdO&u)re]`^f89'c_[$*jP%C3>b*o2mkMc#*Z,thPOZIJ;a&)'V8G$n4B9pl
%!2\cCS8q;D+\mdD^k)`[lX4Y*FSJ0&NgdA@+5._^L3B+F33sbPk4KntO9-->nPuDnl_8V>m<??mjgjO#NXTZ8[S<:F-2B=>a;)a>
%,mp+j:29.:9I[ugLkC_b/cbl>Qa]Om*mI.YNV/*K\`1Y&WX>BHOE$Q4glY!(2>`>5!V^\,-mpZpX:kWEgHL/.9Fe4,CujrrM0KJ=
%S?WV#)US!F%/9oM:E"`um;r?Z@C(4i$UGSQoiim13T8k;$%Iol0<Kq%<qYGAiA%^42-o`G)\m"t<K%pd5$E/,;FjOE[25'D(brt7
%<2T.HR8A!TQ2?G4kQ#GNpUUenHLoGD$rgaSA(+Y1e(_sgWBmNQC1n<;$"os!e4H<3;6m<[on=%Gd<?U]KL<nEcq^/>KH?5j!9>G1
%Q:>/H93/l`OUGZL!-cU7,U?C0KD,VhrGs'iVPY9E1O$YjO-ZPFc?/r`"cX*VRiN#kQlOfoF$52[Wl_M.SVMVM$^S()kFlYFZU>"^
%GIt4lM7EnT/dA;O6>8[6;5+VK1GOYN;3+Q\Z!6RPCgeSP@6(X;"'BQG?O4'dI"HB)l6Q+3\&,5jB2:O#c_4J.IBtS]=GGN.UjJp>
%,hI'hX9^Ped2:@q)<Ls`l0<l[fHa)7X#?js5f-E7;K[=3RcEJm9h)gS.';6ac?=j%Jo28s)X;;82kk:d$7]<OjR(7;EN2i9"lU.(
%\V3XH8=4SHh46VUkn:rtO:hRf]9^VIK>)TTgs79u_.O!:m6cTi5b/NX>^'dPXoih1U,Oabia?.7W7r]/OY%)rKjKPO;/@ZeM=B^l
%9LE@j)7UMh'p>`EP;e.8h%u%24Q"'2oK^7sO1U@Uc6JD:!!AOTE5>Ab[4@>(M=QE"i[j%bD`Cb(SDfrTibO)sLg>Wt?+hl2bocB\
%V[u%u]T"@-!^U7K#eqGo=WmbG,Cb423,6)K1f,YoR<_4M!!PHW$Sf(4(5NMi[mV$qT')2'F9DRnD.<WVZ/'UW[SR%.e8n,ld9-A'
%%t.;>ZoQ,:i-Il&8F5XcI`9oNM[I.C%E'i2o/q5%9q3p<Uf=(M>Q@6d[/'1!e<tB_lqtg.(4Tkg1DFA?J\PK'=1dgc4m$%Fe8n8"
%Q/@N.Vmm(^8h/uC>9gZpek<tmgUuUGQ"J:(/r)iNJHrM@0k]p]PDE"A,#$It0I(>gI6XF0^nX:qmcbQf8ToW5JgQh(Vks)\9YrU@
%K#5T]#_K$T(h25n#UtpfFGkGZ7;.Gh^L%bO&QZ]+&>2F\4q#e*k`^G.;?]rpPT=]eXAN^+H=l^+VIX76B^M_)0:5V(q';#)dI!q<
%$KnFYU'b0s)3R<UN;XW]`,1C_0kri^cOQ%Y1*3b.nVro:eg1jSVD,Wuh!+;/^c++ASh,XeJA>H>0GAjo"s%L2YnX-<Qk#:"4k)P1
%+E9<MT)]ZeQh'*jlLQ./k#T)F>K#,-87U+d#0=HI3:3$bkl-`(C\mO*#fOHP]7-!;31DiR.!??1iP&Z%>S&]@LR:(:#UHKsn*=N\
%C&>sm%1\J6U"4gk"=jNYn+BrMnp\8V.=7lRU!]Nl)sr`/eL2TgUGBa;eW_Fqa6YfeP-#ANif)Moi]>&XNmA_I:u%k?arhmQLj^Eg
%=$+s"G<dQK?rB>.$2bku@7<X5QMu;CEOK.qE*+E4#\?eaUCr+c&GOk8%)"+R6L_l$2e,dD?;4K%.!p/jqMTSY6Br!lQA:uuaT?)_
%5o6W\NP[e/FJA"b88g=fJ`P-M-%J$jP<F!k6FSJBY"B`mKYX!#]_=')Zt[$G]g0$UXuhD]"UXF]fr'kg^48dcnA`Fu]C47*(eYHd
%*M`11@gQ4H7gqe?U1G15P=Wo$*O?#AP&Hh`A\oIO2pB'!/("s#ioM>.Y/QgQY1"\RiKbb5T*"cAKSDKYC6YHt7D\PnHQsXc44]\T
%K\H,gO6GnL7+8nA"!R^PkO3cKfZU_QrXES/);lcQ%K"c^Rg-i((3dg61%(I@",_t+319aVa`_b0p]>@,+F5lb21Tge$AiK<J5@U`
%,Ap\9`N:I>Ni0c(Nr+WdW`<`E7@K.$3&+.<aF"Tqm^<5%eLBe;4TJ\$i$'S,m3?T[+uW8r//m<:It=C;QS>G$LofW3ZB`B6M":RH
%jUMVW#a]P%cPf8qoO-7#FmoeS@a<hA4L#G]c#Y_PG\Z?7KXhNlD!7p209d.2VMt+C;9T`8E=lX'^+,q8SoV?:ITVUp\"126'9b8F
%Lr0pJ<u-,eUN!:Y7^R:?71a&V$e+(;Eq&-%m`m)td@BVA+6/;;"$EOS=*@pRc8AT0q#q8IRcm!Cq\1+e$e(g'-T4l^r)*VX=!ZRT
%qMj"go+HFLcL>d8Dt:+iPL[#8-)pDX);FU*!a&N3N0VdOQ7YH*jbc!ZSH.m_'-?`4+B@mPj_X(()o=&+(@C_+Q]W%^e6%mKY!do9
%fi=>=]W8@'*k]tI):_D+9,eLfK$?in>5___X3._6HoP"uo^bW=3dm3dU(#%]GR8-Pl-U.s3pe3"WU?^hO(ieXk@,>-iK,Ep<Z,TQ
%^aVNK30:jW9oaZ-NjpNV."M6b81J3^+^Ni>db1W]gVFe.M'=u?F"&+NUZ>mI[lF[JQdT(93H5?8dTXQRM<$B:B9%"gZ%TY[@R6kY
%oT<;l%KJqj@gP<?q5FT&5*(Ot>a,^%*%4Rok%"er"0Gt@HYlt:&@4QJG^!Z[2];$&?EFBfR^a.'"n*[i"X3"`$]iZaa>J>4Os&?F
%0i*0W>SYf0(EjKL=eoUt$@hghUBX9.8Tt#/V`2MHG=Dh9H^QU((^QZ79T6>[,@,_q*gE\_a<M$6P3!<"V/SfOVC66$HO+dB\YQ_m
%+mRR`ms:p9.J*0Z:=lJg'.X'L0'69-lmSOc-))j"Oh?>TUoOQ_ab!"?MA_p).be$DKu"$]j>X=\`+(e'*B$KM-'@Ec+s`GGCL4g[
%h94T0g-a5>M`K02)ro[QkeaZEF+pcO@/WoD7Al5Q$2?>S&E!i<K\m%GlpgH$^lZT[U$IF1!)%'9E)EE_7-/@Q'1-/"Qa^C4mXmGa
%f!.U4InrsB<W;>PeYERI*Z27G4?:8!RIfA5U*Jn<DhY<.%li:eZUBBl1"aPqr`$9`@;((ajN)_G_:r)NYe+0BNg,sdM:=e_-O^$1
%WqYc7=c,Q\#:CQVH\iD#9,lWkb"f3(B(SVHcHM,@/CV#2rfXm0A1=<(Ne<^W+6&N\-H%4_QC9WJIeGRZF.TUmfUafge@p"rc`U*I
%Ld1bL]$0a];&fWlc$O'h3Js]<1mr3:ZbsB";@XP57.^O9cYF4HSD>D2hmZh9^ug\O1JR1h?+iNPJmcr,+eG]H>%-Y)\_35>l3/U$
%'>?*'0*Wi*gML[F%LId]Lh&HJ?(nsV6Et^b!]f_.5!@(RL8$<A-^!/>0ihn&6fNhp=0qI=5?7]hg.e/IA/Wc"DJ`%S462(fHXq)p
%U=#YbM04IPiIeNukil6ZLR0jM+XTaPpGUH?8X@W"c4_9?H?`1B3S]LTVF\?9'd^&/!cQtaNGMH63!A'u?`RhZU%%E7YZ<M5^,T#D
%.`f]Ykt)An@\.c=(EFuk)@C*D01lJ?j^L(t;_)0/8=G$<1)9<*g!b3pM9%)?c',f?dKK6S/m>n_N%;M)BQ4YT(l*Fa+?Q*U&:fM1
%QA0;1J0)T$P,&4l/+M+P*kdeG;J/]0Ek`SC$;3dmRjY/aW=fj?%u5A\,jedgT;@G+'PM3\]d0U=L@]O$CaQh0nRY>lAUEcs`NMY!
%GM#ch7Nal[`Ji7(d,\U&7Ua;#<"40#n;@%IbZ;Q:m0rJ%!N2\b69+JY8!F"s6VPI&]\b1br5-Z$'nmr:K='H+(#*3f`8#lNGU/D+
%8tLrQ3sZAB+^^9)#hAmQ*+d"f<$Q-L(_>LBC64K!Fp1K,]UN.3Oqadk&XEc&EXe?/OEg&*7/+">&QpB^ZY#%BT+?j9_hdq0-O42U
%%cYQo+>et>d98i,&m+VcN#[[;+SMS):kW0QMTH:43DIWS3!H[,,*!W0,k?Zu2"+$<YngM684.u@POKoDW9X;lI$pNSQH=to"C=u1
%mWtQu+fm1>J440-\oM)&^TBqa*P0?LjZqA=)*B!n`.$8&Amfb?*=kF:L+ZY0n-ji\DD!E%+fSdAHM6a'R,\2M"o.lJDb7`d"&CP7
%<>B??,F_kU6bS$P!T1V<.6A2aZ&MrAZH\%SNT+#a9o#'ld/hFl.r^=E=e>jSQ0cE%,KR5l>?Fn;G*/FKH[F"A]UCT+R6<&,GZ^tV
%ha<`e][Csa]Sc4bkRdjmqVf[Sf(?7?A-Js;n:iiEQ"ek0[\P_\>Q&)4M]Op@Zn:(i`E/QLo]^?Z\D!@I2GL)YcPT9;51;q&U?I79
%&K$6W,8is`Ss7&"fL+=8@[p:K0bR#,X:/kWlB=&L>^8?Y0H$@4+SHb+?UQ+B=>a,d1'UepK9JITSHIU9D!QJqj=sdQ#Z.`fCqZ/,
%6kWt(.NuR!;b;JUaDiY@:9nV[Kf6$X:rJIdG'4.BUih<3"*&,WX/=iUULa3P?KmEr6*nNfi:8L*_mKO_m0$<8WenY:<@/b=$r:Z?
%GgAC+S&VVoK`t[/_RVG8+kT+&kFoaQ_;Z-6FD;N;il_gRAMB8DljiZpKgfi;,)GFLiUH=f/gO&Q=>j=t>8_9tEkDo+9r7^RnY6`X
%b8>B4<%?tg\4V<^\JBHWSoItL@MTmu5se@r$&\Q#!$Rkc\fMjR&."MTcl/U+q-$9[<,)jY6d'V#PlHo2ng%P8]8]N\HEZ3MP<],-
%cXiC]rBs&Gg!5LH\)R0d9$YfBYqBJeG_g7rRc!F"JgNBu7s.UIpPO$bJW`hD)OB:P$%@9rK2j1kI$tu;WZ,LkU8C6sd8kdIO?HJ!
%+>UD4a>m65p.="Qc./RHF?'r/a\M/XCn):QFZ2=DY8qZM8_r_RZW6'Z=?an_Z9U\!s3QBl2`;?qJ_61V4>`K3`AJq2UtQ;=o:eoM
%-0Hue6EXCT0+HHBGQK3@cD]no3l]?0KW+rZY"++7#3(LB&(U,qQg.R(`T@hEe^1OkRG&i#A_'h](VR`bckcGpm-4#f4E\._?^gh?
%o-q]a`8[Lb&1$s:_epZ$htK/P*.upmS=LT/2['6^8Q-pa%/An^>-6T]+X$bKbJ@$G+[19dO+lXk9nW3'AN()'4$e3N0%Cb1d&!\m
%5bUmG<3W<:C'kl+-X-%-"/c5U_obLq_"[tZBSd'<Nd+s]d\W1*Q7Pq%N8`b':51D[T^&Z7Qtnl!`ZY:)`>Ob\%#^mD9.<sbBP\19
%L0jUg[4+Q*F"4N!T<UpbUG]4T7;"6MeUquBo*B.^.%__ZM#MnO_M/m\8pJ7hkGN>\<;c7TB*(Dm;ufn1G[I<]V?4/o2A2jqps^P@
%CpI]&;0L!EHh.E&Eu-XU,I,d37r]F`#'h(76mbTQL%r5-(c\:SW+k@XL:Cq^eQT9gUJNPD4.tL_Ne*SNF7S(3dHk>\/LZO&Y+[+-
%4a&V%QJ6^?\JK6m3jX'"E/U/3=7n6:;,u,")'r;hmsnD$^.c<EUZaRBr-LkHR@VUFm0Ja2aY2e4KcFMCO0%im),+Tt#EkQV>sm.<
%S,[:aAIKlOOd&!+%AN"OL_DGGcZ9%bY<;KSOM&r(<c@k$,sa'o>+72t$UTO-Ab0(7:rus\PXTE^j4k;2)Qd!534TFU`rs6Hr]ps<
%#HIqe3H,-Z!*W,*KF3*m/Q6\uH1?2#Lf:;`[NUQ$p$=8ki3YhQ;;WrFG,npN>`2^Z1f8U=>6*p1%"Cd<i2Khiqkbdc@d.[q%PV@k
%(;<fAHlA#MS!J:TJO-C6[4[c3mMS_+e9GFN(?7mpkDK?p0Ll-k[7C\ZWu?XD.+s4Pi86A;OYe`Cif;jd,h3:13TL"Hjue`(V2#4/
%!HKJ/+Lk]dZT->=*?7[VlpIiBVgA=T/T&kG8sa(j'$7NW\JdN\WJF$(m-RWL5,cgt#d.#0<p+/DTa5G5%!4K".=&H4?QMch;BTMM
%#M8[CC-WGTX$TT>8\@g1W:q<_]U+Ndk7.OJ)afrhm_ar+%l]H-)"e"N]1l9fj2&0.`3:8"+Oh%sk?W39aGTF'':YpS@fS6/+V9I[
%lq!^U9[:>i-1<f8ZpuLI,]71bCjLiCJ3lb[k,Gt'f?h;G+F">A=(AEk9qWHqRq8d.N;VeG*lZdM'"=^[p&CAl2d9$(8K'MM\BXjk
%5l1a01W`@)@@,>u"PVH1&qO0(;H7WUr+>QH_46J/gq]<%/UVUp2J2u:h_eBjd=cj7jFW&LlE7Sr2-j85+p]r6%sJQY-]jIKIPNV.
%@Gf)b<`Hf7D%62QZkH%/]FK.'(7gFS?^a;?&j^\q*7J^#:nQ/!Skiu"BHINK$?<7,M->&'H;XbS/eu4o-Afnl(f"^P(W(:IeTe_1
%7?Y`VmY?A_84^]G*1X,Z6<(tg0Ke!spL&rSOsjUiT&,(6)8[(1fE5^<&5sHDKXHLo0Hb/tIWKV:8+E34;/'",_3>Lje5pGs29W`;
%UB!Y<8f^Lh'Tf?C'XoR^'@[b=1hH@^Q%c9u+Y\p7n>!mqE7Q/%#;Q]pLq?fF.D1=N-R%6VRW8T4]n+TqhLm6'ZSoC56AeLm!3-D6
%9p!R21%bGjGaQd,HL*1>m*O\K*RraE/7[n_'P9YVE5f>EDQX$Cd_TdgQLb`\)Cl6mW3I(8`75\W<Wqq#-m%T#b7`HiBo!koZYTUe
%VCf_1][74D?DDh&W[65)/%'YXf_,LEE6Nr_'E'S+7Y&Jm>:+no8d4A::(d2=E(eHD/0h%MncY#_S6W99coHdD`_]reI&Si0PG%H(
%,rHLV$1ZeZ7m=RM*5e.cjqV=$k[E'r'csCl@R)2HS]gAuQX3Gi_[4XDGm]`k20qAnB>d^OR@`Za@HZg8_b\WO`X:bW#QF#P4pJ0a
%-j+3(`hSI;K6N<mH6=)W/hdI<=WJnq)@[h,3#Uo\V`ZOcnGt3+$Hkts*BLg,"lH>;NYM1cIQJGnK5qD5R4)g#Kj&$&:`7:i*am?'
%X0_:0ZooY^b!K&0e.gG((t#jN+k#6$jO(OIF%"L)XdG,rg7K!&O]#O*8?c_bZ;&^m5c4fbCf*=>KbU)(j&1@Spn`TKa!Ds9UYmDr
%$j@UX*6k=dW@m1!':'"<S/00_PG6c>S/CpSEEE:&&V6F%g#43'X2'C&SV\*V;tTs<f8K9(<*[rk$GlQbFWQ'#%99<'ACQG=n%WI#
%P8K[@:R;g:6*H+<6+B4I7K\Dp%1(0ULfpE*=e.WeE],_bO3&6dX>90;B3HPb^<:1e'PN^TR)c<'!*VECMo=@rFQsEg$k^]2@51.Y
%>86m%>h1Q*'S'`dp;RdTc@YAjX8lK(/Bqp960G0)i=J?kl0KN(A%>H;j@bAq_J1QnJI#c:0d"VCBO2+V7%"D?s*1ie;qR8-12s@\
%&U#6Y9E<aG@L,TU1bilG[+U$l[9d;2,lWs4gjrmtbZfh<!*!$5JS$,-W&b&S,+akUI6c"BK>tu*RaX\uV'cVW?W7r@K>qlX%cgLO
%JY=:oLF3GYm1t<]n4["n'gchd=lSCWZ=`ta+b'`X`0"o5L^_Eu,q#*LP+j[5clMO^%,2>*KG`)&.,QpVDdf?(,<a9;aGOC*<0UO9
%3e%<em"u5*KNU^]*(Z;jAo65nLd5A"7NkqA&Hs:niGO\dGgpf`N\:t]GnruLbS,sG?(H`<;[fs&"!)6>,?-N8*aF[[5JY,i*1eUH
%8/hTk)RH@c$_eH3=,#?k+GVqq6=mK,B!/c0,%7U%W#dG<hG*_FIO9mpW9Dek+G(p=F<PSF1]JB>S4?>aETUYWK:keoAe'Q:d:/I&
%NJl;:iaS<K3^&V6;!,R]Vb^qNEtFEFT'6<E6YrbL;*b[Ok5:Z&$Y'\3*^.qng?g$tM_[d?`#SS6WogW)k)_hs'.:[;Ij`T>*&RH,
%j&M"=Y0e3YFT0sfolEGXa-VFh#n=).?4OFOCD,GnCj7tTD9-1QLY3i,`@_ZW+'(>3geMF#gSh6L6TG78"8`[]3\G;1n=[SYhr9rW
%-%:skZerRsE.U>rf\H$OF.9VBj^:Q>Z()5,0(U[JM(JrS?A'D>@ljH?K^%G;g3GF2+\^^^/5h&C:I."I*$WGn8=q-MdCV`p#)MAc
%';)AZ^iHqb:R!iA*'Yli=?38C]$2^[B-9d#UWVOqkQ0chQ-0TeBS"=BX<f<I%4VVE;.X8CS'[)VdUBu3PUd14Dc+XlNVTtB)<Ggm
%Oi4obE:X5g0]$uq$0ACNLM2n)EYr]f$KG%B%?n@tK1@%,O-at[aa'POKdTC91P;2?'+#:np-+t:%<6L^0Uf8gdE>Ue!=\1nWeNMt
%_+>tTRH;BhP7r?M:YdQS3GJpWV23l.EmQU!#'<>lIF(J4H\=`-iA8A5gM@1e_fRl#*$1,mO9<UIG5nq=8$4<-J=,B<JYN6,Z:-!n
%HJjd#/f;.%d<i)L(-0Cg8M!mD%EWiT#XqJ!@.,7^5EEc-a#cU9:n4f3+b^u:\6.en9&9XDL]opf`%M#I-ur"ScENaqPc$3PR\Rqi
%%n@g)8!/GHKL_[f'"Q;*]!jrcE1[K^a$Jd2RgIgA>Te'UN7^m[$\oE7^n<H_?\l[J\k(nDMuXq0,0,UJ'[?G0C6*LWaE7^A[kQn@
%DCA7'LHlQAl1PmF*4?K)(FP;cV9B"&lPfN'F7R?p'b=_5IN2$,.Z8jJ%316MF"4R4fF?Ga;`bP#O2JZ_89*aof"0"!4'^id:mgc<
%M1`i+R6kU=mPmTgU[Of_40Gf7\1HpTXE2LB;9,dEEu/q'Ako023Y(otZs%J338dHn[2_s&\BGD3S2`,W3j1slLBNX<ZtZ1P&k!t%
%)/l$P#0V#Hkb<pMZqf=7*f1.R!Z"J;$9Pu`W,XNaj7mYg`o/0MitaUg**h'r.DtRRV+7X?c?P]]\T,o>R$jX!bW&"Db088_VMrE\
%86Fg,oOO?lp'8:CJhb7g604&PbK,?4_iP[((rsO-L!DLH?,eiH["::4ih.3!?ZE_<S7g9K-q5!Xi=>\E0"AEifV)3m`J&/P(0^Wq
%ltG-iR:eS%"rL\7!fKDcO@BaqnQUOecuW3A'aIS9f2*8`S:b?'W&UBBMCaDj0=^,!O=m=gkY0(hj[=*5+0(9i'96-SL?&B,31RbA
%nDU>`Tr$5%9VdO:l\=4LEB*L)gM]&E4A;RtM^/c;K':>9!f>+E$t)rMTi=di3(V/"`Wimqi\CV7=U]:@!'T"%LdM6?'K?EYi(kLP
%9K0Ol5]tI6chZOCJeK6OK0_)8\BHOr*$-`Ue-3t=%[[!fA/lU"FE3**^X3lIZc`nci,FWh6!>\sL4`5m%uhDa*9#(%m0&ms%],=W
%Ri)\U%V-i(A@NUkVe.Pj32H-D':m8h6"$Jr1pY!P7(7+S(60(FOWhZJ.UbgEkGW@X3)Qo5P8"K3``R<m$4h2'0^"+E"V./K@`$%<
%?\_RsiA?SSI2O;8id7qg&ItrEL^W@$n1aH8[g:q*B?.Uai=^?aiIGmWTN5^[&+[R,``hL:@H50mLpdoZmjRsc?I`_o_;T$CF1$Y`
%@(bMfi*^LX.4H*9`jjq\Z?6q(D.183-Qqul)\<Nf"dj>][mDb<Fu-rLG50&j6`?uAFGEAY]+Bu:G#a6K#`^s;C]hKg*lCNgi$!8]
%kb`p;#[JAR*b&bk((37CNhP8Wn.<Pcg*H/!$GSJ(*5jO>J-$58,RrjE&F_C1ge7VBC#EWkSgM&\i#3NIWP^kFJ;776X9AUUfn#0Q
%s/iWf8<3^>"it;*_aj@6E:*?Co5(n_hjBDNA*=MW:-F16^u*?YBQ:d%)HUie^T@VTp"N+#cu5Hm4#kA%Xc\3M-dZ>FbgL9<@fj%A
%r3d7Y]Pf<_j1[r4pm'=Bq64tW^3+N*#l?UI)jDrHLuYH&&DB8be(]&=KkF5+0oGh)3/=_OUV9+Z:+L#\W:(9a1!r.<Z+^<Zm`3]'
%%/(.+1V*n)@,E*(-k$MLS^nWk_a8d0S0./CI=oh*LEml3XeUhJ*Mm-RTkQg`%:Hmnjs\09h?$"hfKIfUndR>HP_nFpI"MPjeK.K]
%%O%=6]3@f5263E$J.(p"+`rr0o$M"Qg.Pi1Q6A:8d$<H^p_FaP_#f!W+q;l&pti6B;?&!khAb6Rd//dN]d8d]OE7ojd+#&,Vj$L"
%np:X&g08)(79a;@83l.f"ni_bi?[T4KDU29]cGJ;=CsHH(Y'I88a6?!Qo#X=YL32U*$c/@(!YoRH<[?gkm\[Q(h1aPhUkRsC9sZZ
%&.q8_RAHf`&duX`Gi"Ma<=B\i>N-DfNq3H>$&fth1iK;mF/#qW4H\0t#r]t2db3Wr;;RUCSs/4EIWW)MEKE+ILEIb3'=rb<K[k3r
%]MUnU*2s;./T=[jQ/D^hgSkVB/aLVYcT0j#"E@XFLP:T$#b;rRHJO`rA%^4.&&T/C`uFsr0oj,inV4T4PK`$26Uj\nj;`+%GC!hi
%PN.Y%(gt-ngiTnJbF)X(JFU.,35G'=iC94bediLAXUE$kj(F@VU-fD)^.Or3/W;X`Ef(iJ8<([R5UFep=W?C\L^]5Ii>?M*$cR`C
%Nq#S&P01T$%L660VF5'On]$Su#B)FO9OuLs2oQ_!CCk:*.,O/dUZn4An]!*]6_?I0Hk8SoiMrF-NF')M^1A!sn/7sZ8/K5aSb=M$
%R8LU#">++#"f$=[!2U*5(W@>a[7/W#GXDPL+tSO/788L/!Jn3-YhQK8Lc>*%d6gS;nOCi;Zuio.hN1E.T:Fo#^2cc:Ae]/W^bP;p
%GiLG3XG15t0a.t"(<.:kd+Ig,GXKF][EU/Wi.$dGJelBG4fIiueVWh9gR%`CU=KB"MpX=Q`pj6`#P)Jt*,dOSTt-P#]QKW'm913B
%\6>#$q<<ESlS=OfAdiV%V91^5)kNf4!s!81_oOjQ)pNYAB''A;W!PMc\Im[0"GN%k'>/I=O\IjO)r\gGHuAJd_<sq!^h!@\E6=k?
%h@/;$?9/_4:",t`_ZfKG_p%)qO?iW?N84rX$T#H)NU@"GTM3[4:gl\k,<B1NE&V)5:Eci8E&Ug%A>^mK:b9O;!40c&&-]/VU<a;:
%eg24Fa%28!e"^#M7d\4-iY@p"L3>qa`(8Wrf7:n<dkaF9iuR\!mUHj@"a$7GBUB^M8r,iJ3O5.B1,;"kZ'!k,[3r5+C%5q"`)89=
%''6@u>QWN)(U>!CBj<VBG%1SYf#*@#R(uk^2R+3b0d;Mh]C?>T3<:LN6OLL?eOAg/dl'fj(9ngr2\:#FM;:uS7Q>Q(].mn#*O@c3
%)ko#7(QBZOZ&r_<WKZ"paXZnXU4s.DAIc;Afo6"P.!2tdh&&UkiP):YTX"hQcKrObHE!d*fo8b7e>8$W]CCJ$V#PFJ2f)jNOi.Fj
%VJ`j3<Y"N:N&$$DZ?tfg;3IF'NPZ4>jH=Mp/Uq#cm=p9JK5]MoDFgUaX,Pbl#oI^#WSNq.D\R8%]@"PeiT(VaXn'OpNpT<R's;a5
%CcA@okeb3Ah2i8H7o9]LN@>RWhun8QA99S9i,3oZ%HsYHDFgGpDn*U=Ge"90=)`+;<?)juS"Z`Z)foqM]BS^D$G1DE7PID-(?"+g
%e8mT]gBMksq`.l)OP>a9l?%n;DE"H>\_uOl@kp-9PGq\]V(T=p[N"*qTasn72g+s5BeV+p4MlXn]/"nk05tiY2ms[e8':@7ghpd`
%l3teFh:+!m6=Lrf:1,'8n]!VF6&4.ea1:$U<2))#M8eitXQsO:[[S1=,g"&LUN&cdYS6o1UoIC_j4J5`(?ns`=*S0F`=Q>l[i6"e
%)P,&i56B)d#/h^o)f^''4)D@1h.Trg=*$'32[h[QLg&GK60;5s40dTY2MReh*8?JI5uPHEL@%IX+7D%*@Cn6377E7(VC<\A`cf,I
%)B9Y!/Bf7YdpR1-i@'jY(NOE&J@H0'>EMR2^g0@"Sr;?_aYH=4.Ftpn?0XGZ)cEWh]o1VSabn)g)O(UE@Q.+cghrR4LMfk)2nYA]
%3l\_dE(3HZ*t6m57uA:KBN)P58/+Fu340\J&%IX?+?-BOr#EudGD!_o*Y>YW+DK4'15>0s_E:N68aV8^&@6cCh?+&u>/Zfa9%\;u
%[rhb+SbH7)DM9`<4Ia2i=)M?R_CeHiE8?&G$Sgs.g;`%dG1h`@VD=I]/k4s%RS)VY/QT?Gi*pi`WJoB0Z(9c=E!%/>L9N[8h5\\n
%5HJ[c2/dKGq.CM?gIe9#DH1,:[%,MQ,S!]F\I%*5.qbAH4?iu_2sQSHcj^<RRR/Bo)h(9f<Z.MKSrPNJ*7(a@f[+ii\Q+*()M`A9
%"c$D!ak5CaI%`f%-^ku_b[G8$6i.9=TG<T?\Q+4N/"Kp_8Ao5aZ.tEPAl/n[:]L]2%dpd!ghOoRr51<g+O&c3+_Pg_!kK8\OPC2,
%=Y(aUfN8_TcAC=+T>_9_2^%FJ2U6U'$GSfnj1#-<M@g@O)E4NKME/6T_!gbR@*[aY$.Q'=6?+M\1LMJGYkujqgDCmI6BSl>gut2a
%=8Xc]2]T\5.fc>`6gN`SN\1Sr?4a:*2M55mU!Odq%0aV),8YnMMZo"c#B3%/j(cC*gQ6r;]bA0*!J)#7)l"n#WX[j/50%8R>;nN_
%oX;mQYrHCN=rgl+D*V+L3+p7e<nUaj(/8#n(M11VgR>uam]C:deJ'Ut2Rk!SWggMXGYoL^Kkj;JLP[hF[`2TY>eFp5,JH0V)o=Z*
%KTP6&!@s2bL5WLBLR>o?_mVl"`oD0\g9s2W:tp.C,AdN)LYkFX!GiZ1hRG8o3p0:Yau8IZQH2B[6I:4S?!h8D[NV((5hr;n^-],X
%ZAfb<Ve=ac4G,^2d_7\P)cBXt&\I;8%Zj1^,o:,3p0"tRE6>U1B&Ek'f`oD$LPC_l9e)!U(5oGW"iEglN,:s*BUjlqa3K4NM08!?
%D.Fc&$s-3mPSEn0m4QC:p+"(:0ZH!\%m2N+N,;7^XC*Dc)t+*p[@kN^O:g`2Q^"cR<cUf7;UnQRCnpY8@:Ck/2C>1@#%qaNX/)QF
%6uB:hdT\r+N,:D,TjnaKCdTk^G;.#p^bBc@\.IEA">oV2,IVIfQm9'(9\7s7'"/BSA5:)Z@N/7M#-qe\<OhD][Z3,MNJ6#>'M=3n
%KP_.$`F["WfS5hm#<P]5L/CL@=IcT)![75mEtPitn^hf]JDlBC5::8GWeX')aDA`%,FK.PnTnh1kMq5483mJ>(LS1r)5s!F^p\dc
%Es<YXBEW8g``:%_fS0E#rLc,X)ncVnKJ3LE6T<K0D&6S!6M6G2`X1B2ZUQ,4/0%rn=#db\g>F$mY6I7O!@2WH*H/23,Z6M?"kQ68
%&ME49Y)VQgo[2T=D+p&siS$+gVS>O&<.#GcP]ODo^6@DCm%eDqMeIn^KneK=6IaLuiO*ffA'c6DD$VIT3u,eOCFW>W/\3hE(Q"BN
%D8Wd?RNHiTMAm0&JDsuP-Yob6&CSPJL.#9'3EBAG6/J-3Xn#WUKPH-O6na.)eeXOWL,i-NJ;(MV\qo&i]4&nbC9&hF+D3fRi3As^
%aFVfpqg^L=)31W=kkPg"<YXaTJ=KJ`L(gEn6o;h^E1"'XET744Bd6!)*`Ul>D8j*6LOlhk3=^qT_N/A9&8ah/0XNb7;P:KC"'As<
%-r_E2U3$\\Taa1"BNsO#D)a.9RgTI7LUkU"Mk>ub3LtI>i__)=(N<C:o^&eS?)$-HD".(k@DNAD%=\6mqp!gI@I=H\6>(pp&jf_\
%3?.F1A*$+h&$X@<!GXNG-WA(iK4`;k)8qBbTN,E^XUCL*WAFU6`SZ<;'jB`Zo,8UR./ChRbEc<+M$;(gg#^D;T-8(#:!0oI>N2;l
%e2L4oAXmT+I).U6(FC(N61:IUP\ccFX3MmA&77nF\oKR3AIbWrN,2;k"He%BPNIB.d0DZ<fs&qu=bHm_@<YTe0cOCsAJTs^k$s%^
%O4Q=34>mla7l[DVK1D5^";D(\>N]02B4L6_^O20;Z#tcr!B\]]i$44V]UXoi3)$\hE%j0_1F8Wcg!7nF\f#K=[a*/?/1NP'nCQ>m
%Ccl&jM?]tfo-4eSM@G#KBR+\SYr.eRL;B803ldb2,dtu-mnP&bSFFmEEQ'sAi1pSFVN%%.`9s"uM:e2S-4`ki((a3aS->=R).kiF
%(D7[MFbD#Z,W=Yk&2V1cfRe7PN=1U1GTpX,6OLeAE@/+:YkUFA',rqVfQWjBNQ9pb`c\$Mb9I$3*$/KsUUZ*]#A7N+R58`)S;R8G
%d^78RIkh`X7#hhj("e7MlT,Y./0m,m#4V=t:;d>C6XY^dgGoVdKCINNo<9B(A77ua_hR(-+dn7CNKM-&=GnkLSIqtaigQ;f_t!d7
%)gN857[rt-5i>&51P]C#%e,uFCfDn$RLR/(N=L=D3"$\-WBA>S#$RcrQ.!Jd$QBI$Kl%M^$Kki@YGV2`oV@YFYVCi`6WG2W,-lG4
%-OUk<=QhocN.m6K=7P-F`ko/^>V'^d-,mfA(,eib]UclJ@>"ImVQi0W(,dGeH_3;+)cFK#c"F;c;.O<mCI\de#]p?Sj="ge>gSCo
%.1$r7@)ofSfN:%:!#Z)IY\oie,]&Eg_'Rc+_T((Z]1[eIbod0k,=]PijU`YU>U4,"7lg:3C*<Y<DRVm`O@#KV>U4,bU[]rfNkuPc
%,Z(5,b-VkeTP3<b#oiPP0s'"QCs[lMg^>K<do0kkQHVq;7QV%<:,iP!2(O"=#@h0eM_<5^>DJ1[>T%46$tE]jMb__M"HE,ZaFS+Z
%(,ib:T]qH@YVAFQjD0HUN@.XI\!)ISVl-U0(^V-$<p1i8S:h>sBVW+/fSHt(lNnqIj"W'MQ349UVO*fdCj$YkZ(N9k+)Gj0c,)`u
%TQAOYj8rbb0q0A;)$h0l;Q:"A&iLRMW-QWV_PYs6?*m2Ukdj;4,U6`-$3m688D)E4<0_842J%^glr`6@lH!f6\k(IeP364p*@$IF
%VBp3p2JSp"p$O)6drWZnA<X7&"r(I]8D%;c@g!Ak#of&\9.:/dc"FD&N.d0>BOZ"EYT]Et()[Dto?e=^,]%k<^js]g#oaU(9"Nu[
%;/e;?fSu\OfOZA=@+^KM7`0s^:kK44>b_I[qA)&)fUuqVqk03OjE_]A@67AW1i,7Ae$)[qUn.^JL<YLW)hopuU^?^Q"'>Oa1iNp_
%*b2Jp:i(n_9\#Qp8/D:d`^D\B@^,AJOp6P!1"at`TCiIWCWc"2O(5CK&$!i+%Q8I7L0K<k#FjF>fZb/\mJqD`NSP1aF0Le")T#Ed
%`kf[$-feiX%Q;U$mVLgoW@1G/'+Vm6"9m+o3=$QUA]Q6=J[!PIKZjWq_T!;$_bh%)-;Z&q-OC`=!KYVg#oc[ul"/J*KFR&H)VXI#
%@3\&hb[AdSh?V>\<H`j%eP\dNA*YIMU[*cX0>PA760*];Nl"9W$XNi%6=E5:@b`OL2PskpE>1=.TQd4?KoJkr#9o2F7O&=JOj6hV
%BVu09"!h]IJ44W-#W&nDP`\DO`^:-V\o<h:m:8u/`pHQ'FIRrCmA<It!!sU-l'UKVCe17k?(?S-H-g'E7Dd&TlnV>QVJnmsYYj':
%!_I<AECTo#CM/Hs]d:6s.s.2a=P.j@,Vmd$AmqHG*0r^FKoMeNkWR$"f-#&Uf[nBb7^Ym.V!?`DK]>q3";_?u:1^L[]_%$9<K;_&
%N>D!soF5X4OR.$uYU+*u_.QWLTtBgr.1:a0YWM"&$uCWc>q?,e_CX+N!F''$$TA&i@n&rr@a3p/D>^f]LS0QSXeD$+q(mmZ[a<VE
%$`A!>Y9@]l*OZg])TRaeEq2*_\"GV6"hs+=@LIPm5%hCXEL*uQ,(j1RCIk7o9h)gNK;XfC1U$<S9:#jEf-1S=ZA@+oTX1\=.3JbH
%FCod,l#VXn#Q9GKY2PBS$jsJdW,j!5M7\KJ%7Ko1g,8%h=gVt$?OuRV?%]m.QlJ*N)BGD8#iVRp^f(\MXsKK/SW%S@nb\e9j;JQ;
%6J;G")@jdO\JR\=6eDKIWm).-&jr8##hP/o#JD*r/TFQT%_.820YGZb`OCTc+'l8<eo7WT[/r7N+N=V(06a\'_`FQlF0meC%<]c>
%>:\JBeHNC9';Mc6CCO#o8CZ[!CUj-?9Bh%3.nh1lR+Cag"B9H<2*;`CIP.?PGZs<i%8T8;&:5ei2U<<>#B9aTE7T!K+c^hCZN`'%
%gb1\3)NM[34E[p1;+V/C&00&i<?PUfN&?!u4,@,UCJYpP+u65sM1eIC&_?G-]]R4fYQb2i(#a]u`*qeca8slM*[n=0KPc/qe<_qs
%)87#;BOkke8+ROCLZfE_D/82`@*W4_UE;jj*\63s.sbB41l"f.L/\TJjPXd2'>V0/$:b`?YgmtSN^S"#e4K$mD?d5/32jUrXTk+j
%g_)WR)A(&I:ZTT3R1Y-X`+h]kJEF_!eM=%QEF(LJJB>llX+jR^^ur(>i7O^QO2J!VD1Y3[(@BdB/Og^[%3cgUBfW.2:XKD-eSo&N
%p-+M9#"fG%3_lZ?R"pbB;Cu$q2_mi["JS_g.77&Z3Y%_%S;:nfo#(jbO?g9DFsI>"kfr)g<(m-Y!7%JHSfb*=*)CG1fj/]7Lo@(g
%QRi=IZJgO,g!lb5-EdeO/TS$\:8WbU@@:]%G<%,eMX&&V_c\^3)&u9Y$$ZORV,E6LW`0e!R`GMo6XVXJ_gHhd,diTsf-$2Z``:Ff
%UkXj2:S9_/)TF_-=LrJ$15,LX_KL/M/>i&)R_br=>(q]R(Q;P<_cX`fZ)GS,(3g3UXjW$X!>79C9m)H\)"]XO@(S>[:c"G@2hkL'
%*K6i3Q:@DMAY0."er[O,aIi__$XT+7&_%`J"$(n#>N?%Ye')CHU/.if^'P"9(4!9X)a:CN?kSqlc$UumoJ@UL]HL)25mn4LKZVKI
%/.4NKj$R4:HT$$cK&I80_5Ym;\=!Og-Om57<#`-2dh3=s3-&3`;?A4@@j"!'D-Oei#l%>3kUFYQTF]02<d?U08UmuaY+;q6k,lp;
%dk]Vq"Ih7h_XN,\35CtPRiPg7^ff,oSu"'IS2H<*W$.aA\S%VN/'j$&&s,F5:#rPC[fZH!Y8"e#9Q@'BfQ<LOm9-N)NeXl:e$@&.
%kq:C@fHVf(PC]T^'gaRAAt3S'LV^PUdm+=-3JLJ0!<ke#?Q!Am&lb17<f^dR)8R2")@h5DTo0S]iOG-0:Lq**a?7t>g$-?E'j"AS
%NJ@>1q=11JQdu:/11H(Gn<HG3/ZfE1+Q5d_6RmhIE4!!tDe@s=BqXg%k_om#XUFK)8^<TUBJaHCAD,lK4;2g6V)=7gUWodd)@I7a
%@*q755dZ-$.BPArKpA[Bn5B]DD'c]JdQH%]9#KUN?7!`KdGU@MR^<GM%K=;q6GubZJO*cp9\TL0A4cAl$RLcXCgFA=dOL$Y\3SL#
%?leBSC"T@`R5qWoN&2gL$Q'nI/AEa-6_m`M7)b#1Wm$K%>mP-EI*k$C.7%.tQT/r71s@2&O),u8246lZEIp"o8;[k<7UrtO&+H>O
%:<R,ABT:gSa77Q%rOa<bd%^Vu8Is&`4;p=Tn][3%UVVWugX:e9[d[gt*0'G\4H<q0BT9j.h:uZLetRB4W`C)_^$1h]ULCPBRCV1/
%7UrGHg!".-SL.O]BOGg)S]sT^et(E(_?u'CDIaqI?8TYDMXga")LuL76fYOen1C='.1?uOXXcpEXD!S*D`K6bCuR9@R=V*+5dDTE
%3RO?.DIK95:`.m/.FG^pI?<9LBUFDh43/Sm3faF'N+hC,CdbYMc\FM(>,0,J((H_9%W4Bcq!M#]28_c`X:6)sJj-5D`bon7Ttrek
%d@`T::=F=j)&g3R<IFiU%7aMkF(JTipl$auL4rYqr%^Pc'cKie1_rYY\We8Ws5H^c3+PC(V@*^4a>B^=6:-<rNS%+RKXMLu:hVqU
%;5"_ZNj=bbTH4JAlkF)!_t=6+mUW3G5[9X"#W<AXXA_&Y2\R,!>V^(g4HBTX8Q9LK1al<I1V;@R_4['E(h`B36$\[I4bYla+9;X8
%(C_:M\B('!0PGtrd@11S$X2XsEX)tU@4kk%$6$<7<No?I8<oI9!>75HEIqSNTXeZNJY5ka<n%-[2!EU`X5Rn:AeAJf"WA!beF%oR
%"/ZIpF6*sH,dQWsc%$k"N"UWOlnqZFoU!tN6_FB:F,G@&AYd@GZc(^V#r3bg*k.S@;P>/2;]rm(j5r-HNT6MCs6[=Uh[(J&AaX"d
%?*0;\rV^[#f&,urorFk*j&X:?^YM?Ui2_ZPl*j-q8\PUp!d:StIa@@ij[fnC`aGBIV-5Np9\SX'D`uS9fjDUGH9^+1I^qkbqKYT/
%3A^VCeGCdu`N27)H:.6\N<[Ws9#*6cNHKAmXd48J&%,jA7TGjYjtTnT=,]Z.o.!a5*pNiq7TGjWiPdAAiiR[97*6?brUtN-auF1^
%S(1is6fhR`7o`28UMj8ZSX'"f]W:P>6PY&PFnr,/j0g<.qOKsfDDmF8k:JuLok@o<%j+r.5-IT!m.TaO(3uKk<7MRFY=l4Z3%=Q[
%?VE+'LGSPCAmI)9IpT7/d5BAno<h?uVjBD'OFL5pCUS8sC9KU5bB6dgMtuqo\u1R0jn?4:%'+sK;%5_HWm(BRMh\"b+8<ZD\gZ1q
%GDbO#a(SPS71\BIdu1``*8Q\q>!PS(>&CTUoNE7G<O&ljpDR@T%U0q/*@$Sl^*HmAG,nj7H(-ENW>$a9IU7QtUfmC[VQ/Dg<bKi[
%\aWR`S#UMh</'eCb*>$mOmMDSX_N'[be75K;(H]/(;pMYjucc4VRkP^Q^d8\;dF:@b>!,i\&qMAHg,RBW\ZZH>ho7rXQM'&WV,Sd
%31LA4ha#rd<f-:Ims'qk]=h+jr2%Q+1-EWhcKq=k>:S'o$0<*31kg7*fM;)mWc4_t!d9QP[p(_Yn_pkpDn4Q=j=,@W"%skD"MN=$
%b7[nqTo/)OHAqeRDjALOZhM:PR,GN(Jp!R(=^D>1(qf[%Xa7%SnS;^GhW!6HJ(20a#$JZ;NB%M5"PnO)C_Y-!dI:0[=8(mAn1Re:
%gGXs;rF,;0'$[m,Zlc5g^M\-+X_,%T1qhE(m8$2P^QA0sVLE<iRc]qdB`DU0'b6s[OoKjd7_a:`Pi#!043F.01%#sai2ng7>TNTP
%aV`]3[FmY6B&QqjH,[k0WHuYHL5?Uj4E!>l^P.-K_gjD/2SO2Y0]#06dWD(aST9\D$K,>sW!sF&S=K\K``UlpH'ob^&P`iiFca8c
%5oO#L]Sr[qL+$+D_P:F\^X"(6dAcgh%C>5o1)%&[IR/&nqn97@m:D:B:^qEU3DQFar"Vln<u-rrG3G(AGrD?B-W8[g51.)WJ,Ieo
%9YGhN?9[gY8,-Cs5)E=@*q,KYmiKc0`nn\th]leZ+F=rVj)2j/ZmpHA5:.Q;+iq9*PcB-b6^).&XfhJ*]U)7@]&DblI%muA%imG\
%B<khJfb_)tO\3<h::nrS\"5`6G@RS+I'7*t\p05!iq8l%!PJWU9GanI7LoA,^80Xobpmrt1Raj0r?oY/N,jMGYSZXb%#jp;ZGq?r
%HP%)BAZgCL7\7EJILeRuNU?a"[XW++etd+E'+QE-k25/<?s^_a7N@can$;+MJ9+/q_m#SsXj]pS`r=3HbemRWU1,sKAj'eXc([.D
%bM/YJWdZZ5a#%/,hqOc^Gdg7F]C!1,1`L&5G@\'.Em&/6jDc6d4=<JE$2O?\^,LNKY!5.S0`L<*LuTAnH:8hNXk&,!D0#?K58e&n
%au(dP_8&P_/J@*W^3PRQS4)k%V_L+'Zeg<XA9):qLW]PJZ[U\A>M5cQ=LhV=HZPaXO01i5/03hIX5TlrQu,gqn1ZJA/MFD8CNO^g
%YXU^SA%hdWMuRM9#4dhTOrY4d#nQ\ZQ)_O_0:o1UAK=dQR]WHR.`%Zhr==8e>a9>?*`]V,qQIo"@JYP%s6:IBNuJq\3N=RZX%h(4
%&?8SalG]Na(QWo5erd(`*r;hr"jBDVND-bQ:lPP3Yik+IL#s>RAmmNs%8W19m:V^B)h?TCg=-dI//4N3GOe/l;OL*2?VEU[`lUF1
%Bk35%>lRQj-seT6'Bk</]eaU_I8RZ$X\%2l-JTEVK4m7g^*s">]?UQSU(kA+08c+=9RTd8^*nKMDDUrS))GR]'*jcjl&4P873)3,
%p,i)EGcAo_8CURFPW+cu=SSV8)Im8AlbAW:MO2IZb,kV!:MD0'VoDYBIURDZZ7dRET'+55CYBGc8)0K%NqfTM(hF#f'u)GgGt]DX
%jmc-T&5D0`ji-4<.AWU)#06_re=VjUXC%aH9\6\UXD>t#?1ZDGdrfN=Y"dNUM-/A-*Ki/mf;@Q]3%o%o%+=C?2I4kI[]3&U[AgAg
%?.GgQg36]MS0pXa,<4R%[jLXl"TRbtnjFJu:8cLkVia$27NS"+3fU#ca>ISjOAGT.^dfo'k/iD)O`sb;)-Irbe_eSs[Vl"fr0*lV
%7oH%qr0!sL>lQisUG\8b0lc[uT+DT%5!^Oq%Je)[&b7mVrs8G;pPh:Q5?h9f<0VU-2Pm/GS8*I>.S@/Z>a3R81f73d_$a'"h\M,*
%P,_KN-*pin%_jLI21=2Ud7\fN+%P1MC*6k,^5SOpoG=H\,;^]rQO=W<Sh:qR(ajcNebOE2iudIP)#$TW["*YC;9NJiLQ-eFI&kY4
%Fbq5[dN>nmrJU!p-l7I<YMDUL!Zm;K[:'h,B4jK,OU;%/lJQ6:e4)Df][UAW/!I"DdKl*S%s8_4[caYXGZ*+mZ/6R]::4/;Qp!)a
%aTV$pSgF>lg*;([I.:EWP*:,%n\r557f#h(rMJbm5OJCC:IanLc[WuXg&4t7^Gmt,"BZ($4AO>hRIBdlGC&EK:ZtL0n'(N1hLmUH
%o:;KK:="<cB>2hN?VfgV0s8gobkJ<h,!;q-rD&c:W]@76FBA0uM#n_$JSMaNn!])6PK73-06?=$0?1MFFImjH1fs*Be`qomYIAuZ
%]P@-)F/;A^"H%_&oh`9:+,p$L2sra?Rg.b`;t=1gmiEYGXXn")4c):F9X>T[F3fdVD5@$`MYp@he]hErA!S=@NmShm=tkf11J`qh
%e:.+/eY`&HWVu2@g3trn8p4r6S(c1N,Bl6i\X@U2aeSOQO`t=dJEEP#`p_GI^GkM.51er7F,nmHPH:LqIL*7,8:=F"<7*[96J=g;
%Hf;TjN/0YO2*Qu2nY+\qMaX*&r3XOr&Y30QQrC*K?SGTrrQ47k9CEThrRN<Ad$H4qs(#kh)85!_R9?KIKiqj2r\?@D9FWXR_opR!
%1,Z]QmZ(5`b@!c9L6nmuASQJc'+?OhPD6f4T?l.,OE+%RR:luVQZW#-[n(mFhSf/FV#BO)UJ\0fP7=#N!]_*AfRt'^_77B0][U?s
%S+s%MhX>OW`OD[<GkW$ps8B3/m:D:B:j`(]Eua3DD;7(j.>_cM3WA^;e9#&f#[M4tp;SP4l$F#0^<j&^qU1VB1oat&b<4o:7]H(H
%oTGYm(J'Yn)V$YoJ)g[dc\opfjVBWAiTqU<MC]3@F^/5e^Q!,EH)ZFOgK$&XGYaC*TB31q\SLnH2K[0+a/*S"k55P:n_[1Kph+pI
%HR]-Xeh]P\(h@YJAZDFuJqbUCU&!#)BZ9W+3Fl\@eW)#1]i=1HC<;YY)Tt(>b1PG>'_2&rB[7p&AO)>?$pZI$r!5`9DjBf9`;c3,
%4,,Mu@n_E-1UU_OV#[TF"$;7(3_\oXA#nihg74eh0rB,QEU0$l*Fij)Qk2=`kfQ'+P=*bt;uR9ibiOj^ll#KV<n3*I1]?.-%:_PM
%,ZQ>nakf.TWItL\e[OPl2#E7G1(o*,7/:e6*`]%'5n>Z=K$cI)*V6[W2N(nKS:UU5W`ufplW&;N@E)T>nHSRGX*%5:k/oj4;eo!M
%[Pl(o#7YsIM<.L5iM@lgD0.Z*E#VHRj^eg;NR1qi@F:PgOP[+n'S5mtW\m3fH0M<U,ETVG!GRE#qWVT.1Z.X8qK9*_9Vt\6P8$(G
%>3ZfJih_.C&^T%3#'ioPV-Zh6hok!%;fsG-iQL't*f%^F:JKO&k4IbH#`cI=Q^91LDhkOQB4BPi*@F++^6(#(K0RWaRc6\5>Pu6N
%M]\dC3oRZ?[j>L`c2H0-RVHnBD/QAuI4K0[_`g<8k,-kf<1BAgL])S`Eum:Q'<'6&W7=k<S#UO.F`+5):"?eR3]F#;aPTX]o2M:&
%;<KQ9XjV:2n?P5PFh+d(jT<:Xd,qu@id:!4*ouSm`\Dk5)`)paOC=*K1F^qk9fuKdb/^#m,pn^(0uD(]T>g-B!G%//(gSMH"2.fb
%UJNn,[>9kj[G"*TgAA/6a_oburMY(J;R:bG)L!7kO.VebjKUn416'^9n0W/kH0pE-hfZZ(H1RX1pl,1-3T""$kTX+cn\*M^ahBFS
%K83",h^KL51KQEG8HQ']UDdkgW$^jlb!`:epQU$PIKk9V`jMR_h.rq!Ef[5$^K*INJC`C2mX^GmAnU30IkXl1s.sIT^;b;)p*K/D
%dscAbM;eP!ACejMO61=MhN9CTP(tX7pq>DFHTD\EEfR.`\<r8+an)jWVdpP:dR.rNbA0>K+Lh[sZHZi.c&IiB2jFdu68J>a7CEjS
%*I&.(H,[Ok9>(5FaQhqse*!Q%rRPjDbqE)DrlJ+fRL2JJ;(.mU7"9MKEbl4]Zr$D6lda%'O8X6Vr1E2N4T<68dOpKGCh'pZ8Zjs&
%O0^Vbe#8"f#@XFjAWG803(:L0@2OgA<<m6NlS-Pt_GuB\W0cB0is0=@WkD$BoQ27o7.$,n%FjFQ5LumKXAL"<6;BJ[0j`5HI<5%d
%_2nKUkbSd<c#K9)WTh,V&\?P8Du:)lj!7fiVj@jQX3gHZ(AZ):O.TU5M&[,bOQ#fEDVtF-QSO\9bhqs9[jbr*A^i/rBJa#E0Z`9:
%&1/`5%2XC8p<S)8=Xfup(B="^&p_Jg=Qd_Re(Q+_mXF)72pn("^"#.>BWd?h1@`%$+5]NPqtUhDURX[bcc?B>#=q>"K=Eu9P`25I
%AK"-_:B$u4fMTrn$&2-$6*;+&U%[k9li*<_1BE7VE0L?fb5X:TosZn/)3(*Mj`9mJ'W8](lGe:XF&p=K1uY7TU59\b^XL10A*p:4
%G1+pd#ji_of#'YGi2(WF_E'.B4IfbdKeL*-+'lEI]UGYnc/RDE/gK7fO9JWkaS4MGg$WsLNI$ruhg[A=O46/m<?)8Nc?G4Z\*W3'
%KeXS=?^#6E?:as:erMHh[nMJ6K@XeEP4[8rnQt[Wb?M&ST5$@cm!,)4=T09VbF_ac04'5e+3Oq`a&KBU?&"#H1*f"(\!gIj'P-_:
%=F/bMXu;j.r;CQSD>[/(hdu,%o%t+n;hbu7<b`@C?bFkV<d[D,ds*c4^6;<KPju(5IIu9I;6O&nl%[$[k$+ta3r*^/=F')qojqKl
%'o5i+?(@N`[3=Xa)@S.T134HK_`f4X_LLMdOnoIaq8LtMGHjmr#=.c2R>qNseuqgG"ESVJQ4+"NXD7K?j;a@\Jl=R/D7&W+PptcU
%JcB[B-hulIJ<Vk\T:dfm@5[BZ"]\8s7%*tH#eD>pm4bK>@7=bB]8FEX\<#.i&,<M-rd#`%^QOoP*VjUA6b_"+ad6Wo)9>HCUb(^?
%%Kk:r^2'q[J,EZ'r0Qjos2uMah]Mmka8bqTs8'ccr:-D/r4i:,h^>?pfN"_o*?FfuO(XH`g$>'5*neCH$GLV/7NTqDFjPq?g'MM6
%ofKOWqhr5h/R*V+SX(mj!62bHgg11+L`==%rSX=i<l+q9^S$CODRn/'hQu%Jn'!>fh!kI4E:h[r55H6ha_VbU_&%TULWAGfUcc9T
%6+a7Fad;@<HQJbfkB/p3:6o6oY4fcN'<J;-!DE=??d**5O6Ag;N[NWZg-"O_e'r#7+l=pJ2ng#9^X'peJRo:_YH8t'A9`J]l!0.h
%gS%>ks%fe1AB2P?F$CRs<ZN7S5<3qnJ^e+H?o:QbMZ!`VH]pp[[+>083_t80!^=3V16UQ,g>;XO\-PJX>=-\Dop@u./]2+aq8X"W
%c2#DVKkC)L(SfH=Hn&fmbj`TLL)[0M?2)BrDlREMq7/I[o$ps`Re\Bg$VS@CY)PjR$e6S/0_i1?1s&D19[;uF@r4>-e=$9]*#/F!
%UO4K8cTc_kMCM^X4j=Bg4[&@enF]4Yitq1-!otA_!>"iS&o"&i(k^r=V[h+6XoX,3m%Ir2H69,9`Os<@m`"p%Qfi]ij_jnG0c8d]
%Y`a4re`-=+`\fd;><ap'q?JnOG!@i"_Jqs9(t;:Y]Pa;nX2ZpIf2[ktc%>Ma2>]3UJA-M,C)#$jn>B:_1dD$Kn7,.l7$a9dX7]><
%$EY?].h9gEn"`m1rnKu(KmEQjZ&p/JBr&c^GS0arL_+*0)iJ_nbaqZUZIPRD)#[eob\W+R83Dkl8+*eZ\$<c&V,/islX<dmA4;`R
%?6:1\QR-oD+]T2sp[CC;T'),JeWo3YA0i4]--YSo<NtdVas\8P+32mdfi@B4Q.4!`A+`O@`pE/(c"=#3[a8pS3%(p`X;rKk2pG77
%e\6"0P-rC!elr<QIV-%coe(HR*rPCCm!R)c]>'(,47FhF@A;4ca#^(0,OP5`q9FYAe$Q,).m?s5'`.`DX4loKY:lI>lXn2F.e'nm
%X5.sTpi0hdC:m^LpcnfRY<W$X+92;#s7kXSq;X^>plBq&+$PkWJ,f%'aIiM(5Q:OEr\kqoS"DX?75>j-P<5"MJQFKD40phMfU2$%
%*/euPf(6""=t3_"/=]+l)WB;B@nRILn%TP&@aJ+5duAKrKpL+80oP/`HP;;"_$1r=RO*[>X_j:pG#Qg*22lEinE&JLX#HElW)rcr
%XR`Kfe?0!Y>*pTN>P4"dP\,<JI]qip1V,`U;uPMlHtk2W#X1EmIC3[f=DRSV^?87lhu5TR[G.]#4jup.(Gt*`c)pls7bd;)]%'9b
%D?g?tM]ZIa=:=ulM`pF/&2Nmnor)_LJ0I;%<@s?r=nRlqYc&"ZRSWQ9-M=9^S]esLRI,,eO_%**SlK`qiR>Hb145PD/q]ffRUg!k
%f'7q9r5Im^m,epc?(()I?*j-\l-#R2omE`:[:^2RokNs9^hh'8Q3EeWWr9BpctGW;NG$_,D7-L.@]uWsr?P+W5gO80!J)olq&D35
%>25dB7qT5>NE@/Z^,(t3[XR\9`=dW=ddOTcT`+d9]K.3Cfd]Z#Ihhat/G;W0P',GCOMRE[n,,nb?>Ym4!;"3KU_fV2(O2j7SNgi[
%`bt`aG1pp#nD5ft?`r:@XBcp>:AIY0DE][1?/sB]CN]]Y#7LJ_R2:pg-cGDW-Aeas%`o(0r-$Aei?R&kgL/=?(2;/sF3ghB$1b=U
%$+!r6&6[7-ma1-+#u9[ff0dLW\"K-Fl[)*^N%.^OZ]dt(?*!CT]SEV`;2::rb3dE8#6PCIRVubh&gX3)6SbUZ1?j8$cH#M[W<t($
%q3JM^crrb_jBTk\++iK^N\'`8aj;N*T=,P.kcX%T&+'Ob*R[F)N&@6n?A8R]@+Vse%4qfsFVj,fJ`[f6ZM%]9;nr!AYqYfIC#eY8
%Wpf(m%.k^rnkM>@GU!M(B"'GH)O/G)W(sn!^>Urh_RZZd*hN2%CApgp,JA*8>+mc=(OTCGm%MX&>/_JR1bb'?HB,H4@(C9aX<J#1
%%rs^$fC4n13<oe,=Otu1:WDATI.SfP%?'-CE,d8r:VGI=I6FkdHHb+1F]pXq5Bc0i*4_&@YNd?ASA@"9*Lf.F*FZWAm2N8;q[UkX
%bk`\m"V$bD>F'P3m8iK>%37UAi4Re_+8el4<&1O_Cje4CR%Da-Ft9BT?:L8KXiN=lk&9L!Vq_+>E5qW]%Hs$t^0/utne=Z?X3qDn
%5$4ah1XUP@XCo0tLt<upRDi45jF";6J#Nm5VWhgq<UeXh<0)F)pUlj0WrG=-['8Vr([QI\l%Y9Q5d^10T4!8&nV`7aqJ2kRHM@:m
%iB9Q#jW6b&>)->23Z'afl]T5`HXI>MBAP@YLf,Y&BW=1&Z>c3hUp-Sl3mI>[=[SP>F$;Hs`,d['1.M9AaK0BDPH8lSrl%p9A<u)O
%R;`&6eT65dGN2%7>B:N>PN50G4Yf[\I`!>&h_2T@#LQ'6ekad!`sN2H/hF+Z=B]Q9e1"JZ',)Lr-^`D42H4G3]I.N,cOF15?.nfB
%?D5LO+V4-?[:K5f.N!/lJftQ`4W.3/5&W!gQceI)cruP.Zf\".o[mJ,oB-SFc8VQ<BI8d7`h)sV6DaRJ/R.9+<L]qpZ-WYM6eQAC
%Fk[JArmE8!gYeMoeDS/p]u^M_2X5oVq-^XKXkGChMUju5f-+$XVe``f-2QZ'`E'ZiY@POd_@6l[W=Alej%,IR'qh8p>D5bWh"!JT
%Wm;U;j_t''8YJ$h5/M.pHrJ7,Y9#7BB45MVG'a2!OIbKSR&N<kgFb@>``@#(01EMFku4QWLn4.N5&Ibj/Dg^$KhUjH>Q`C8TZH6S
%_5tq'81c@q'l@&Jf3ta7oRYNsR2<\#&ILX4mBsJ&8CjTq"f7VKN\Y:Br]tO<IX8ZG(K3*+aP'S`'n5q@*?kN+L(#s7IIeKFP\W5g
%[bgLYY*StC@BBS'AD#oHo=Z"DQjjM&T<&SMZWhiq3c24_8+XI1No<0L-K]-0X7\b)jSbpN>H%66``j,9?uC1<]WH4f'5Z<UP[R^N
%S5$T.#6sm_l2b%iD50Apa_C@Fmq2$QJuqe5LkNc0#04QMA[8L?>+ORHW#q2)c-@\#*"Vi(kMXBjOCdE8E'e5O2?]FM:]!!/0;$b$
%>AVoL5<`2NBVo7Fqr)38R<h7TGFgMtW?pf7]$^5u*%^,?'kffjC-f04P5U/o11]^&s8%L<(phW/gG(QLa@jO#YM-<1;,EM7?0WOc
%=mnYT)H`!U05:O3<1d_OG$=:ZnppX:-(FgFq)XPGO\ajBp<\E=l$h-5Fu@?-khKl7jR,%ooiYniAtodZhCq!umQa?+jL._@+g\L#
%n'.VJZPP1C5?\#"VKSlmC4<\f6,%6O@*M:-^#&%;lItC"G6O+HYYYLCn"WYH#+Ob]iAdkZOpf3O3#;=#$pd@gq(t<]>$Z[A)--pu
%?fsu"DT*`-[eWd95q]JK<k]n0TA:RW5&VR5qVKs+><D%4Ku2i_Q`\^S4Q@(8+^(GpA0$hqD3,7fkBhVmB;DEN:U6,mn)Lm/C".+f
%UI0(1g;T+R*6ch/W;A;>WUEQr*r+\A1'l:#\fQ#'bZ=-jM]WBDRYbbOepr%\A=1sKbK]5'51La4%At2Re:gH*9Ic_A\tT>GTJ0&$
%CCkd:.J:A%8<QZ>BA$=r+U-eZV8^H8O47T.c;q.>WB*]Vc1`R%B,cCpMt!rU]CN_K2S'sen!_@!&^QNL+1*(,J6d=Zr$r`s>8rB&
%pQ"cN343\&+\&n9k-NUqb^.k,Pg/3\"QoO0?a(%K\J]1lA!B4sp)2*f43epaFiTroIru$?Tid*L$@NQDr6"sjCB+,#bNR9b]T"jR
%Y%b6r.qEH<[=08Ds06?'6`[jS3">!p>>4-!;j\EuYQmA$P[s(P5)N=ANpk<"RQrN:PA*!(CmL#Tl(co4N<je]=1"$\)hu"QKRY[I
%GnKTfUYYo#-Pc^.cf;IH32?PAGL2W7UV*sCeIRXZ4E&s;p+FSkSBpap1LD<+P0`?Z5-ca8Qo2lR_up?'mJ;:6Qq^r>J0@6KT+?6h
%R4bqL:LP.6).!$#!X6Yl/C1Ain%=Ph-NEJ]hmjg+UXf+HM>Z:I219"RK5[t2oV'T#[HX_Ml0j"[J[FPa0=DqK,k^p)>4A2Zl)UQC
%eF:utqR[j-,=_O.?7f&fRk?r88:`SA,[(oKLXA&epQ9G`eiI0=C_s&(p%=e3#hok")8U]"O=(i+eb3W+\#Tn_5*;?%EC@c=Z6"8S
%nMBbS>TZ10;I%1s484BRZfaPP^3J3[=bnjUlX)bi^/Jl.9DhXcE3Ct9cq)P]PVCh@6*+gM.):;J_<ReLLjF3+YK<0X;UGQ3Y\]5V
%\f]4OI:uW@>0U*QdV1S[pA/QgL82H<)a5,TA:V;)i]_*=@):R#3iH4p]#'6abRnF0m%oR$EX(!LMZC'RafF@jWHZ"5hJ5fjA>"%+
%+0_LK?e&iijW33E?5`figut1%9#"5:)V$kj.%aKc@I&,tAfFX`&"P16S2/U<%o^=+nM@i6E.^`TWmaE*)9:Z^<tM`^)mn"ial"CZ
%b-.pBc*9ul]Zr7W`fK0+%O2r$,FP.C(\W*o03gC2pcW^cP/\o\m#j^E;hJl3V:,\kITK<fc<GW6A\aBL/$sd$Uh7&#nGX,dLFg*p
%*)=8A-k8ooE(%Jt=\%Y&1`b51HZ)*\YMR%/qRe3#I^W4*i7Ih%Togdd27m%p=t84WVMb+RgYGcOEJgrlifMFLS]5t3`kn=UPp*j%
%@<[\G40=+^4#DDRSaJ_m8@FWLECC+E`1*3Al.@qaY_P)jjj#]@7#i*hBKV6mTtYYUJ*8RpICthS$OuI!?gEXFBDVUhXj0(;LR96u
%HanRtk4`C0cR[2S(jbf5Li8,\UT7Y:;E23J)m=9^2O7!H17F^i+UA@g%I]f<gobO$DCn>:X0m@ii?StqG'4giNT[0g5ODf^>"hnT
%@!>@+hb,E))q"95mA'0r`o5b5;7+e*Wp,amUs0;+n8'N&9thmFf0XQ+a?snm]"-D[7_8ob3dFFVEp2u]>l250oA8_?F>Iaq'%O,O
%@PSd*I"([i_pUDfTpe[$Dl>V,^#[@b4F@fEM`"[nh,l#UX/p1hZi+u$4EhZmW@qS@f-JP5rPH0BRoB!cH?"7X(X"1X(W5.qbdVR6
%h5mIAUDr#s@l:eThbPomQHJ8GfO!ei1-(Q[qb&eQO4LKmb4/(W;,M67=,T0m,`BOuCNOW1nWH(l'Y9cYG^a=g^D:.>R8V$H%qmV;
%Z!:\F8IKNLPksGuqTI<%0iaH6QP,SQ@q7AR0.j9FO4Tt(UPZt]FMdCJCgZPT<[,MW;1lW`X/YYuKt^^rXW)#Q3qp!YIFp3llgm2r
%J^3Od5B`DuG_HJU7jImGM7c<7>hhhZc/N2BFmCH]Xu>^VWiEYe/PE?D0dEdN2?`?.`T2LBK!_&ZBW@CsW3fDrX;dt!KqkcH^mZ.E
%X4[]Z_tDu91m-I]]hGQm1-j<OR9O6G>>;IG<];[([i8dbp)]j<h4,img/_6dTj)E"9BEMe9sl"F/Lpi[5VG`b+lRnD.(O53/u8HH
%2][.&!ae(J;_ST)9rKb0$0-fkmIVb&C\'<(5k?AS;GZq!ijG-s,PWaq]"OY<'9bN(>O4YB>FUc'bOG].VH%*r]T]kL?UJkQpT5Xp
%gI2[>[a$"^)9+Md+&>(0Etas[-`l)O0?%$Wq6HG?Y91ES$tF90Xq]/W2trJrgTc.&fSa>(MFXqa.)?INWV>#Nj@?&9eCE#CheFGu
%G[7*;Tk6M`Ws:_5][O#fa`9"6_BpST23q=QB-WbMQf-!H25s)SocbHkg.t4#S]Z5&j61LgHV'F%*JO.Db1^UCV*>BsVRu-=VWUZB
%3u8r,?5$Jtl7\utFWhg[QT*!8G!f:+TP^OPMFR0MR94pQf72PD"23r4HJ\O#*C$@]@82(X<b$bVeN_O-o[6'Q3DiZ!DGl28k"=(g
%FOicjFt7$eKXQ]e*/D/2a*e!/gh,In%9)sCR*<4A#$V7EYA1W"`^/tP+b#YNPkVSIE)7sZ';`]+Y,(OY_f!,iCgGa*=*fX+2t=TZ
%m++EFaD4=,b`h+*D;HQ,3o,J.7LGD>/mE8;4.*3Br`\XT[V#rY^)@;"&%"nRdqt?`eS\C'V)*(['piPhHZm(Hk/K`?biuHF(h?.;
%>PgAVr2n:hA5/9/\+>A*]=l6_,F3]1:Tdd.QI>C+ji'A/Q9T+I7kaEN,G!7XYK1K;=$rrKX$taA[FVUM?;NP_8B:Jt<3c/.^u'YU
%V/FXkHJs&;OK=^OMm9U7Hc;EAeCZ!=iF5nPX/lG6#M1sA06OA[4MtYcY:c=j%U\gZCC=9J8=!bD&$@MC/=h5pp/eIBA-$S:A895?
%JT(>qJ.+<ecK"]q$JAI(>H,#XEJl[7kp;bW=*(Fs>De*k`c>kBAtiHl/OALrO<pM]37nV72cK9&IZ(UZ?>7jcq4m/$]Y5Hp6@[hF
%'33S+W[m&l7:BKHmN%i)Kno8e[,@QLM9BrN$"5c4(ko`5a[d5V6=sY97p&tflr[uVj>H?IdB&]>+60Rl-LdAs;99i9Vss'hrnMfe
%!n-*#;6eA2>*T331\("4SUrD^YX1^+84d"RMF4OVqa'j3n3Zk*U/pfnX^=IM$PXtHA\pc!D9.?=ZnP<T>%]6!1f,7A,5="l2>E-H
%<e<ZQpK%45)\!jVF#PNH-j&:87<\%KUm[ouZltpbO]/:mEnI2=CGq`kZ$UHe_uB>a)$<#f?8KqGoLI87p;=-ZfMq8Sftr'g+7W4Z
%X*<qtOOq!(FSib&pL1PX6K;ER^$&\fO)1W*4$5Wa%ENp1e]T!eK-Q`5AnZO.dCS<Gi[qHIf,?E:][s:g;jP)9C<!B,RTdtAiI8e,
%]/U,o\+o@+>C#,Y'@8IO>[=sY%pmHgN=gMMb!`<TB!#Wt%TQQ!1q"\of5#Fh$M!)J_,c=7!,ZF5I/CV-&1_D<dB=!Klk@r`S(8O_
%P\5k#/>(j-ZjWtHWldc79U>8dM/@olX;O)M59CGfo:S7NJ&Lmo#L.?i&8L8`]CWXqUflb)`?DMY:Zj[cO1kH`1_Rt-=&To:H[K`>
%bW02BLSQW&7QL(VJ-N]<$8l?q??IZ7Jkd#KK=J3XAA[H_U$@p^\N*@(UtXTfC'j;XXePYW?DFq%6Y\*T<XpJfG$`)3f>JcUfNC"S
%*m=43NR[7PqNCa1H9/(P\%0e([VW!WoF75Cr+kXE&^R1^_kaGiX)3Z]$IY?SXptb+N>0^b@d;eK=`V9`o(:c@@e/B(-?a?R$8OFg
%g\H56[sMS-QqVb'`5u&/(UR/"i5_k:a*IoH**fn%VlAtW]m5\jT6>;Aea+k"WDfu,.Z@$[bjEI)dSNr#]Z-p&f`Ms=7htQpfL\."
%Equ*$^*r<0Eb#*:LqYA@BpS-6<BVk?TQC3=Cgn#pY't:R$3i>6g@nK-PSMA\Yap.O/FUqES4_O37"@@%9N5&r'C439XUWigm\Y$(
%.Q'!XK5"OoL,I6/&(s,4!qKB+(9@q"FR6=gl6sb.SRZ)t%X37@AG>A^GhD;4>;pL8<Nheq#u[VJCAR17>>OZnX(A$5Vo4\,)a50f
%m\t^3DErtc,;$lAr,eAYT<I[G<BH`cQV/bg'iCNU/O?:mfYci<D:nbadgu1'ZftGqs!5nU%?1mLc*b+T>>6[jm`/,0;,WnL`\B7P
%oWRFfVoQ?+FE4q1^Tbb+CE]M)qLrbLn=\.:2<dEeKQpFJ^.D;lr#;]k]8r##I,,$!2[0fP[A-_Gph.eDjP9g:bX9#iDY`ZQ/;$6%
%UXZ5t?r&e;#/@G1,+oXaoCbEGeP(KSG#%%?n8rg9_Kb0\aK*_0_=\460e7_I_bXaPh9l\qS#q\f4nn9p&(h1m97>3@JQKiE?qoCT
%FSj_>qC,QVa_Mq+nr.rTp"1#edE),mcs]lejn_ZHgs<^Qo&n"MH,E*7PeN&JUc<]%CTSX7FauWWSo0gKN>o^VRci/Pq)"/]=E59&
%5G#t?;2HkM$XkjckqmRJ"K(]F%-[>([N8!fjVr2^qtbd'm3=br"!#WMFA1`iiF<%\'`)EGg$^;@B;Ik8j7oH_m9+^G-J_?LCEaXJ
%JbEl[RU!Ub7!XtKRd1^[i<bs[b=]75gg\Ikjd$<:^DLmZCr<^D&k@u"nWU\/6^mnRRp')pb)S't*do`8Pe#IK/\5rt>)ed@$I@+Z
%X0hIqFT&'d^0Ue$2!j4kCY-]M52<E8Z`KiHU<`LjU^qAf8[EhcLba]?HPi?.1bj9;5FSk7Y?o]ho47%=R7f\tReOpE4p_GQe6;1:
%+-WJ)gJfn3?QP<'Qo4J\^.).)I7EV,+()tWLJaG"HJiZ12j^80JDQ>ucdqPDWXi:$o_RYVoSl6'U&3<i3Z0l3.n"3a4&8(1.dM_*
%'t7NhUo0j`dFXq`Bn$0^eW4Eup2a'_]3&QWUmjYFbKmj+dRu0?H/LcXE0q7)B38@j'`'d#Y;\dZ12(D]b4`isFYqOtKt!=Wq64d.
%<`M4uXUNI.=Z/mK_X#r-2h>L1^KF5X9ViNJ-Oh5*f4MFP\Fs*cDOd6JZ.#5$c'ttkV]/jZX'7?)P"2d`I.[+!!1E4$W`r!LkXKmT
%:j/)(h8F<m@`K*#'u&S(S(6M81/g<Y`l"-PmnN78bkfFn&ir`?mI)%[H["]q'9H?e#0CgG:a--cZ#]D\p-,Qq["AZ/,ZRq47o=7;
%SlRaR0_TBCQfmKQ@?>E)$L9Wf[ocDKVWAWVEp:WtKcI)Nl<W]6V,p'kjkD-<mA10[PpQ!iNMBM<2O;ZBpg$7!-Y#=6O;YIYfJo["
%1B2SXA<cH*VA$4],!/7M?l_ogfCH4YAu+P=CU$i&VWqg?HMArG+OuF+L1Z!b_#RbU3RD$S>@JQ!e++;:[HQar)ifd7ok%mrSS+>[
%g1"tb*kn4+hqP^M07'WKPQ+l`=UO$ECMK8IU7S/ac3^F;>Hg?[K7T7d=I*QU#'$Emce&dcs)EA\3noQ5>RMju>IP*&9?C(!?ZVc_
%OKpI#7K91WCp1j#8T$[kAB0qBc9CI_]6`7Y8XB&JHEsbQS_"CE3h,A9]fC^'e:Bmf6N@T!2i\R;GKGJic#kMRM5RmL3[L#WdMoHt
%);_E\94T9gY:EiAfQLMfDp-7];4i?E'\0P5Uil+O?ssKk%l,qKkSfg[RqquhFZLH+4d(hD(=N2I21au%kO9^%,Vqu;,4feEF$*N-
%=^%[0W1$d0q!hF-Ic(Km[6l4QP\J).b2)T(3gi.RV<?TAZHc^DcVZ-?'=K87PE*^k[bQQAJMB#@Ru!2VpS+..i:?cKJQrSp?t?tr
%\Pgl1aYm@]KpUf^WMOLk*nD$6Ye<BZ[2\H814o\\_dAThN/Pm@r4C8d(ACIp=<GIbQ'2r\CA#u=`R/TQKca%ibAMff-OA(+@a`?b
%hX/VWhJ6ZKeG>3L]u0J*)$82GPY^eI'4ki'HB\i0<&PbLG?\3cV,ru7'I"QOkD?&JXlGg\`70\]ll8gS5Bk]/Brfkuduh$U>L.d\
%d[XNe]2VNY*UN(:T#Mq#H8c4=e76$U]1`r3;42]i2eKE5LB&(FCVO'%e)#$424)agTghdQZE[[7>^X0"aIQk=;=0Np/D_L<X=NP5
%UNq9t<,f.J$&5V$;<`&nrBBCrL8MH2MlB$Y0CVQIr5.QDb';(Q`#G`bN]l,8Bb$PAkP0pVGLbXW0^pp>"FO-LfO2j_Ua,V7?AUY5
%3OUh[>YJKcMc].sIbTg:qf/>;&V]#6\mq&GP"(bd@&b8tH-&O>RF5e&\\GM9L@`n'4aDq8N<W!KWSTt]cX4?ra/e[M[>42W[nO[+
%ba)Z/Xi4%:*m(!VC^A>*H,&5EASu]N#Gq[.%1ug%q2OEi69kG@+?!W'8_2SmNH7@%R;p8b!&L4T`-eM,9D47DV.=kF4fe2bH<]XS
%H>q^=Rd.fE1[1%iMRr>^RY)9Me\St^QCAL!'#I*h]XZVBL!,,AR'tc:JKFq*oJ4Ed[(C]CP<@L4IncB$%l8C,;2sK_9Xa>/S#dlZ
%lcM]UAARTXiO:kq^@q9KO1kEU3kB"eh'[LUc53qAE4mDfG3`h7U6-7pmI&hEq7BTL+1k31b6ujOQ-<FMq"eQ=giUYIh3,YC!:L.P
%b"PcP2db%=Cp^lqeEsa#ejMrP(%ehC0k&Rp/(O<e\gaK"e4hreZ:p^S,tI*H/e*/m&^pft)6fRriX/-o/UO8TTD$jbaaOYZ2c#8I
%Z5?-0S$=3DUZRp'[E)s1M(JgjHmXbWY+IB#c6.4?A.LhoM9F(Vn?Y]O2NlCHV3>K3ca&jKc$(3jCE5SfgTSdXVd^+[*+.J`9Wd-k
%rT(Fs_`$agH]d.ZXpU/srOT;,/6nTUAD1nhm9W#cT5_WRVU:LV[lT=J(:VA**_=U,S^Y7m+qX.'"oI48Nb,LiWoE8@%n>*HEh4kb
%P::jmQC\nYLj"2m[[,_CQUB%Zd*->m\Tf^HE/.!1+0$7^&%==384tVk4?&Jcf)7':RbfoLZ^!bXJQ4_FgCL_7@L"j8RQUehV-l#X
%m*@e--[S`tQe(jTl,U2iNPX=N&'CeR"'`>55u3@#8pV)pco"muXTu4uh,s!N]+-G<-cu8NorRKCgKk4Fp5OtT]*V`bp*l,`O4&ru
%oBErCV)Jtql>eMEgg?V;SZf3jk#018=pa!t0#\isgmD5phL>YoDUW/A^K71mLHn(i:T0=B1G'2-Hp(lU=tqgMQ]=6u>)GbCOo+a[
%g<AW3jSe\`#^1c(4hAq27[B'NM+kkQ-E4=E8kl,uFq<?9X&IB[TO0+iIe?jc#Hi!`PWo^dY;AnlSGmoh+be_S>\%)1<;j:a0Q0un
%MQb.K>bHpX^?eXs#Xi6;bRe@D]W_e+ep0RXDqfcNUA[Jfm.a=0*2`$p+pd$GN:mGUfsE.HWiA-XUom3JS040bi$7OA#>g!fbr82[
%E^&J'%oI:T*!dm-)bhi3r3MKopRDntc!%g8$Pjbm=WRj:C"@ZNg#'CRODijLde\*ilAV7rEI'Y*(\=S4moA+b1H*$1H5lG\:f'6^
%66_')fu/'L+8(P7[e#7qP((/1e^q/)nONWPp9p2j5M=L1Bk+l`(!i/+Ae1`ZZ/=HL%/C^VHY:`cPA!aqVN:.of1rLG'c`OSs8KXf
%^\j>gqc=PGr;NPk))/)3LT-KpmJi=#pr-q01aA)HjuW!oW3l<FFn3TN.J_;K[Mt9r]<js6(!%Lf0CE26aWHG!pbDG@bj<6f#_%_*
%>%@k%T$Y^WS)OX"/E4^;Ft0oA+%nEZnBI>dI4:ApQFGcsm#8Q7_:T\%YQD@IcH%7jQH3EKa7/[7OmV`*n.CR.P@Zc$-%?%#r0BmW
%SQGT2%NbePVsW(^pqn6SdH.l?.<P&(Xc6)uVT93.!tgR][sf]oA@k/dqTqo^PAH[Rl#:9(MQ[8jZ2AB]5+RS7Lnq_NmSehMNE]A[
%P6ZO#!F$#f;o6MEoY>3XemB#Q)<j[ccJ<AkSh>]&hg]!HcZPt#(5^').dn&AF8.udB^!>)1@)fBg'pbuHooq'XYW$@D8#e%M=>SL
%^/(c?GjmuHCK6sOAcoX.jH4hR3O9*pih2.#k&rTGmPlW]`ij=+@V;O.Km7?\2N/qc$9l3gX<tDl>H*>-e]Me-:3h`K2G.c4fB[2,
%0r"$TT"oT'-TdciZqpiLg2fKlREh<Nb!?WP@eVc];b)TE(^JUAe7&2UOllMZhg]":m2lmrT\!':;S'WZI$^Et^k>Z+GM>D[q,AOU
%V;it&Y90!1_eS443$0Qp;'aWH4!FLV>+[A+ZXqRW0<=VnIX2CiY`!0UM:SMJ?(N^Z4AkcuQmabgqrHRg/Ktgi]f2MqbI]L&'*,5g
%!ggRfUh'DeBR?sn=c`QBKDB`km'72lc`S''rgD3kMr1/>%$SN^8bi6Gq`Q@l%-t.ZQ2;I!o't82Iq:uS_8/lnQXjO2GNg/4Ofc0j
%Kmm)U"8,Y<"[?el<<*66J&+@UE51A(>tZ79kJYo&IpOG-G[]n@m,.f]NR4hXBr?FG?V]]drfr+,d(`0U49+$R_hC<oQ[80,$\;mh
%qK$f&+)5=^rBaRCrR,M#c7ek:'u.Dc\aNVNAfprNnC[8Hd3Hc:Vo*l\NH>,P5>oG3Wr6-0Q`>O^HiM%!F0YE)O#D\lIsb`Pktg*[
%55J1cSN20\q\o.rc+!0>R?R?Gs+"qCr^12pd=8g8]'R`q-lN&!+]e:!1.PdQH0FPKJ'ib6nR&]T;Z<0+/^P./G?<t-s5C>6kC:Xt
%C];2i=jCBcC<u_!V<pX"V.K;s[=uu!^TheWl>N3rGQ"_ab?'13:#)6.B8li6Ccd)&ZOia7Qs$FoS^4AaG!\!9mekO-kfAS(8A\5V
%]OjW^g";qENYe$o+ree=RI*FQF!fVOI[s&0c>k`*LP,(ijuu_93P=*.R5l]:KkJ]rVp1Y$hF2nU3^b$2(TYm+4QcR&1PH$YFZGTs
%B<(.U!KGe+rCf;RJ_=P1[s5("cK%$-ZO>`_b3X/VE&elY.=8CQFKNg1$e"=AehF\ARno1;D"R)UAi=qIIknX&$`.JH05Fduft5`&
%D#Rur0RGsp]Jt8A[qB<4XO3FnT6$"F(\-F;]OnTtQDi#N(Lk^31FG9G\](tpoA&WKDIkF73I$sUrTB/#rU02uDYp*oT1^G``OS,\
%(770e]p.^*f",(,Qbe[;\\%Nmm$t=8HTP:m3iL9QT"=m2G&K<!muR+WNG*e"lM,=I[D,7#oOFXVYOl;)o:*c.g[jr33B+]W3N^LI
%*Gd=RkL<m]rd(Gc2?-LV^!;sNWlk7_j&:-8>qS#Nr$<T#YZNEH/d)t/m=hc*'3Wu/$F^DjC(-%\$bOR#_8=T"XgsO#=PI#h3Sc8<
%(nk\hiRsH6(RiIhi'KZ4I(?c6]aQFrbk8$UnATfp0le2C>DsZ2_MahG>\Pp>\%T+m=^>bq54g?qMe2!rFg5qRH!K^dU-#Rt/oGV'
%Q\&fIC.Zg<NMW`nXgaNe8$8/<a;VURDrqh$md?%n;JEmo\5\NEPbh^a?tO[=DAJSj'<Betp$cpIH0:k?>i'm'G*fPO>&!eI5B473
%eFF\4=1@ejRcW/4-EkW@?WU<\$b*Gmb'ii'AS3Z$>M55&ba$Y2QEbJd1*9O(FlRA9<kZ7Rl*VRN=-o8GmoMr[osbpnRjkEcT0hYi
%j0`EGp%%=HZYI^+k>u#N[,>\;k"I))=^-3BNN\3'bjjD!TQRl4lDCUt-cPN?g@]kp=t;d.WO53hFr?Z]k%fO`r:Xkjh$Cq#Z/aHZ
%^d5Zh$=(Yr;W-g-ngI<BSlGjjkF5:e21Bld<#,i6@'n@:f)uU:Q7de+LRW?Nj5>;<=Pn&Jf4XfRc1Sm*=^bSdc-#@/rnbQha[T'0
%^H(2$==;!`?@U3`'LGGcZ-AAP5$JE^a@84thoj<"/tS8nTu*cSLRR;C_L,r%$jD6%]Y#k5jd%D``X!Rkk:K[J$::I52#"9lir!RL
%-Al#cX5\:Q<>Q/Y&(fgk8oRi_R5n8p4e,fBQBSkVUkG),UkJYf/nNT.^3$R)7AZ?gB.Z5eGlicNiUpMd28$>r/qiu&=(fBO.s&D.
%Gs0agGGVjQ]NSP(anhhp,OZrloCD_Rag,.[4GW"L[1u\E=c)SqRdd\^UuUc$-%D5-<!r;p](2k.0;pCF@7A_59B`^lqf$MN?>PNW
%[FAomW8/)&2Ff-]g?.6u><>Bo_qN@YjB/H(6soT>PGkF<k!<%/03kmWdo9mWIkp3.bh"c)2HHj0V]-T>)*_9<G'5gIbmMj(nln]T
%\sPRX[j'eLDE<qS/p8K8jS`M_FLf.'ko$2<c-Xn?]GXGV<&_.K@V4*9mZoe=b;W4$JXu,Ff(M^MH0a+]'Xo,:jpniRqm*TB[X6BS
%hF\RO[uV&#1>@jK7kb(SgXZ#7:*>Xsm;*kgmWVF[LY3[m]p@I<Zjf10I^6R,NN(?81q,=1O-U]lG0Ku*?].LqD)IV/>sH@^T.eBm
%QURY^?eh`r`:_T.,C[uLFlEr%h:[%b;d9K;1jHYW-">lmFs>Q(m3g&1h2C@L<PObt:QE'/rKCVCH%/tR-/23c\^^JmFu:#d<gH\I
%GQ(^E]$e)`04)A7duj<\Sj#&JkNTiTYIj,X=Phbs"5:Y1B)*9MZ[4oD4PG3h?1.'5oRk(g1>Aeq>uaeWH]=<eF(R"RYapV&0>D&C
%Di9IrMn[s!?g`imqqL9"l@(?m\_jSqR+hj=-b%oaXdb*(K/;!'al6Ij*A2&slbfhp&KEqEF,R;g_ofscbL*WR^GsrM`Y1l<o;['-
%&s)gK=4QKVED/s[*ad'ra2a1a]AuQQ-lk<>5(pk<gR8&pa_RobQk_-kCc8V@f?ZYS*dXa`qf;^99=JM.:\:K/ns\%uWj7#\[%7_t
%m78nqfnHlKF4N<7hp8Eo$g5(Vos7!QiFKKipWqWsk-b-4Aj3i3FHV.APmcb*`J`F@q!Go;q+WJfHJZb6C)?HYQ>ghCffltq0;Mo,
%QfGV1H-Kpe\U8jOUWq+iG08R=.qS2Kjm$B!.<>)d4"=R?50^(Yant\Hp&2"kh=utEq.?CB\9!j@gM#D";Tjj)6Fj^KHQYI9gm/ug
%gNUhF7K6Y&^3XjE=(lO0qsT0q9R%X>hC.0OTB6XP>PYl,&2od+LD0\^q4XgkS3I5(cVomm,scr1?<($uQG]-i;kb_jSfVcr7:RrK
%\2/<&(RN-91n-;tRI"W2EgFrc/kQr56>*-6<n*.Vi2ou&FbSRZlQB]%PdT\@dV1Gc.5`_qQd,#K82deY2fZ0qLn'a,^"6`hjRT<X
%Y*Gd1ZQr/2kEF]<j)_?WnlMX9Au(SqDd69,[8*V<^0?Us:X:t;X3KZl&56GqCbbOE]3B-b[%B-Y21;0)Wa-l[C9@B]2X6d2;ltN)
%(X0nC<F`WQh97_p%q9k"\[\Fg2H,ON?*h$^g1mah_-Uo,:V(@B$JV%e0m#2*cK61?g9"BT5'bDRp9ZEd?=o.aNaE-^SS7NlU@Ymh
%mWOr[bIZF<nOBj5cPSB)R?#h`3>975c-fG%3nZ6:[Irh+44\rg(hti&A#`\;d-RP:QmrB&EV$`p"Mt]Lo'_)*s4Mb&mDa:E@J##P
%j`dr!P9c<!FLEL=8Tm1nFq3>O4/_oR\N.ubWX9jT7Ze=1B('H[?E6RKOpD5a&h6^gUC<%3]gnu[F),l0n$8rm8(YnY1UeG7Iqec?
%juDrRCjNk[_$$7\q3\AcE#.o/HFKb(l9CNNC%&#Z3jiPUQA4)@<2j+C`4H]0D!iZ:]K^F/A%-[Om/.(ohk/r`V6RF\HE"!IBhEO5
%E/=?L9"!VPrEXbWK@/6<opKa]dqmlQ2Q3[;7hd:<:9XXqAa/OcY;Y9g%U[M@]r\E]Xuc%#p<r#NV=Ar/mk)0m+"?lX`o0[&C2W</
%*LX7*6oV2#hrG>_I"$!P3pI3uV6XC89;>RRD4HrPY_CNXfsOZq^:SkC%=cUZiT,aTam!;>8lad*o"*s^(UH-jIt2G+eJGJ7;hmD(
%mJQSQ3r^M?CqdeHlHmGb]bPu"a8'n+nQcCEhYnLc?7ZQ\Gcas&D)?ELT82Tr!*O[LQ1_@6[la,/n9-Ql?c/QA"pjFIO%59'*c69-
%5#VcWhkXRSG0RVU.gcm)Nf?bVs-D1#q:j$Wa)45I[7bT,U9)?,MHf#phH,o<];.OeF8,4<:A,+/&,&0$`:a!#H!]_S]'S04VI%6q
%80'2iAS*]k=0oB^T(q9_pSo;V.ug+qc+%)RS+iMobBX&r]="cNkphV)ccsC7#?RAj=qZR6hi=nI($p(1hk5^cgp>?'NK6C#;La]X
%m<INqk]LBS0XS"ZNj\XI]ttr)>k!*:j#QXYnoh<_8UGqHg?\O%Z$ZGU)VaRlH"T:F=0)1-H]WPBWArNb/1mCBp[QZ*pg,n0@ijD`
%a5VDn+.PMoj*F-3^\Vj'U7/D*2dK\B6`&`il`n.s1k&VV>E@LI\6bH?a[q,2,mkZaY1_QZs0Pg"lLdJH*'<&9mr_Kq)n[&o%R[q@
%2!s\*GAK`BpTQao3]o4aqU@7gFlE,0&a8n$;JB<G'mgsXoX]/99Lfls?*=L7Qgf*dhiBB&H8U&Oqs279;Qk4SD</VAonqSpNgF+n
%B7IUsDoMF]4Yb"jHX4><AkGCnhoj19feAk^j/9N#FL1uFBQtr6f=f"uT8C7!heid!m.X-.LlN::^"&Ikpg0GkJ%%-o3>LH;b=YQ>
%YBso?4WdoELn3rmAUe="*oH;;oYT;Gk/g22Y:&5qQUAIWDFDO[%ZTdD6EeG<Eq93+Nph,hf?<25a(DTiSh6:k675P&Xab])PgJaT
%Y-N$@\.[Ps]jC+Uc(:.9T\&^8l4r!@:SBtuX>A8i,o[=7T&HI,`<c.:%8IEc"m=T=c:>n;Yh-,ck;iG4MT-][j_P/_SpCdn`V8PH
%.FIJ%b\1[m-"-_i][usHFZDu,a55ZsVb>ZXKmN-\A/.:^=t[G9XaPkK7:V7tH_"#8bCNuZgT_QCrLA1FIH.`c@'>!s#VIa%Y[\tA
%h7'qaB6P;uPetr&pbb5gH6(nEKJ;3QHum$>q;'<7R2Hc#N2>?]e)t`NL!\;d:%`KZl00eBA=mj;>t+gI\3?#D3NU-6BWYW(rH2V(
%Ssm*6k)TB<h@;bu]'VLsO([5Uf#I:UET0o$)qd8JIX6?\3p8d;,L,SGdfti8&jL;p50[c_:G9K]R#$+3O_4<9laaT39).1J)H`H`
%IHOCU%)+cr`cjrA-@UfLC<q/"l/`8+W@,Ea=!)SHc^:X-rKl&4o$cXqplte8MR<!S;l_SAo3WRY02%-tn+X3bc+'Z(dN7ire#,d0
%_h9rrN5VVERQc.]q"3k9Ek@`k["6Z@o'o91dtP??bF?GJ/)![XRY%oWP1DQST(':qUb#3!\?d4uRKu%sh:[1J&Pm2-aiO!Wg,WL[
%R>ZEC%dusGN%6Bu4e4U%r?a`4j\8VoCZUZs8N)4YCVKcp.rUD',=Qn,55J)=Y*I-[c69.,^NT+=$Gm^XZ2.K1s4IX_kOan8/egcM
%Cda$p>OsHZII#8bV`)\L3N2m3_jKk'Gh?(=\M=<1Rrk[1C\H4"BUT0u7%lmgJj+ZXH6)][n"q^mJ^3p>TKZ<bOD_V\d7N`gAjW\5
%Dt!,;_tS[4i-1,"paECK?qJ,_`*S_KO7hnM?JT[T/G(E0]%H>VgoJ0F-hV5XcYlIi?4RJ:qRsW;hVN(jZ2b7UH2=r;n[mQAi^9Bj
%iPWT?!Q.i>>d(</:9'",>o#a^WYVK=]cNajcaB\@Xp8Nhi,hPu8F.'kMqe#5-VK`7?FdL6*B+3:O\Bdf@]q2Ulibo4`c:mR?g\[0
%+foj/rL!R6J+*%$nYtVsB(,'M_SN\]Yt92j\.uVOOH+URp$ph9AAIb3nG1F@cnkm\T^hhIF9W;_4mQ!Zs3'\5n+`:Mch,E-oo:^4
%OEh6'3rLfrq'&t2Y^pM$WUCW4@bOu_?3^g\Z%-+9:FVN_0YPgdrY\pe(-RaumIoHK#:;D&_I!UOeqa=O=)W$BrSBbC+iQg9aM)rg
%f<Lf6H,A_p1[^o[2rN!_<;/RH>Qf&++Cs0[jI5^kKZ4SsPng(/TDlZt\_h-qpWdg7R.0*j&*rS'&9dQsQo6q!/GnS#OE$HqYFU'd
%YPO'9a#a2E`i_N6$WMA6BIbKBQm)FWEXfL)kSgMP1A6#M*(cYDb/CoKCIeeZ[UmB7Hk(#CQM;(eOiS,O9c]Z%eS*K:Q9@H0p18f8
%pXeEpCHCaCfOVrb85)NjStHW0!.8MP8'X_rp^0om@@mn;Z2fjIF<S0.XPFUo3*q&tE<trW$@?.c%hKmV5i:gXLZ*pFN%L"YIg#U1
%"*&GS*gVH!;^UMoa-2I3Z'.6X+&?fDnk>(gm-UmNj-nP2EHM7O^6LC>qIl1?h/$$p`"n0qq$#X"hK-_96>c6X)ME;O6cA,7GQ7qm
%:et2nYo!)-DfD]+5"n3MFX(k#,iY\Iq`Hq$mN?F8PP$=Fc"a1+he&(S[GV'*M2D<MNO[HXNKADri'ku.BBj7*Wai[+)#j-_SW1.[
%LhmSEP=#_YM6#no.K0EBl<D#u)rq'K9u8/QDXH2U2_8ZZ0Un-BfRZaM?G=HS'/qb\0WWuVlrG@Z=j"%/7[N4_0p1_J\Odo3nQYnI
%ISUXj&k,BaHNk6'A=W*1WLPHNa@RnpLcANE$+D'QQ!(&s?49a!0UneS?jHSA3+Z261FicAqR.])P;&kaQ%KSt=k<210@Lh#I:8*X
%,&O,k"G&FX8f.-p)PX[+AJl:C*]r$e16]`/[\&H2?NKR=BNbYC*Mt>I3K_lZi6-taZa[f5-<%BsOS0<+D6Vk@g?lq&QlZF`=rte2
%.?CpIPsj*`%rP$C'qb9]q(^>sh!pn!GjW\I:(*%hCK.k^N^;$N]%YAcTX`sRbK0TicTm6kRXXujFY\[E"c[c#EN(g@BJC.b"pU8s
%$VVU5$9\r9P6EO(WAEF&KZLFJRK/#*a3b#RqJus[hVU]t7FKcHoLF?llC5i'r$Jh8pWJG)#DZ[0\FCB`N@Eg-\FW#iI39_G0n2`)
%"Aam?!#&VaAJ.LRB[+Y/l>:5Oa@lq955JKNAE9;I:(!<YOFls1K6@9_jC!GTa(%7T4iHr]d,n&coRAIQ[GlXi)<,I9/S"`H>r[+:
%b\m64Wp[#f#cHUH'o&p58WU?$AAVEl@8GYjHp\/.'g1iacag4`&,SuoYfEb`!F&Nd0a0IR:T$[;(#P*'h09&mPZd0o>R:c3ai9Qq
%/N7BaK:P\20S1$]PZV_#25_<YB%3*l+K&fpmb-#(6A($;n>`lV-$_k]6l9b[7\[p<]OO,6+XW5O[DYcilX5MsJD-V<FWuF]$j`#P
%6GOiY'XMF:Kn#OBBu=Q(@Xi2GB!;&?G2g'SJA1Qurq,1EI*o9C-F$#uZYL#YhA.^<U,Y*4@Fj)^jG"<qLMN*56EN`,koAG`g<_LR
%@:%U;PY+4_Qu!d:,m?*:rC266&9PN"\2aqdptHF&!BV@c9Ae+L`*BtD)O*BOE*`M`%P*8#*l&[&Vio"umO<k['0k+Z?Y-[drj\m:
%XVGED`MTA"0K4^*_is&:,ICfF0(JAh-*k@g)kU=(2,2D.Us4X'Nac6D6F]a(W.TF,^D4*`jQ;/QXT`V\P=:L*pDb$j0K'W06u1jX
%Rs9P?ld^r;Z5S#1k%?pK\gOq`<H?q1-=ZSubm<!=&eLLNBq@rQhX?4EeF!3`<)TJP&he!MS(ZCoCXZJ244rqR\qQ.<crsl-D:b\'
%*=,JTd*>8>d]!3t?3/Q8Dh4Q1Xke`[WLHZe=uTEr/M8oFEhbHL5NH)Q<F\g$E7%!u2SYHAY*Ge%aEZB,plW,$Nh?tQXQg'!?KJWa
%d=kZeRHP5TCa?%$9=$K8n__d:A7g^W4)Nr$YLKi$mge]g-fl+&ULJMQf;?P.=rU_ZOO$lfj8iHk8GrQ6AA3dr]dc@N,W`_;6W)+?
%S`,M<*Mm*YVon>af$`nkZ2SHOr"3O#)Wm(\/#T!^="2A1+"qrK@XSaW.>8$(`CU$AW??7UhJ$-fj*k#4S5\XiNH4rc?i#i15$0hS
%RuSF[B9!k_)E!aVqG1[<e54365IM3F*.>Fa55og)RW]_sbY]4g;Yf?Uo[XmgGoR9-D%c[)peXF50Aj/^IfA+3md)N:=_)=qa9V9=
%3f#lY+\b#p3BtS2"H0ZZ4Qcs;c?W&,mNO73@;i8u_J3-2NdIK>>_9<b.,Cq9gD1Y8`&+QSgEQWY"kaU#_::$s#cF\&Op@ONNRR##
%W6TQ!Von!;(E?QJ%0@u43R/L&[M7rZMljD$rlK3TK2"WjXD_RU=hn@H<NL"[kbO,ji.@P3d0"VladVj1Wi'cC>@\Y9(;=5'l"%t5
%Yg;7)NO>Zd`P\ST'Y=&<ZW)D-4Q@ktb&cn`KD64fL@][`)B6ji9Y-%!^@YMkkba_d^.>GY=?]#33tLLIO6+:4'GA^3cWj@!T<!3Y
%*6sllbL\%,(HW,iMs]&Qjm.d3?#1mY00PW)bKVfjBfKIG/74_cL"BHe?[=7FdBk+7q81W2k^]4Cn!QD10?W$[mq6N38I@r@(i6S-
%ZXp6k3>.1[8U$m8$nGm_C!KkOFFql,.;l3VT'B1<CljNZ8Ck\aED'7W$-(lg55Y)e+50+_a<25jWTSNsG?RUpgIP`0`qZf5>n3]$
%V"'p@$jliSZWGARMY$CrkVjA<_aHN:%-@AUB\6V;d$9:Zemk_7036dm]GOR?6W`!G''&`A2Hg@SnX\6Wh_'RF\T?L3\\^Q(Ok%Dr
%h7k5_ef6CUB.u7tjS(=lMMYY&/GF<-Fr0=\fj<<:*rhBk2%%7h3j<FGJTB9tN?AIDP5S$!/L@p#',6^c`'CSd3mUI?/`Bro?M[oA
%YH>6[7LFRkaKHT(0Bjd@p!`PlOLa@W07)3d0p(XS2SK?XC]K!hP`,&?L,RZ1kV;>dHi#+";1[&;$OXr=iX#XL`3EA5BVAh@6s31j
%^;q9mpt:NljbYG!9TQsQ%G81RA)qsa4RY(:bm99m[PqnoZZ;jCVPpL1T(dNc'!<%'<mMUC1%Q<tq,YgPWA@%[X]1AcSqB",CTTpF
%dKUJu?H(K!kon`Xl.]a,5[&KlC0m^Db1=oHBqb$eq1HS*d#Voj0mk@LR-R10TX?c>Z&e#Dl#D&U?G_X:D;=lm(rWt.Wo?8+EJIfm
%<F74L+8iY`1^D'5kOJ2\`&:d2MF[hX@e4Xi4dCr<gc7^p+qZ?-=6WE#WY$OT!=ZE[C5kbNBq1?QW-]k$UfFpBgmq317K?A%H/\p,
%K9Qq!ECuV2'grt[601s4P@KS=W))6r/OH,Y"8)]uW6<A_*#DoTrfP:^F3/.>1n0*BribG1foMEIZCrbC/LVlt8,],9Jur5#54J57
%cP&(oY[YVJAJgWtW14V1Qcj]=*pfd@KW<V.\7rhf>&PlflcnH^U@fjIV^5G`<naq;KSYW!g/j7+L@pO-"u9=A10AHq$?8gm2MMQp
%?X2B29Y"TX*Y6lVHGeRs>/eC%CqZOCDs(+R!]MRU6!]V/r%oc>$lBDE]o7t$*g7(f`m3pu-p^.F[8gmVRNUE4-d5sS];*%[mYI4[
%3:fqe!@FRB"&((@0WSjc8Rp1&\acAR-V'?(9Ej/&W#3O?Cl@k^K\a!Bn`r1%fukkUoAoDg9j4Pp\jKj`(Ic8:-c)kb2/5#!EnW:o
%0C0(V+^N1c)]HPpY:eOfb_t[D)*H$qLs/N+N@Hb?O1OR45.5TE?IfsS%O:TC(lpq$?JD_8$'BLQ^4WO,b3bZ;("IRh?,;YK)+\BP
%Oa4Z#fRB>]L<.$1bW/T_MTgu_RpS*!77ZK_"d@?GiCb3K$]0DF!WrCahdsK,P-2N_bad<hVll@!,M7@gjEfK/n;P=04Qb'B9f/e;
%I4j4]Q)BAV3YeW0+U<j#r(YIkM?t[upP;6)3`gc1P1),10A1lAf>SX3ZB<LB'QRB8`Q39FpCd/cY$gh%Q2t!&hY+r,+gJGL>bM[8
%kV.0.W[#Be.$Ui%oi`N<N^`/@]gY%cQ=C'",Tie3GB`A-Z8hflb0EpYcZbo&ffYMffJRd4Be=#F*Zg6.]J'I@TQUPmMfX/YTuA]A
%%T@(Fm_m5H6*_:iB<dT$D$7seoN]BS(*Yq=l)N!W5s_fsY=/T9@Om-8a^X%/+[NEd;!1-MfLdD[2C[$rlS,XCL__%NJKWCodY0,p
%*m6;$nK?WrQG^,>PG#Qj[T7cP?Llea)O/k8kIf-8i3sYiQ[lH;KCZ>5SfJ$sFo@SN=IfTV7@c!`%*D50(o;!lN4qouSB7,r^)$:M
%Lg7%B&+PS.RmK%tjD`fCdKa""P\2PhmkA-La4<:,C!&sSjA/O]NG<kt6*YN71;rjspRV]Xipo8"%OaEBi/.aKlSpVS:DS.Ufj&XB
%lfa<SGc$:>TF.FBhej5Pp+FYU^"8ka%B".<[';F#YqTD\(p#T<AunA""(+8rGak7.13Zc6o9H@[D8*T=AJ_d^>isQ9&@(!t'3-_7
%/0t:6ZLg;jR%:oN^(E+e#/fjUY.h$[G&+'Yj*%5JZLjY$G'B#`m.]Ac\?<sZ,ntO31S5ZRLR#q6P'T8e&,'3Y4&W9@!cR+omp<3V
%YWJr3m1k#5j3YA^S\h)-YWK7Uf^%b^`+)]LT@qurC473O#Q#Nj:CD]"9FLQ@hV!bO[EG[NfY"c.:($^,8IK@i4@nm_@K$(tXK@2=
%h"S`6cB<M0N,0n%\"\BK-+<\qg_P]qFWsbJqJe=i4mGLi?Z,@7"Z("a0iG#uJfC<m@0W3e%;o3imEJbr@.Yo-SA-fJSF-V+iWugm
%nmomE0,[kiCO3[k%kI7=Jskq/HZ\@%Y88Q'$gq/.H+c0I.IO!9jHn2MW^KY,S:3Bh%+SA[U1\d(]J_;+`AL('1aq%a],=cf=s;!7
%3m$#_[A^6i2C;QBW98<W9GpdMi7uGb=hJHGN61gp%0U#P'A+*[`5kqHkCJ&$;11`-]o^%D3;]'n$PXH1(DkUL?$[5#fU$XI=_(oI
%,3^X:Ycfj(GNQ]T38Git6['C"(D%QS<*tFg'G8t6(Y'<pCcVsjMpngl(WGA8qr4@Hr*.sn!rIYh(l7JK>^MA:m#-eePAE-G"nop;
%0K41l)VCBq]ioMc?eh#RdnkUHI;s$N]35p`fG>@Sf0Y"&-a58,WNO!V[amLD0C*1hLOjm4VJtQ3L9u&20e^s1"SUqB=snlLED_/D
%$EqOd^::,UY4r'MSHSZ*2%UG+dV3*]KGa0`,r&l*rP6-,\[q+1E(76q"8h)PqEjU470N>'Xce1o;-74u4CL1K0;Is'LlmYd5:IEE
%m0<:'9rTY5_*;"/?Z8[f3au/_ODI``N4HS![@B,;<%Bh@\Q'NnC_:*3[$179<l\NQJlYnL&k%bSX8$80("'=E?e4/GO3te*cY^:m
%Wdgg;)_jp7;Td_t6R2/^ajUO$'_'9aD]5b.)fbAnN2i1A5r_SCb-7&b1\-N^c:tmt1ld"h<MgXVjZR-bB78&u=;H_h2J"V4jXL1q
%6D7HfbCBN$&j]^U?B;))s0>ih3\(-lT:<4aJ!i[#P)B;$oS7=npg7)NNBqsj^O149R,WU8`ft;r/\-c=H/(3`ra5HsWHIaGbdm+I
%<]`5$Z'en*5K%KoG&pp5&DZ@D5dc]p?WK7.s*$CYb\q7+j-[PKpVo>Ph%\>i?<gE1.'0ejj/Cb`34FtTpWS:0FDbo;Jceb_8Ih)C
%TM.X2fg;/&:?ro/7l=^)fQ==R9G^0V)ikU0VThB6((TPR>cj[,9YSj+>cj[,/5G9j54(`AM[@>G>Ct>]C#Oe-%eQSu":n0LSJ`A=
%p<^r`6aDM/S6^"Aa[2bN\&3Y3`'"-+<-goJ.RrjtY9NN@]YJcu&@PDdNC<6NSW)3cQ-C/N68EWlO$kjTN!jGdGsN\YX+8!QE*DG7
%g^fgJ.%mt[H9arkif<ME,K#4VX3-0gE8T2K+D019MQZSD9A!(="bs:IXs2:2n/?Xf'#*E>hn#N>H-B3d0<BEF5tQp-a;mT%l>D12
%H/'q44GN/#Kaboq!nFU.rH#SB5*(EIr=_+2aef%.SB'^%IsFHT%dO%IFO+Xb^UB/"V!_Sk#6b6OB\Z1R\l\_]`Sd/ZmU$b`JWuZ:
%]gZ_q^l=#YIkBK%1.M0/Vn5]8VJ4)SSHqI=SHc22(%$AG)C^$[AjO#Pp#T,RK,F'e<^>"oZr/?gUPg%*Tk&H"_3POQUgJDC1ZGgk
%G4[r$,+.X%R6UOsHtY'O*lj&Q&^ta6K:1$F6*<JQGdC[01@6nqbfh%tjdB(VVTIrJEa;dU;dmjF'PU]k\79;WNb=6O1PiE9%-d5d
%l(/,_A#[lXWQs?53A9hJ?ek$7r]mJ9MY^'`)IlZ0;S6%*M)!pS*"8(tgm-4)-Ios`0(/Een]&V9e$@$M*p1eKQ#'I@eqtl1knOa\
%..4NEW?tpOq;D[_j)-*E*JrMp18_!3%h5Ri@[P#;KIbHWBJsjTE+M@p]j$rZWSabaq<H+O^%Z,M]08$^]ef>/5&.s<`=3l$G];HJ
%ecr%!lC8HK3B2OGpQ%R1i;1Z`ghS#fn%Er6E'q'M"\[=(f=i>],4iCAfVmkm^phY]EAb"&V4ihn73S,5IFd!=8O16(`f1udLHkJh
%?<D6OMnMWmTjB`(E(eY3?WMV&Q)5KqM36OHOsBST#H`P9ft3`-JhDh6B"gJT`5iCcQJoF]7j2nc=:`NSP8ahAR_A[rHMorT1@Hcj
%f>Tp0G](Cks#,4b&pgsP!hl4E?FN87$==9])mAZUpU[T5gB]EK+$L_:IYj05c]P2AkWOL(kc:e^A8"k$*uU]on/`cjr:sj=B:L[G
%6Tsc@iSF7H0[j3_IO-@"bNPT*GVt5.f1GY:hO.Xeb.:<Da&b]g.5C?_66iGlFPKJ0;_?R?Y"MADP;U)>4hq#CJn,P""(u]1M@J*&
%<hIq$Z3@8:><'-8AIjjFi4,%44KaAoBU2rc2C77L[IPGX'`aWK#L$+/;MGp+"3WnUl3:_uo=0@JN@E_ogs3HU:@S>u_hfnJ&L(Kg
%a3u8!d^@H,D;&!0U%.4QpPpibgCe5.0AL0Q$TouLE3Y8KOctSq!G:TF"^_RLhk$,al!900D4ud_n'_HG8-__!>9Tdq)7&T!bMj;I
%Bih?lh9bhRWcJqWPjhCaQ`07P8>>E>Odbo2,JO[JnW!TZs&.p]>R#h=7a)l=hL%m\o8ESdaUE0-^P*-8D9(>G]FIig['e1i&Vs(r
%--sQ5E3'/cojZ,.qlJ1E:.Ydub`[i,3R06/h.md'4YWtu+FsqeM#iei@.h7;T\.]NeKhmVC-+&QFTF2Q<0pQr-`sfK1=.TXf&[.Y
%@Va@`d-XRaHLKNaCTX=fEZqR(%;8M4[C?7^29i"IS;agG'Q^"gS#ao/b\u2@8^&*6(d+D#6P?/HLlY%7MX%`>&lW\Q1YSNYKd:8i
%8+`%_ghl+%1`5[rPrU*ECHS><DA$)H4C?06BJ>a!Ae.JW)NU7SP>2EUbSlPpl3]1-,]T+\-T\GMYsRCU)$kN_%E/ZYDs.tQA(c_S
%G-sr0;,"5]6#;j:F0WTD1[OQ[<g]OO(L=*rQeAP?@YJ+HCiI.e=CI;nrO-0hnH)Zj<1,1U2%:p#<i^TO%s)?jC:E,p9Wb&>%c]ZM
%g+%?7mNUmmkY;L,VG;$-!$A/)K!JQk.X9T,X&U;H&(@R"G3+PSllZ]]m&8]__8A6HhQM)Nh[ss0n5)GY9XVd@FoohWqa;c6TQ1i2
%9WrWleT$"5;=LeW>A)N=LZnhi]UJs0*i=]!A9<QC?19Oh]Otj\%g0ir'!W+bU"^u?kQ_^>EP>C4/Pj4#o[SoNDqZXbR,giXWuYf_
%,KNjR0V//RG.VWln1[A'_N#l3'<<-s`Pemd<U_]UPo,Rbp'Mk\[Gk-UoLlA-"V3DNc6<T:VFSZ4j*g(o&(A3+A7C1n[9`8UK$?Qg
%_t:@!Y'O7d4A;r%(t-uU\p3[UQ0Z%cKuXoADsDAh_Eom7Wu^?#!XT#@dm\nF)V&`A_jFKE>&Joh"V9'd8IZuf;t)KSg0r]0@D7h]
%S$ZpcS>I#tn1_Q0Tr['m>jsFcG[+\Ihf?-BbVZG%_8?aOorJ<-1Y!r@]\m4E[DV>\DMs+%3U7Bf>OX?!8iU*b6=<LdJqn?c[sUbt
%1)2oF=1bH$+poBg=$(5piar_O:T\fm,o(aoW8M*uFAm#m4:DB`L9AJ+g5O"1'Kg1j(,omB_j"3OT#6RO]%hmm$$L:HW8fqSFBn;h
%;jR4($Qc17_1KV&K7\ku@;NY5(<>"[.X7>`h$Za7c3k\jC\NtOfl"XD32C,.\BIh>0WXWp@DTit/rCYc4H)giJSKsh2]WYroG0Bo
%g7dR-dojN)oH7H>(:V25LZp`]1=A35GShE&fUgd1A.pG;R!pj=eKUhek(8BQeIK39Y+a,K*kGj=&(21Om.iHL<+C0l;'N4%5#C-[
%ZXd[=?G)8.LEp!m?)[)Xh\E7:)&#LXg/T+E^<(/:l9uo46Bi.3%>EHgH0*`"NDf^u@sTZ=*`,t.mr*-uqeZYlbXuUAqg+l44h.ur
%.i?f:l<B`aXscY5V<ZV*(S/7qY+TS!oYZNl\N;QGIN0E!J"9Z,I]h#i^4+@sV;mJL#/AGrqs90cKn6XMY?T$4rS_tDW9@=V>2u9]
%>'VV9bshSYId;H,k'DC!gqV[U=Z9[]L2MJ4mEZ7-oj9jD>A/f+++KY?GeTR`H?q`\?MiVlT?QuVrqaiH*ueB?qgX!#?69*YmJX1P
%+5`%+qGO9Vo^:#u?E#]+3a:$]^@$tUZGB\?0u#cQ1k&]3.#[6'f%\ri1\CBYn)Ls(ml`N]hi5hJ)dZe/cKJ68]O,)AVoK7^qc/&k
%5CUTZHqnVX"`baBFlK?Fk0.+J^*(PQIdu"obAD^"X8O8aZd"apHkAhU_B/kuDlg.,3nN,[MntmBhS#\Tl+X().^%$HVZ6S\ICLn8
%@sI<s)m3B@*.-)bd33DpM'=3<F,c`]I\lMq)ION16#$<EFGsUJ)`?Lmle8$mpQQ#8!f;h&`jE95]OA+2O+tC?\@nOd>jU':[bBAW
%7V9o9;<QlTJ3U/Yp293noHu.`9J<*h3B2LgBCFF)RQBrCK;X(bea7o()]_gHmk'L(4?T1*BU7LgL3&F%c1ed!rVa(MKtW*bqup$V
%Gc5"HnJJ_:9H/b*Xp%FsILMpJ_q>9mcrHhrkl+J8aSH;NZC]uMCP2bQJI4!D^n4P8oHu?&mr.].Xl=f\W&>Eu2&dH>;F]t^rMZhU
%L6e-leZlsF1O#du_t6VbE'>ne#G^jBk3/*)TI`;e[;NV^ePJ1X[@c;3<VgBKrY8o_ejj9'ma.g-o(naOi2;%k4fD0h89LnM<Y7r4
%T=S!>0RT`)$G![I+[uH)(EZE>m\6^2<S0AMNB&>)\?T:^&&[RdTMZZQ$GAcdq!dI4U7Jr(Wa1jJrYcpb]NmG%!ui)heqX&O_mG"f
%ol->M!P580';F*rD\_Plc.gI6\2bT/;7e\)hrZ$I?<^<#E(Zo?Ji(GN$aY5qR-rp62/ACqmC>-E5a/g;hk[eE2-ud,*LJgih--j4
%F$"G=qoB`sD>sFRC#a%)ql2Q%F`?NHa:@h92os?!o/(UDd$N!3mhB$B%^%nqCl9A8[$_?o?PbkPAblRdh]Cakk)\.-ZCaMOjE#@0
%I^)*"nH0^)C#CLQ3doN&r@Z1!4c:d@SioWjT^fQ9rp-;^2C0.!r^-42EsY"rcF=C6lL$qu1;):FZC0MQ])8,R,^#PGja-T/Ea\h.
%e)5+RE^B^?#pin?fG)I\s(<Hn[@fB)jW40e]o#1q4Z>m;Y&L`'as[Kf,QIP\#R9;@kQ6ab+-(X=\F`VtdJpp:4#qATc`J6:^`8:H
%!tN62&FE@RE7[=YE-;3GphH%T!,Aga(D&(fm#+q,NG!_LoLrRU=Zt7*mrLY@5>Ab&G%>j$BBJL<\7]Dc#p#:XAm'8kB?"1`m$X?T
%RD`0dSsf/t7*k5qg:*[<STg$FGPXEi%WEX)VdEAXI/)Q5NX4_QLqS&pijHuf!huIdOAA8-au>,?YHN2)Kdlb^L+u$c&^;Ei-iA&\
%>iG<rE40jTq\s,10o@Z_h,h9Opo&G_8U"[[qbStUI1lu=EO%TpK(W,mm(@i;_(Kh>!JR,RL:r"[,3[GHe0p<DcXmpe_pn9@b-2UU
%<i<(5V:tbDgpOe5VjiQQ>cuAj:fimiIX^<&et!t=q&dqnEZ1%]g)('ikmdVsk&6q$s0)6RSu2c*<g=>!^[\.g/L7co,8l/'g1`mj
%S9L#-9#N>\QNWJ\R@i(*ai9c*[q(q0iHoTord;D'Sc0TNGcm+ZHZ-oi(\[$1[Ut$UVuuNggMT!a#-(N0Vf1n4G-]Q.2"CATFP2QN
%[Kcm&aC9s(]BKg*PW,7%S&*AD6)U`dDg$Neom!"Wl=Y0"[F=/iV2[QZp3!N!#Mmmr+7J&*o`oVGS-$BQ#OQDWTFAFbZ7AK*=Opf*
%h\ScNNc+$'p@^56CuWH[]:[jW/DXL593]YpMi5Eo_U3MP/P1Q@NW$t1j8S5*)V.unqAMrVY5(hfhY4F(V)#U=3;Y[4B.$aJ\,87q
%S1mL3e"6`=OD;`JVgs^^g*P0sLdVr:1T=P>k;U*7bq6a,c/&<rd*QC=Y%K)Y#GS(=^\@B'-W^-0a7[EjWVa5s3d],%Fdu/+nJ[L"
%Fh+V3Dh"[5$s*"sq8&_E/4esK`mcE":6F1=iOJFC.9$uEcSo(?CCIl#mL:4F?M3"7V74@^g"93kgp`o>9u)D<=9#Q$^.!hJ]lZ#3
%=0DFml>Sl+2`!"/*5Z"#UJ78"KTH%YmjGYLX'^:EM46QZ"`hi$NN(r]Mu#^;QL+n4`6Fmu]p7kHpBFfLqApPM<gl'0=oOf,Sb@?6
%fEALkh41TrbcK)A)5T9bV"O-N"`7u)=g5*L(>_g,:I1P!RU1Bo4#hsr^+6P?pQo*Q@6d>@`rr:AKcU&d/L[c'>HEJ1qbjK>h[_mk
%f.5G1HS/d^5-`3o@H]%ue@!bJg4Z/hd%"OV^%BFdN3eY#[_$]q%GeC[3"WOh;qZVU4*Fd(O7'Au.8D@L(UhV:S39)@mue=c(<BlM
%W2H3[)ap*[4"VtoF%mL_aY;n2m?W1OA5[8[V;oj&k<#e%.?<b/r]((S*OVq?pei6-!1KbCocp@kH<$BPJ*'C6>%=-'3BT(#Q-.,T
%gSJq5Y_gBU<Hq>0iO1SOG-G6j)kNn8`_'gSHs.H&H^HFNT/Mc#Es:HniL6IA:ctMt=W?E>^I6e^[3r?7Pki+ZiBCIChWsC`5Q>S1
%p7tPEN:XTNM-iXCjmV==XN43KW6($VB,H$hf:dNFs7?LN_m'lHF]-gs<7WYNqqfTahWiTGXM[eIiS=?SRn:Ve3pKH+[ED9*QT/XF
%l>1!SiqW5K?J.AhX8SE3]$/s1-WYJ8JIY)j$pk[H]%SP$=a:s.P=;:k\C-3>7fb(]c3n)sg#\&1CphG<JQ/if'r#qtJ(&sFOd2\g
%g0,PDq\p7Cd`C[jMl42s[CPH&C/dspL\jm+Eh'!A_I^*8!Vs7=p:g?)p[<$TXq,+,R%V>,I5t?cdZBLiD`J^;<qDtC8n2Mc/,6#?
%)LHnc8$2kg2gZm5SU;psTDu,g@sb*]`,Er(=fK'n*<%".K;8K)kmkdQU.uZ%^"bkXLeaGj[Hl5*JatI!S1i[D5.t"CU&V74*3AjZ
%lp&d6!o0s'XqN/kh8IMTLs975]g0IEm^1OY7k2:$_LBkO:>;lM(jP:6iVF2VE-9a:A48R30?_UiaS:M8Ia6[&F2U4'4Q77P*:C0r
%kH)p7Tpnd_94p=<(LbF+aE#Y7XL!pKAF<4YJAbtYA?HkVlZ7fp&UU]Y,D,8$;4Fa;g;<jeiVM?^M_[A<[CP.mc\rc1e&J!"#O=m>
%O-@+#o6bu[a3MlH_V<2o[ttuFc`["KIkK5`7M]*9B>uuKdob8nNh@4&N[o,aB[QV2G6BAC<gGh!\]7t?CgicSIL3WEVpk$$f$'lL
%\EB`6UMZZRZDSG2h55,g<-qeFh!S_5'>MY!^21"=YW]*::#ktPDWCB$G^Gn5Y!$X#ms>3IBA`4)%:>5`rMDhc7NK/;W81W)2kcFq
%;J3jTIiT:'I)bR;LVEeFIP0Zt2^%R4LMk>(Xc_YSS_[YNREV#iX)V0l?fMMsc*ssrAoO\l=8G+NFd)]_R:TslTTe-/p*\Xg$+J+/
%E_`!/8;]Eg:>VE9m98jS-VVReLdb(20\=k_=QK)\6T;t8Er(HCJ[k;?:1)sBf"hiV1#H[K/93X/XlDiFT.i;Rj]Q,&&Gqh49m+nU
%63>LA>`roV'=H1IL''D7?fWm/SWTTB^C`B<L#!\6EgIN%V9u:0KkjcW],He.,5#ViFl/Ml[G&p&mc0R?]s$S]RbPWg7)iJ+qX*lp
%j&P+*"%V(&1^AVtV@F]]bH0MbjW[%dTrb!u(se27q16=tq7GP(2K(s93rrO+(Q\IX29lE6iQ$3O,8u<d`RCFd.W<3+G4@U;@.ugZ
%kWI)&8WhZ,mdFLQ(c"jVauF[CMFM4P7kR&?+)SfG$AKR=4@a0(;=MQWO>s0PO'<;U^i+4lTTOSW-Q[H_EMu%qi%S9`BujYNK@4g`
%J\10]bo_E/3Vq*6hpsM1O8:%)$rirU*\Pl)9A"$:@oImW52^<qWaOr\qSSH)i2-/6,%6d/8EcZsSTDCCiBa[DGeapI9DO=A%M6ZJ
%rI*FYSiE$unG3$PLP/JiXYJE[OH'Q(]/_\nn8L,R/T@`0hq\CZHS*@_iZ^[-cZhRrW%7>r'[.)kH?`OQWV$,Bc*/(1RPr!X9?d6U
%0CYW_W\PWu^9&\uL-\StprKk8Rt:-4OTra!MmOXEb*Hn_28JN(Gn"jeL![-76%qs`-R8Rlq#&-Ij.^1+[$-?fgX9p]mWbV;6)h6_
%9Z._P]f(BF<B?NRlZ;KpJjot<<DXZ/Do:>$q=c3P#M4^kmFfcF+-QA1ZiQL*UphLccaF%oBpuLojYjEIaH4%n',n[>"ND$k_r%'-
%.l&o0s5Z'ldN<?,pSN_Q[^Oa`f"FXZ+JB6oH_t1,N<]YYVm9:Z^@[<E4U#15p:$^CfU;KRH[$0P0B5f#_9HqT&EZIME6:r!\m'sg
%SX-cYBW%\d,E<>tRRh+i[5APGVkk'"Pas_&[*pc@+rc^u%G$S!72stXBs<SZ>Z=PhRtGZ!hY(c,&0WMO1[2!^(m4Q)[VZUbdN]X<
%B.=K4l$u?h;KhZt"pNJPZ#D+4H,Vd1leE'jjH`DJhhK0"!X@\BGU0&"Z]PSo\gG!c*qLW\&N7qI=Nuh<2m-ll732:$F.-uj6ic4p
%%hD:nJTAn0"h?!H0`T@Yq"<qW,;1b]$9OL3T]j_l+VZ`!b2UaE?KIgXfH(!b#Vr5k/1Z2E&d>Yi9d,Qg$ALJ7F-rO;Po`JiD:>nu
%ru_m.Zs<8GYeGsdF&FsS<:AM>0FfX/NVG3<lc%SFoK_[[".nF)Mu\\p*p'(k-h"f6BgXOkWAs(@'^k%;5[F@/78)jALsim"Zc9s&
%Nic1.qn.5TSjKPsZUtu?okJ(V(N!(c?Yo-cY'=blrRT(s$67#o])<hS[&i:Klpu]9g@3>QKQg"t2?-MK3AS'`oqPYs>qU!k2gUu`
%@.FMZ<tefR:NA:q%50Rco/@@tA[=DY[=W!Pj("kQB(=s'r].IdflsoEFM4C+*)o-d<'0n<STR;0:RSh]GB@Pfobkp\1u@Em:oeNc
%n>,GQ]A3<un-:e!Gqt>n<&ZFKT4/P-nJCeGl+E"0M+86Y4;(A[>uAi8;:YX=8F_/&E%?q3>W_VQ?&tBNTRPcG%`SB"_[@VFAZ(6;
%mJ_eoBD?Rl6J:ZDQ/XUFLE=(_aqoFtr]_UaSB)7#D4FT'?J3-`2oP"gr,]B/9)OP2rR0d$epclidli[50VZh3q;,P^5&(Te)@L>-
%[\-,4O+q[r3Gqa-.I3In4NEQ),G#r#2,'3l*%@#=UP4A8P-$Ml;R;`E9j4$n8BoOK_DJkQf2,)8Aq=BZs5.qM?^@Nm'r0NhCot=\
%p%`Rup?h88kM9)2=P$mn?%5l;Q;r)%l2%s\G&t!2oD_#>cW?a"2btOOj5&7rmFq-:D:EL,T!*(DL#qCNh\B]W?su9ao8j(`Mk"8+
%IlNA\9>+P.(\JlmiH3`8DjW+NU!FfAe_l_D,ek9;]=kgFn%MD.oQ,C!DoCq;ZEg@T2N1<",$AT?bf?L#np09Kg1SR9Hkt%GC;fnF
%V_7/P?Ii1i=.T)"HYIN8dWdt(pD2VGO-KK<j)CnN2)fYH)^1S>,qY)0b@VC.URros3ZLTuJ$/Ig*;u8nR<a$]_ggt2cI36UQMmh@
%'IZ;r"<N``+]*if$"6%M>bD?o';Cu5"cABu+W,^f!_#YKi$S(?":@*XFY/u4d4[eK?aN@@1/>p+M_q4J^KJY9CU7CHbsDX'k",Hq
%63b3.)g_G,63a(,M-b^oOZAh[RgC;oR=I.U](7Xk.16sXF6[K.WblSOWpT%4:UO[jW@Gg*UXIq1V2:$tB>IOpiOogj48S`'43^sB
%h"p.[qsb:,M(?Y55u'kOO^WHJ2kG`!F)]GS0#csn,'qkI1#NYkG?R_(08p7Inkre&pf$@1*tY2Zn^$`&($7F!F\I"/+2\nA\2Htp
%b"malBI]6c6sVpW?kU_\C8@_eQSWbU#tjglmXs%5'#<!OjltPnfeXi5Rp,iMfRhSY,`JB"EU/m'.Z$'2$`mCi]Ke,-V7n_\X@1Sr
%TE7HeR2U'X\3<O>LD)b:#Z@_r100!R;\rf\E@'33nJ!1uNC_1o[+0)bc0UaHhJUPtA4\*oms[:gW-cYN9Bq)0CL#,V9tXKeYb'QR
%O*@G1(V,j]hM8]E+l3<2G71*&7VdE.$doLLOE8K02lJl&dkcpM%I3OUkR.$sVpX]=gi+]$4[q<Y`kfL2SCbd::`ukU8GTdNHljmZ
%:R'PJ`-2qadJ=]_'$h=b0U0ahB3%"ejS]K9hsn<OYg,GLStGBf"iZ22TJn0:AL__Z9kjU'*SusMKJ"q6,oqD+^U]SfB1\GVLLX,N
%>hY>9W\_QTW.]imDsYn@!aR4d8>mP7UR.@+LIsRW#L#]eiWaV&:I;olmIaVr\V0#-?Xp]s]X_pc'5s8DRf]W.DK+WRZFuK^6P:U5
%m[5!//J-]6WGN'a[?7-`krO6;Us1g1#"B8eL$P,_nmmR3j)#9XM]<pJEX*8WUn;S\!\Gctm;rn32WoV?2Ui-E5W<CoN"'D_k6Zok
%N:/85C$i<*!3mC\95#R9MMt.($G&fF,;>7!)jLg^iqn'6'aVF!N-2_>`fs:%>nhFLY73>k2F@]plmk,o\S[_Ir],>o=^8'4hQ)\3
%n+AiKM%/u]j&$2u2k"T]V9Q'0R/ff?/_ih+_]r*FFpW9>f%I7hgEiBIK\K<aSOf+JGrmUu7'ulE#k,,MCOPQ8oVo7P-u\-_g0fI9
%ZrdCJOd6_"g/shsOI3E+l.494M;'5iUsi@4b9HL&3j!BKXbCIc<WY\33N0$cn!&3#<kG9=mM\/Cj$sJqTSfI,D96$iWa5O-q*gm>
%^,_5>H"?$&]kmFu\@UY"OUJ)IPJW^YmH-uRTa1='m;2$5bY8)Zp$It;>KS0o+`.B^_&e&8TST<D]n98nM"GN[e(:o@ScFpq>%>"b
%s#bSAiL+i16@jTur6!u?ek^$2%lL.D9+Pe9?=qql3OA,*Y3KT,(!:TaQTOs)e.;#9,(3GY>JBdYiGu!"]%HB>de9ieBmW,`o*epj
%P49'^!3"ETWR\-X@pS'5`?hk4:b5[rFkY/R/8Q%?%DiS2jPS21)PV#UNQZ.UIea1o`Q#A:-T8s]BSN^=!81B:,E^,kj#a<ED;QRL
%fGTtB6$]?[_kq@n4a4N#1S=N#=9Ca*UN.tfYF7j)(TRY5I&\JN):r3H?iB4`#!C:g=6rZ%?>RgqhX&aYYGY!1[bV&9ZUno;3VMF5
%f/F-Z?Kb;T>feCCq2HcF("Z<L]2`:A^H>?BbNA@Lr;*Q'>L_c62XN&2Y[3Y4bl)[d;ZgQ.V=hOZU*e&_n,`MNW/Api^FS`U;r>`<
%W=@-0Vqp.=f1^L0>%2,,7I^-,CVN*'qa[uPUrE<tiJb_t#8OGo/(uZ+c,ZfX/ul7&^NcH`^TRO:^K9ENJ,I_>__F@K)C*/K'@pL#
%B<?0ff'i+0V#tB!QEmeUC7pP"n*>WQNi1Q9Hht#Xre%>*ms$4;-==F[4Bm'AQL?p:g^g(FRubl3HGqk5^\N0Le@bSNc!/e,C,c/g
%JcG4HbNW%b]3@'"pqo@1o<R\c+aUb)*U[g>ep:AfHi'c!?%(Kk5@(r#]6g&U#A_T?ja-ZG2h1]5hO`pPJh\]en2`ZMVX)eh*9gVX
%?V:&4rc@RY3/G*]r;@*);8cT+^OloIVuh/3Du=ASIf0?#s)kA7pKI=c';bT;$Qa2.rFK2V`TSr/9^d_2jS`uehl98_XRL0&SKD-e
%!TR'-VIJ5EhQ9a.7CO6AIV=UI=Rc?Jc5[4Aka&>,(fl@TL>pkT_dF8>$jWm!Ajp2>lRlt5;fO@#ib2eoTOFcmWMgT>ksJJ$Wi1ZK
%!Q[/LNY)Cs9#Ys1[JL<FoqB`ibqoN8Tisp>Bo8GeF^'(r5eX<oXhkbRGlrqar/._DYReU$To6PQnZA:]O,Kp.%l_D^ea8F,];M:W
%"E3/qlXp%fioOd"I-KYTqVgRRrSm?:m$)0^ld'L1(D!2t]XGl$CX6op2fCeX`qEBZMUGed]"*'A]K=/h6gpu0ebSCkkW?2-kH"L[
%]6ebZ1S'E'X(jtZ9/h&ZDa21@QL1o6V5[Y8b;D8L2fAr\D9]%.[V@2'9@MV+\A%ifpEql+r:I1NLV)k_FDO*i5$c&.NY"p4B@msL
%A6)$(qfgX6[r)_%n?'&P(&&XdN`nkQ[)B-R=beS01t]5uh4_C&pZI=XO7:^n`08pCLJ$]_On$HF>gD]nah>5e@GTJqViSp"b>3=(
%G8CdZT,6*t(Jc-`&FL$A,'(%L0&A3%h\.&$fE1UFTM(U1BLloUh-^G"!I11E'1jt+4[[73G(f#3'kWk'R-"`h1IuQj<2R2k&rcn5
%Keonm]&$^#OBe-22?Qd:N5j6;-lK/+Z3>&!L'kuJl6oN5"c0`OnfS$RB.3H3U*5Dt)Gtfo>uaiE=eESGAg#-(RL*JSs&X>I6Zrcg
%0Pl-2)UL!S8,Rjr09BpL/7o3sUr..bJH4t;.Ua3`2BAh;5rMCK5e7HKChRhTcWpq!7MM?=MQ6.^'uePq,]uJUUL>T2-)O^"RZOPc
%rW.c@_;JObL2@<KmJt>V.uqK7/&%eJ0+k3_T?I:7Bb%gi):U$mgpGOr`ABE@cO2F$n*(=aP6T)1+TrsSY#la.ph81ba;CcS.OOJA
%60=ah^SpSr0hm?V>VO.*<BNg\!G@1JNf@hUhu`3[Y*8.B.`F;'91Ue7%c-+S[U9nSn,]\Y##d>ZdiP_2!.s]nS%]d84;R.1rne;5
%Em`+g+\C</B<"Nc3%RU6(#)^9H/h1C;Ve;X_15bM#0\2VjMJ9eCDMe_+TptbD>Xn.+X`#u`U&rX:k7m4_Lemo7-kmig5m1TL-jZ%
%BUo3H>sSZ"PT#CL$30%#*H3X/IB$p(%s1,@/f+6&;`tSW]Uj4=^SkIFWom>4^ulNaqnoD)WbIcV&fh7F)G'*@dj^a%"a8XsG<3gH
%)G,2s'Uu8-$D^SK0Mm(LZY>!CrYQ#3CQZml5YN1)Wp2&>U5Xb4OHL?CC423'!,:!)<94-\%2r)<DZ#Zj.d/-#!./"MW`(W;oBZ+j
%idn8n&UI8gcpHPS%=AXMM"pgpp^f.qC=%[G_gVjkrTUju84\PElUkhbd"=s7LY9,uY)BD;A5!!M%;nOT'TJEt6#t#4`BmVF_TNRC
%5&^so77RK&8ur`r5:6G_^.k0/B]N".Np4?p*eI4qCkAPFG9UJH*DLK],#E"d`*H4#',JUR6s_A^9lO\!Ob]7BS"eYoKSToRXuo(T
%:m;[PaE0U2a4"o'iAe8@`sHiZ;`@::YSBW>#GKk+%Z^t!X71dCM(qj*'h<l87Un>i@qCEqi&&Rf=$7a%&**gs%I$P-cr!+'eEq,g
%fT9[k+]2'CQZo)16+e)>].M3j?3<>h+cXrdb(IdQ0J-7E_tol2oVOlc7)bDR)+=h?+7+$crkWa/?Y9&ZE;.1td-)!d1C.EFBc&PH
%@VAe=R?$j,$:4_5(kugV#6ja2M]V-2M(qtI-NTL"<D4,s8o*Bb@!+=5g6A;2@omd-'hu5mGc9E7+"FrYUS@$Fi^VGmXYW,^;Z>R8
%hN1J4&,a%1Da7lA4C?OkT.[e`2Ir5Q:.3>bQq`l`B%gpA,ZC:'5;`,g;0>GR;pg=I;*`U*?T,BtH;L>CR]om-"k8a0)ZDM%\_L"X
%b<X08Z[f@_dmCKXkf?a=*JcDYD&\?^F^9nG&1=$OM6[,UO(+>F!eXVV^1_L@$$j(a9@.8N$A2AEGB,&Y>)7r+/c;;1?N[TJ,[FkK
%M*C88kO1h2nJ3<_o`'2rh1668-Jsf3dJQ4\k'td\0=pgF\%_(W5E0Q+ZDsUt-6jIqXm%m'W".KNQu4]8An_aDZVZg+d%;rO$ikCl
%O=AnY"Oi<eD+A8H!`YnXZ*Z0P:)Y:5>,Y]+)\iTsKQmAQ[)2bRA"^[Eapc=QTP37<)>P>h-]4VM!>'?af\G-A6cfj(j3Am(%\p>Z
%7&\kW6P/O+7E@deq?)V8r/^LN<,L:S8eS2g^^+E@$cDuMF"ouDF-?CbfE!\H9RQk)9s#8XQiGqZO"&?q&g;mg*3)(o=G/O>a?+t^
%_]Y$I*"4LI!+`)LjAZi:e@7dHTk*lt&o'1UJ*U4,Id.Zf<21DW*kGe>Fc^K@'_/0j^l6WtNt`;<-,5qRCf:mF7l?5b3a:Y"8qGB/
%W32iCR/mAi@d0D!)[on9OCckYJ>:c*A%G#3Au>/C)o/<772pR4dtJl5G7:K6]=m7YlfI#eT:#l<h,`d3&U:TN*8c:?j7S8&3t=jf
%3j&rI9AqJ+qgN,cct2J&N+X"Ce^B7T1<kQ-VfB=Fi*h/nMN&H)CUf=l6CaMgXrLnQ1,R^&e+`D$e2r[.2IHr1>IIDFoqsO>X8sj;
%_O<7(1')!CTt)8c!r]>&:sBGEK4AG4'!W/jNYk]XN;?mV,!]QRG:rhlh>V)rg9GEuIZe>Z("6'te1DI2Vis5Rk=R(2eJH?N5k<-V
%VC>*^eR'Tj:Eb#Nqo(9$qe\ehZ3CB=D3Bl.#5WjH$V6`O85R;kOB49g'Ju&_6'.?t.L\iqk9_:NU25a=:(IB(k#>#E_%tj%<6aD4
%3<!SRd$6^_%uMrj:>e)[iVT85W%cTkXOi:>E^ta6H;JP@%md-U7B[@2&J9tEl5PMlQol9X?CE:,"prHl*Kbo]IK8VG4gP24<ma2W
%G7hrj(sJg1Q1:^@TW"SeMV7B@,2q)n9jh\0:`?+Kd20PS?75a#Ls]I](P,$s=rMUB?7.o\U)5E-2bkndp[1s71n)>d$Zop$2tN[N
%j0RZcU+o[P%?&=N=$<SBV_C>&Z%>$##BW4(7o)n0&-7LGI)eL=[^uEg#QUP-<,\=hl+U^/bFf+pY9a]'O2BBr5U<_p-p4.e"[bY(
%[jb*0Jrp"sCE1f#c.>X,O8op63%`TVk"m@;1B:DiDJNni>)7r+/c;RL*:*o_AI8hn#n@_'4^.)Gp5QBn'n)+4YPZ=(>_4KK(<f>b
%GL8n^`Z6ZW-k\4<Z$[2*;P4G3]:j3WW)jtfYf3FW"6gENWhkk8Lt=2&4,3lhBf_:(HS'D7"^aXFkT#4c"s)B^mLjs^^%ctg1B:Ep
%!^%cde3Z8sC>f[Lr#gS>-HJ_\#sZL0l*e,%L7_$MhtkY\74Uhre+Fu.IM)QDN:?-[^RS.p;p[T2FF$^W5cI8jB7p&@$;$WG7gW@\
%pjpLr(rBg?)&Wk58VG6>17%\]&B\+L=tGN.q^Ic]9np(c50G?R=;;7(Z<Xn9q*N?*0L`=ZK6M-tWX,YW#6jf+.(A!$2k=Df@Y*tA
%%fr?XO03P_8>D"O>8Ra*P68Z(IcNcCjEccA=u,B_G/_mO*!orcC)5hP>:7(6/e+@j-B:pIij1L-6@]jm9()cl)]'%JAQ2?_35):l
%1eaN>j''%3.+nhRO=!Yf)c-r1+99o6(5J(lhej?2%.UH.,<d]H];]icRl]bP#]^bf-Q<9$6##bKaaK(SQg+e809U@U_;K1\iR86F
%.XE=E^u_a/ZBTtrA:WZsVXUrURKHJc-!4*#!Q%iV*NW(IFs>Fe-.,F7$oRSC*#9F!Fc5\_Tl#NWXMALKjo]S_.sf/]]8?7pHC$Wq
%THPC&H:0mm:jI."LWGu2TKH[*kk:e:(ken]K2E(;'S[MGZ>*fg*dM4p>qm<_1TrAP,`UK4b/;[:Dj=e*nu*k5gD+<m0MDeVGe4Jj
%cjgOiF+=[&&eKn[U'F0T6_m"p5^@IqWk`<XmgU?gO'.'\*BF%Q58Y$mD'q;T?)qZ0`8Il`%UTaU,mbiVfn[_f1XL,>&+9uM.M#^7
%\m61g`@r$PJ"WD>V]O9Zd>c+G:&-ZAiojDCdh51i[L\W.#W.@,dh8>EYU-7&($<P5aZ%3[O(i!RYL*8&5oX<-hB+'U=N:oE5QXNp
%p7_$Wd4^/#OG\h9_j6s5=-d":9dXcjBSI^n"2hQ$i7X3!ZcUrIYXp+%1i+6`%oB!gnPGimreS)OZu:.9j$2Cf?s#)d3$YERd"M[K
%>hO]t6pDrM(po_c3Yg[dI>G!k_q];""#2ji7.[Bsa:`s8)MXb*4&RmAJ7$0:Z-`+o]k1CqfeBrk%jZAa!GQA)7B`[/mL1!uaC6&?
%.jb18VceqIHW/^/-lN@#LbT!MbR(J]@1hNu'STD=1l$EA_`K&T*Tr*/eF3SQV][ophD=_KFpuFT`]5Q<WH1?<Acm99@IIkF2`f\O
%kNs1(FE6B[-uC(1pn\G$*VUi;_8>T;@3i<+137^SZnrDhi'S',FMnS/<!kC9TfFHUNKLJdM#^i$?kXHPI0"AAK2-C4Y`4rfKNK_0
%6VMi=@s`IfAD7;q%E$/l,;>+H?WHo+[+mRrE+g.UCueGO@Y!h/1^4,uEWA6@DE<;M`+!+@QDPc-KI`>I]4Hr;VGkS3%h9cfN8TUZ
%+!!3':_Z!''EIq6e5CB8UXX)#V<D,c.)ce/%`jbPbs6@Z."q[1"I_]O%W>r-hZQLGjBP2aPsmWZ3dSBrVjLpZ(Cof#U2$qMVq4mf
%89As^a/1CMn?cONN^]_T*Co.<l?K3pj2IMp\gHtu^_\s`38bu6K+?=P2`_*\,k:B2H]7JjOoFmh*&(])[0]R3!JSr)SAF,2(gT]5
%R<[I00Wa6kFcKmlYq0&c6QdDW!8NjD?B.;YPbR,?WpXc/#q*57nNIR/Wf=GD=D:.=0/;?4@N;iZkQUlGf_$.(@baD0au>fegO/`M
%]0!T>`GU\tO=6''!l$F3LS#_!72hi`V@!P<c^BW]KH@h#is:"'1-s8D<W!D^Aj[+_\f&b:XFT:dFEN8Y16Z^jEFt63@&ZEHr^Ih:
%Qd=ah0BTkhAq3S%TF%!GWjc(9`JDr32p0%rel>*e7Pg9GjM!U'',*4_5mQBZH6&mp#fJij\,fPG+MGc7gdr9\:qS*G\5B,^VD.b1
%*J=49$u"1'W^$h>kqQ[j(X[gl1$mgB1;!e04=)ml<l1OsLeSGNQ(b6J6BarH1kh?8h_qB5QA&NE`i#OX)!t;BW#A,RC^Z$UB,_Q.
%9b>M-Qib5=L5/OBRM3Pr@0iX:"-g\ic4>6+71q'>/_tF@P8_DuNZt+4Jp9S.$YU[$M`%%r-U:B*i#2%oiXRiVTa%/4:Vg-uj[ROS
%43sQ/LM]$Ym:0+sOK6g-)NGL<%.#%SZtXU!>e/cXh@.fJer!52M)5k?3sphQ:6HKm4%,9L$/,eQJ]WOJ6J&A<$h7&mKn#2\*of!h
%NU-!-(2$CSM$Z4ni;T:MC&_M"G.(k2k09Fgpnf][rVrt,IYa#^i@nseoCI$)=.bOXcQ<sJrepJ:DNduP^_.BZL1t*ZoSZVq`FegC
%SR7Ve-)EHc0:1`Q8stH4[dUkfG?-b.*&/->CY!Gj57Dp)TI-`l*Ya<V@-K(Kj#r`d3k#7/E(?,_$i3[,/Q>]%\*-1:1u*&`J9QU.
%[#R%!D_N6n8fFB.`:i]/MQ@'^a-^\#PA79/#pdN2`Us9Bou?qAKXqih3g%c#7TWd3HX"\JVAU.f.iI43"BIGgIGc$9'qH-t/lpcD
%86?bJ\A^t>#)=CgRDq%Wb#!hh3V74('5<0Ud0/#Z$DfI\>^_Q<@':5hc"T#."Vr<n/[.<*Y7hui;2c7$_M*53Md;/5]E[(@D2V%K
%W5.uYB`U["Xei(m7#']g!Ka>oOu^GPm^aZ,d>,S?MFG,Y.tH!G2)%iE'k(f5!d)C]BY(I1?=]]`>Il+>kC_jCBJqm]LI^Al]ucA0
%OtKtO.7\AV.rkZ?^LO^l*DCSCdndD#,1L3nFdNSS#,$3$L>0*RBH\EH[I>QeZ8iPa3bZp[jG&.+=n_=GS8C9R*7@G9U3t(g?aB$:
%EoZ;IPK6jcjGl6tB/fMc[@"k\Q?%SVkfHZFrM4FZM$9@s;`7!,W,!Y!(cLO3:ska>:!P0MQl::$H_&btLQk8DF5sDW:I2:BPG+Ud
%)_@?/TPGIVN4@5H!,=LKKrc/*+W`,@n0^"2Sp2qnNC`+g+RXZ'KI9u!n7!5mSpbUJ05cu3gDH5Bp1,*j\'F65KpeHm)e^'eMqj'Q
%frC$<jS2,_csrF.?9W)1/%f1s!kF79JP"o8CG?ZP,*_iPN9S)[XQqk2:QuWOY"1#*i\;2uX?+5]b(ZR=W,m^qeHXh<4Y_<q<`VN,
%K.DC^0;+\J>S2o3P>kD2VZ`sQ_F"=gFbOP5Cs"a*%k'4(@SJc"8MQ@,5B<\ohT%%J=M!uAU6Jpt),>_c"QD%(Ra*o`NIP`BMC<2V
%CfHc&"EK>IOCQuk^B$8fgYbh#jD<kfGF4iDd:VZ%2iTL\oj7]pP40,RY4rc(1BHI=ERtajV-%sWQQ7)/csUA3`&'"P@dEI$]41<'
%Gui=tVC'!T.O'o0[PY<P#$"+Xpdt;+5)\oKf.EIR%$f61hm=hHNfG__=R+B<2J&P@?BDg7\"VI<lm+]=$k[]#W!^kJ0AO'^IS[^/
%>H;G+Ta$'G=$NnqoR]t/nK$(4-mTePcQ-H@+chf/2.`H1KV=dgYpg/p$,[Yj'uLlU/c=aU4Zl)/a:B%nZj_E2k.tSmJ8>@'YFP[3
%@X=D=:LM,H>ZtYobMfYARZJU"3e<u#@fRo9C0Mko;(U'`/1[UPP@j-tccOEe)hZFJSF`k6.YQ'j^ihEY4O1=lLjYl.*T/2).T=7>
%!PP!i]><r-g'uHt$WU18<V'+Q8=KtNJ?H6:VXf9.S?Y>G',mGQ$u@F-SMi(fUM-V.&O83)bqXehb6,nHU=5WD>7&*\cE]`/jJ:/^
%M*L3(Me=9#GErc()qC'oQqd]:Yd;CW<p+!k;8n\eEE_Rp,p[X"e=T<VO>5[j`7oCfF1;s8L<H6e%ru'EgH;?:qDKBEIJtUpRFs`k
%Caq,UZ?2#\T7&qB.2W)P?3/tWbP]dDMt:K%9d;B.N:)Q]rjVFE0,dEZ\BI-1?SjO%&!L`T-Kb9$O^BrN3$0Jl7g-nBqK'^>I\&:@
%#HePm]Qu2p'FYFV#ggZuPQ;O"knOHPKO5$[KV4RG7lM<(d>)1I4t$D[-^<lOZLr*b1`kjQ*hrsgi.=($_65S,OJoSELCY#M\`,Xt
%LO'&P#XZ3BMEW:B7.Bk.EFY.GS&"kiTF]h8?q9?j;%+SXpoklo<><J3h6l0;`3En]bkXM_<H>HaY6ScaglV`k2?K]Z<>!Cm]=;/h
%np5)K'4+ltm*OItdrW-_E"Kk9hp6jF3Xk5J_\h&f%1F\n*@=&]AdT1]q>=V+PQZ"A_&?D(D-k:e;@b'%H5roWBEQ3cJ\:'1`)K5j
%YV,-s)m0UL&a]XB#K)0/?#!(88V>D2=@lL#%7YqqF&=c>Z;I_$_d&P<AWk9\Ge8tn1MC(QD)/PEct38mMU:6mTS7WheA@h/_Ie!t
%Z8&tMM9ZQ[*tagN/gZM@^Z2nY&VXR9m$A"T+2.=,KT.1"M;7>V^N&e:7.(cD-^\KQ<9LMY9n#7CG_e5_9.]s-JcX1fCcL3-(ZcSJ
%T'c5XM]G`i`oY(?WbIW\SdK?$RUA$uYK>6#\^4pg$Bl8@"9%]K@+*YV18Drt09m@`AJk1]0q,jU]i9#UU<Gc-I--@5jPhsh="1n\
%Xm.gD>g0G"c\5Vf(fPi)-+q8FF,?r)]9L``8D.D3IhAQB*8!q1T5dgbM0t2@@Y&tu7J\PQPQ=STWfUl3@iS<IE,6g#7>9+8R-R5;
%C8q]Z)g*\]M[H-g7FSlbUJcWsK9FE'FY)$Zi?83o\jAUgQ/[e9!C[4lpN0MpRJA(_;T:,M;UAP%"@*bDm]M5B^CXr>4=,fD3L;9L
%G8MN5Ltn74l,SN/MVu3:5:Dak/BW-,mRdi4]7Hgkk1I92F/3U,m);,Y%+$n+-O-j89/<a@06QK/&jBI8<sd-"BF8,W:Rr^3QYP;@
%!;faj[?3BL]r7,"!r=BTAW7NXrAJ#ZU5CTB\q.jMM^OPt=&?Jf=g'OHM@45)J/H@=#qlt\o2q[cq*.ES.^W;s79-Xi#,f\LGS^<C
%+r(k'[+X?uqT6#p9W-db](%(FrQiVc0k=+"34)2.^'gqq>sB`p7E+L3cG>#X@Kh'@Ge[ct%Ps(W**Z1W1/,9/YUC/97B,""a0JlN
%DFq<+LoQ(KXVRdOdjPs<",oT%LsfLpOA)QM<t;g!+ka2D2l%HM:Kk?LJW[+)Ic2RuiFq_u[#l,QX3dqaS,s@)FVBtl1%`K9J;<A9
%YNTJ*fIYi]WTZOH:pdik+rLkO&ZTne9i,Ai'T0#%,!Q6U]&Rb-4TGL?#QFZTT^Y56JX(#`9blIu%3%`($3GC_q)>r75n..%(kj1R
%F&Pt"irl;F:]p<1ndCceW71mGkMl)o"knJ_EM6ohf/O(5W<!+irQ+JhT$OhYJQcCN"2ds_2k$s^nsH`pP];IrKORJ5UHIM&AJ.X,
%KV1B0JjiM[j/:W/?/5Y2eBh4i$3B35)e488AJiE$:eW]:,Ck+>+sjcKK4r&a#Q>\:M@'.lF.-eMK>gdr"#9]<5pThcY81>0q8!)'
%K=2sQ,P44*0+$.1iEt4B;c+MH\b:0$B3R;\KVGPp+>[";MoQWAa#moTCjo3+5]B"#GCG=,a:m;,Mn`rr]]:b5B\0*t2'1q@K>ot+
%\FhO+*>JWC-lb7/'-.NolA4.p$A66U.'n2"?3$u?[%:]F]hNebXFQ0eRHQT1=EIuM?tr`#h_"+;j"3M.R6WXNYu@ENcjD=bi`Lk_
%PN4&*]lOUR\A1AuG=iLO3l3Y-CTL_'5)La2LOB9\lP1n9k(<),K8IHUrem)"8c0"+3BWCh+f_bur/1kXWUQ<a\Rii^/@gYDULBo7
%:IuX:6',L68Hd"_N.k7/S:>:Sn=+/*R],EMAMQprT?=L7iXIe^iV7!Y2j(4%$E5/P93'.NS&h_j_!AGh*?ripqN(=^m0"W7ZkLA9
%Ea3?P)ZclLh[">LBHpX8L[^mm.6%b;UpL[[qJ]@G9jCFKV!d3"=LR#sb6]["%B<*H.;P<7e,_>aKD9.9l-`R`@U;f37-]E119),M
%2#`U2@@Qn\$.KC>AjP`O/]QcgP(jq]&.(D30$n?@1e#YXX6u[Hf;RW*M3K8Y<2+<Ba%?#c'D<)*ikIkc@h%#DUcVj^F+D!QJf"J5
%^C=YE3ffR..L4^&3pHVN@HJ'Jr,<?.YI-YQ##c/!iO]G3@5nN]`4033<nO[)>+/"*BP>'(*jRPU8S1P\!fi;u)L)oJDTY[Ha-4hS
%4VDqM@W@A8]*1(DjEhl,"t'us;$6S9WbN-%C*+"`6qcg1^`*I]o0%VHn-DE\6P*kBj84cO?Q^i?NTnptlC@Jq3d(%#*KG-P!2_p&
%_`<6.d=-*tV+`ZT\o5rNVH>>`%NWPq`#uSPQI,gM9BG#cQ6Z;\/=YEHI/f,K7,#"=%[*NEs"Z#<Y9H6?@3^W;0U.SSC)EQdVLrTK
%/ZrZ;L]K$(,3>Jb#n-l$DJM46B7T=-!^n:<1JQ&r@?j:D"rK?/\jCiUPYUiWoS@OL(jMQMSr">`1?-S5i<r0+pilfc/-(:4K%RuU
%oqCTKM>-U"VN`CDMcV1J[,_h2+?K:0(b2:UiNWJ>3;+h=7WJ4uhnUC=3@LN5,"cJ\d6QP:U0V#W+^_XE_h'kdiOMu,!Q@'dPg,K_
%Y<+Jn`@EC3#52TGG9NKoSt$Y'EK_N=6HS%-!Ct*Yg5&RiqU&>Wnd@7hLTYT1)#0tFkXHE3>h9t)Knn<(++D7)>).kr@JU#'L#IIr
%#doO]lY0k.%bMM^@^lGm/dN77h-TlQU^IW@Lmj5fg/S]L-@39)TpD.bbmN:Kr<gmd/t"phpI/d7U:HZe"q(dSi%20$UQ*qLV9;b5
%==0S:GcdYsdYcpX0ETIjNfcH>$%Q%)l1KTg)Wl#<DJTh1iQ!-*VLu-2BMsM-FB^IZ1-n1E";<2HTakkLanRSPZ%Fd<-q'`19c&Lt
%FWE4)@&,Jg7CG`A,Mm<i'$?%@eq:cFbU0kST`f#E).a;\WPTZFn/\6qLg#m_Cn9hnTL8gd[Y6SXCs8Z2l7Oal*!QHr$?$.*9*oZ)
%8>&n@NKHp*076D,J\XGe3]^DW^r7SgAIr$2h#VX:':0[;B=,==DOt;?`>m^#0[h;)XbZg#7Do(V!F*'%(<2&jTT2Fd;+P96XeMg*
%`t$#BmhY&sVZ9?U;?<M/BpuP#G<`b"$9],J_"LJR`aifIXbC(nJ8oU["2VQ8aZgKN]5dW(Om`tT5RTGWOpI"XM*uHcMB<%:Nb/n5
%k"sfd1=c?Q"W2CgU3".W!ZGb/[g6E$;)Bj?J&6lq\7AQi_?\Jk6ZL__,cF9aK.?]tqP&,Q:dYqCCttAAV&Tk]T[;JY%tLEo,C9!P
%r9H:2Z#sq#2lShEDGiSR'Q8j6)c^pS3A==137JAL8I<dEI^t3r*"d$sPoc2N,^Y((L@:h)Ko-q'(tL&'g8f4-`2)1$-L<bu,uh'&
%$WV<Wl"P6aWE0O?'pX3j0sgcMg)B'W7k1J,)LP4Upl-OI#9Xui/ra*<)aad[8LVNQ3dcn!jD&?\H8hHLoB'h/0hoRF^B-&n,p7"a
%*;_.RCFJ29_$b)d-I<B_h)(4T;'J(86pa=`3)Z^]$-KFG,5E%t+G6"15ljNOb,mW;U,#et`6?&WDZX&G9aF-L')U(k'DF@%9MDbd
%d--Rlfg7!@TYNAUGoXM7%saA4pC:(U';N2lTbg?u/;<,'H_1G[8e`D2U?,7k^DU[fVQL7fJ-U+_J\nmuJ3F7mO1X,$,4XjXk<oh9
%5R`>"o:]X?%frVgOep!b]IpE\!r<I#@rXe*^AMu_:n"UM58P`A_!N?NK4u.+^\+UArV>jNiZ[2RQ-QEp'mEqp;Qt5>q^NVSSD#/p
%d_2iY_EI__XL<!fJ1gdNN7F5\<]70l,?+0-4;_.?:W.;Xd`D_icPBYUm3d2h`SXt_`DkS?<nbA0CUZ7R:2auT?=dKn%\82lZf*PM
%s$bq^8Gj9\s!%"5ZR"D87"Mf6TR[Ok2.#)-`%%4Ti=F+SA.\$k6C0)9f<\r-m:-\W896QqV5o%JnV!j:#GJ7;6&It]O>&*uWaoe3
%;!9ZgnS^"PdR:kgq,jAc7cm4/R0ZV@5epYRWm3Z]/ZB?sagFhi@]pFJnM!.P1^MV_-4`2Z(27eDS?`pR<LX#fcTEBk-H_0[!=nB]
%RfO#aZaUbu(g4R^<VaLZDbWiKA]h?,$p\)YJX.'-0Q@gk(+S8lVVQ`f_dMFc=sJ*+2SVPZqb*p/r]Yd``1R&V?A&&uo9\(es.%\K
%q]*.V[s:a:9TRunbU8cOL,K-1,++B5NTe<uH*.RpC8$Ai/;am!&hBknP^3g<hk>nTn(Y.X)7^MEU,5dFhdeV^3,DfZ,TAkc66CeU
%/=m@H:j"_ETnW)+%gmD#UcU+<FN"j9*G%?H1B9jR0)+(a)A'[hINosr&jU.b[_hFb0r%L'oCt!,fZ;"ML8C-?">h,hUUts.N<CHO
%)YC@6.6S#hctNJ=*2ZN]FSA3tZ!h*)<mB.(nXLT_d!Z8)#&./5]1\,:.^R6YDrY,_U6?+@@oHkQ<e4h.*,=;JFXFg[(%`h@NrtrY
%Qr4rHqUS"%HndOBJ_^p%gEAm$<gCMSdKM+O1sI_dUPLC#BM6H?><pPjTt"#(fpP0C*eR9_Rt]6D3]a5hF?1,Id_scJ*XUjnC*Ho?
%MpiZsjO%Q:'&!/HdZj=!EncpG@N[NeT.+%sUK8ViLi*Ej->aBSLSc(lV@-IIEA9:U>UF_=)P8Wf0rYL9gl*Cc+3$XP)nNQf61H9D
%h)-'V1njZ'f@;%j!QlspIO;blK1(WEnr&(UdEbm8GBaheF[]-5ih3oj5C7;P4VUI!J]_0_qPS@b2A4&PI_009AZ\Zo7F)"+*)GSu
%ZTTEl7l+.iTt3LA4R1:gbJ`+F8GH^,ChbMH:P!sI']#W;oFl][6Ljag1h"-0FH.Xp;h$>>kXlo)#GiT4Jk\e.gVUKdlGNpad85`R
%e/S3N&F*$<lbp\."Gd"*gLlY"=?4TsRZ4gl&\B&;HY0VH'k@!^']RuXh)!eZ4QVG\GYap9rc<6%gm?j':qLAK74fcEl\fM-;=-$:
%rC+-/W:iH4C3P%1'gk1fFPh^/3L"X6+Aq8r_A%<N:9-psdG5T>3nA_Ub`AD%fqK/,a#,'+g_Ca&fVlNq$khX2`WsSY*]\*BTajgk
%n+QTCa%au@h2rg7-IoTFkJ.==;J`8MkJ4"7WOC@uAp]t.&=L%djHW"PTQS:1M?l_OaW/9hDDMRkfMi88Ml^*ai,gRMQq\6#j_hF<
%=*L@_!)uHeQ=:#1OoUbNp]k(B(!.`mg_T#2P5iAQU;'F16(QsdG@I]1YNqq_n`upd;^W0REa81S6f<A8;(pDhkoWifTu-T]'\5Wh
%P/ifj[Xme]!*oh&:mjBBE\IWd@CV*BFY.Jnc([eDa&=Q`AY=m[((oa42lkZDBh;,gKCKft^WN6:?4mAC$4S&8mK$%QVgN7Mj9IeN
%.KSfmn.:8a*<B%E?/A\XK+:A3'sKbD,=Z5.R)DB+qh&bi#t.(r-Kmj.3$s`sqG;G+;GDOSRj',0U;RY^)#)"rGmHD`<Q/S]4kREK
%*p)-W>^m`nD2,Z[BpJ`:bYmK*,/308allq9Dda,OZ9W#6$3NVVmdM8SfJUP(%oAHV^hM"@"!G\3a@$L/V22o(>^>;'^[J<n[iMQ$
%KfdPa\GYk6KYeT/<=4Z'.1V?_JN9A*KT<NQRLI#ciQ/,1.R3)_Rg@R6GT$)(.S-?NKq5_Z8.[KiCs[gO<-cKqAe5<a<)X;n22q9f
%64KMh6DqU6Q(mtG/f<mgP)N&sJZ`tMN41FSLp=WmYg%+3#Dmm9'cp<q,FiQXld[:IjcN24Y:J6O-BE.g#K3k;RVmjL%am@KYERgq
%Q5*\h>E_>#^jW.D7%gW=Kf^CX.M#d9H<iNTB=pGO34Pi#BVC"C+sXf!,-.XH?;:=A8K_a.5#`RJk+&,S(C<o`j:]u.b,uQu2(oIG
%cA+ubT^p0$\M<KeXthi*8jmDh!_FX2U%0$0[mE=]<$&RQot%HGHQ(^o65ph5DP@4!"Eo][PtCe0DK?F])S$BDa,#tN?Y@AGjcN24
%Y:D-9Vfa,H_$uA+a8,n&k/Vr^BIkXU;I_mY)R]m8a+k_'4E*2".Z[bbH6&F4%?1N`@5irPVhN6>Pe^_CPRN9]+=e'q)Rp<Ca,#$q
%V8GlTas37G?<9U@6R0Q_V@t;42NT1W%3,S5=\-g5+F3#[?GhK'Ii&hC^K_(uaZ'_h\hWP!q!Ampq-lQqm,s<*I'K=D0)HfLD4@R'
%,1:V34,+F!MMl0"%DAM-HjFu1^sc!+d5-&uKRc6/<"[[54=HeIKefX$c:D*(A<7,@_Ma";:eL]*DgQ%D-1ZfDqOK#Y1-lh<iWgn.
%"'>Eq6p1!+GP8d@]c5EV8U^@V0c4ZPK=V/7#X[>bqOMkULg]c=r]#OA>Z#`(b-1^&Q8Wd6iYaMdmZ5-NO3q/17CU%qp(uQaU>'$s
%qk$<d48/Q.da'&p=8[;LKW55FNqcRR(!3CK7DhNZN'L?LKg7,";\RloV3)E$5Ui22N]DVESq/;qUY5a)iS?(W:mW:`K2<L?Juijh
%%hgcV]Ng[*"!CfJ\FIcb[H[/t3b`Iq0op:g=ra;R#5F2XFUZ0DE0a[XZac3:#,**MMIC8Y`@KU<7iDTqYDTHF=.$q0?"c"o20_1C
%i&kJ"de@+_5K.Zc5LT92%YSF@L9?%%rd=P@jRV^]9'*!(q(bs*ZUYNuoLnr#T4oSQ0aFOh\FbiL"OA6C+gSUt:!S5^#"M93Agm5K
%\6[]q#Lk;njElh#ZcY$l9K<.hWZYkTp7Z0V\$9[?)&#:T%%4=&;Q'r]'u'qa5ftJ>Z98HYLpKLJB]($>F??38"iTfAiC(^lYQI_G
%O<6KIf*jA_K=",B!k`Q(M0F=a]SRbhdGSin-`/Db+B/s:,%hu#;8n&@jd3tmJK$nbf3g$Lgd<qBM"$d;9Q,k-#&n38VIOTS:sk4=
%UkipuShgYe[892r/#L9MA__tW7m_)^FMgYKW5Xi9:M52F`isK0dGbI5c&./LD.>9Mdf%5Bf!%2[6%n463[T\PQQK<gPPb>ed9E].
%iAq!^HPJH<)@=Jq+;VjI`To_Y7!]8,F^,g'lGfh<\q<TInTKR8V5Og'T;+:#"2XuQZ2b*+^@e1[W3P9ik!Rp1iCb8ki+8'`FSfo0
%/@B$+@ecL?+RISsSc>EK#Ht]%AFnOu(*4Ob?J[c-XAk$8M"WTD#4LB-]:4MPCK[H*HuJoBipB*^e$<qF40e7t64&.fNdWQ'H3L*)
%n!1+.B4Fpc_KfC=60SJp0fmC\pd(d5Eo&lqkdEVD,1n6BOU`-;_W2N58u_G_aiTPb.\K#!e9LkLkKT?d]#H6hW&eN<_n+sJdEq?E
%p,>A7hZMj:ej*<cn64Oq&^+o,8>qVU0Ej9[/CHha?!1eU#fD%>X&oVVU)'0<G`UP%Ff[Q+`p7u#^3u))B):)2@a-UR^q-epL1M4S
%0BUO"/Fcgee8at=;[3KW;+s^j1^>hqCE.(5Xeo!rP[=hb"r7<&k3IWg>9>TVMa%!9#)X/r8RqbYf%Y/E)#TAZUP@Y-I92QZUS!-q
%\^4=sX5W$F^Wu=(g2UYbVK6?=B^qa_X.=20CJ%TL!)jZ:n.`2K[K#N4TJ/f;aa*P*VPkD5!(<"Y<J+>bgJ\"q>)>Ru&a335#"QJ5
%0Z,,%2;m1^k>9@]kq"Yn!/ld:\d9;slO"f"RJaYsPU\1lJs.s2CsQ^e@^[8@#GGES*+e_b!S(/P$<f]=&qUufFHp:^Yr99&@0W$V
%jlI#PMA'"L5_4dWJpF2k5b>3jbc,#B-O6sh13DWt,j[L3'^,6$<(4*?*&kqK4Gb6P49I+Rdqfk-9\UPeQo^3sV1N+-/2!F;ATCMc
%EmC%mScQ#O*$0A>1PDW0T#oF.E5WPnJWi@BBJEo(#!mL9RUBta//ft@D9"Gc:+@Rmd0E_"6m!E"NLR^<Y\4<KZ1P-K*Ab0.b1t(Q
%ROO[SmeF%N#ur4jZ?tYI/c;P1P@;7M(b3`3,_6/PoN&eUD3&\PV?#%aG(CX-L*2_MKgQ\1bE;:&";9p\$^hEUld0VXjEjRW6Xi)D
%s*"]R4d_'p_E^4rQj(UMh9I]_(MEsP6>NS/!hkq@FG<e4:g@TJen]jhTV5Has52\Bm9#Mlf=_RM5P,<aJj9e=rUMA%AACG2nq0YE
%Sd`2(b6GO'K,!(uh`KCmYqu-RPL\,<di.qa8"_Qld<RMAIE,p<$Je#l_m5*e&cb8)psI(?+.*V'7W'Ug[)5anM%_?GU1B&D]80XV
%ZOaa/.?umPCbq@hH!?[<Sd*\5;8kWt94uC;j.Y',%m<!%8JfCqZ,0>YOquCuJT2"HF*Ib13)6+Y7HjK/,aB^u.W<=J)Q=#[R0gd(
%+TDN\QMY+2n"rIT+H4CrLc@7pTE,lhPY'tV>kN:l/2S'o"=&6aCVo57'g&,T-uQku4>M[W"(mi;kN#D#`udsqR<48O'H<r*!M\53
%7V$"\]b7)uL>=8J.!o;BdatD^o&R$RLq'0q0J_qI@-gRMJ?tsh2P]aWfmU*GCkM;GYrgU=HU<Ui/<FBllr]W;;t$'Qm[3l7TcKHa
%'#!>_eqiY\YC?%eoq&'C47(:#r.a?b-)30K)GX1-c)bHl6TamAo#0#pPX.Z.Yp1Irj3(n!2Sf81Vq]JSHE0S-`Ma"ik.(Y&jucA_
%?HjdBFk(<[Vp1?!!`7$_8d@[;U:]+qJ5%T[*c_9\cOA7-^l"Re^R*3Mp?$Sn/R2K!%mR1Gb16)db][MVToA??fmZQ\o/s;F?pRM_
%,3>FIA2Du,LaqdofBr*964qDrp=Gk0c%=fK<Knc`lV-3D"![-i>pB4?CuG-Ift$dequ2%uQ@!.ohmGne>OES[md%47?_-!G^Yf%d
%oPooE=BZ;*RoNk#KNMi_2K"#]5nOVhAXt"/oEj9G@.kSH%<+t8\iR6#QF)B2%l!iopF4ZIdf^ah0q4<ULua'fi]U77Sm<']:d22$
%\W,*.f'/-:_:h!;D+JMS6*(p9LA(fA?icn>*R>*1<HMAq).-n<[OMUjWkW_O`_f=!d$8'ShaH9UPS>qt;GV-t7Wr\#>+qJ>6#$@.
%<YJf)?kb&7N=on<^3MMNe:X[.Ke2NumR5VaSCQ.S0Gm\0O28@a+-8QgbEQn!>$BG#O=i(W*Du@PDW*]C_+o)81t["0FVQ6OPQM"F
%,UH1(/L!fn5F_F`k^RmA)[r-%e.Rl;i5hS-paGm6l<#ifeEe9'6tgH^qm]"EM^c/AMYbsS8Q1S@g*k=s^c]`n!QqQ!gT59'n)l#!
%=[uNS4KPh89%##6H7e4oeT)oe4-q0K])*6=Ge%]n[,`;d=f`?Vg4a98g7fY=\b'$c(6Oo>_V?;LF]CEc-[6kg;jLNEkdNgZ7T,n3
%YCi[$A$BqjJ/Qjo":#>[K)&qKaXC[@WU<OF\B1Wd7FNSU7Lq*iG[BsQqj'hXqX&dmf"W`DlIR[MWC!Yob\O,6!,#?m7GL8-LSEIZ
%$#r02+tF)]6K[Ecd2rXpYi[Wm_9J%n!+Q:-qK*sA6cIg;hb#EIK"@@B&Z+;;1GK8_O]lqYp^fUKlZZ7>Z*?Q9]_VBNbk!'WaBS7`
%fq5GaI/p_Y2VP(%%g'Bm.DA67s.dpGJ,_b4oPa3ur9rM^UA+3Os7H)=+Dq%?n-=-2[^Qg2?O-kp#GLb'mp,j6ke'\5n]qS10F`\d
%jBbPfU;:T&Q>2bW[$cRNH+=UUYT/LR32$km_$W):;%<,/XCV"\V'#en-NZ4:JQ;3O-[7/__S@+0g?l)4k8D"45l^s[='Q%#B%]Wt
%OVXM^_aFfU_G,V4eLXWWi0<6V#>$j3L-qCj6IF.nck_3QG*-tNkOBlfd+p=ne6N0(!)`_PCX#9=)cY+;#^dGVee,W38f4C:6t_]1
%n;fG@V5Sr_k3^a^-)1EWF`.RpSd0JQ*'uXb&n;fTnqTFK_q^]p3b?2nCHA1?20LGMrOgGfoHI5,/uEZWp:\erRCE2_gVZldANlG]
%&Z(9&A[>MF74:D2*8lKWQH=X'14cgYFLt3Zm"D6+D*Ue(HC&6.hG,qp.?eJ_I:$7NSQ/YlZDiOO]Yrf<bTbM?R=%/;AR-jl`ui"5
%:9TW07QPYLGQ_\nJcpf_XKGZ[BtRA^)QYSS9;R`n%!d[q5`p.lK;Vn\Ue`pI1C.ce"Rg5H\<_#Npdu8WE''&gE/_!mZ=<Q3*Zn/b
%ph<U!!4^:_[%P/8.PrYNp'WAB(KBUZZA!?&Zu]5A$"^_U=^klsIcES#!l0&@f2?ih!g!"_2f;?#1:qo!qkXn39Isf^=iK'@6=^_V
%j]IUdN@*]cfSME^N,V3']TZu)_U-IY74F&s7SS'6LS-+2=&RsR8a&TW2-#=p;(HVI'1m05[1t_]7A;OkA%IBM\:e"n`]ud/(&'D$
%!044h"(-jaLS_`Q$0VLir/^29C&e5;09;T"%ktnqA#dTMp;+rX?;iR<UIpI8;e0jjdRVb5*173Wfp`4<dHj0]gg>0dnVkE(c'7=T
%m>ZSK5"fI'Ut[.VHDJ`<)[X/?r3a"dK`N#e)I?_\$`1$2$UBgMC+A,(So=C2f=iVV3;q4#b:/N6fn*s@^>)9<"@QZhm[O+`,Bc"4
%e*ptF`j)="(Yd!3:/o#3QYo2+TmEQ5DUJa3i%"KOI?WOFkYj_&^:QT\Xq-hr)_&S:#\UoePt"1UF%!a([!.3#c!&1:qBY"f&j>PW
%,,rL0jT,Q(jge$nAf`&I7,FBqbPln&RN/RLor[M>Y>dM90*4T9"hE9%:Y7;uUbp_r7%#R@dskO*m.b222q?8.7%sJsF0U.S+of1]
%Yfh'p"1RlpmA80d&s3f)DQ]H1<5bo5JRIUKdn+:e<>rn,AV"5smW!FtK]1"m"?n<i)fYqQb$<>^&b1eJ4ogSlm/ALc#@c2W+Fd3J
%8D@4EWZ)IV+0M>;<IMg8$L7`'e8o'2p)QPT'LJbJQN9tC;j4cuYY>]![fr];KWG`bMK/Y%8EP1mIs]l5V[IJ6B-3W#fb`#@5b^?[
%AUCijm59_A*kO9J$9?jPV(.%>on"p5#U2Ct;@1Y<T0NkoGaMcH;dPn!&CnbH4FW<aOer<_%.HS\=r@;p/%%u@f4cCIX;r\h6PVTA
%9AFFn)Ca4+*6GIZ0G#)\>#N;dHHH./.j./(^e#dCW&rE<f>sHh7Y\#8Qb`Vm]<0;l)=J[S#Z[;r,M=<h0*5N]Rfq.C5O4"T1PjAO
%hKU`l9=.)5&kF(W@UNbVL!Y4(36(4EV2#03J?184H;/ABeW:3;M+41(RnX%cC7\a@cP/q]huRaTHt6>9(#d*b[@5ZSh2gj]G:K^Z
%<fp&+_`I$b"^]8[b+!LXY.:gbX#S%]Gb,d=KoJK-+S's=e%CsKpV)e;>A3Ms<ZiLJ?&V-U_H8!oHhC,*W!I-S.lOt0LEWdfa4'R"
%KN\\5U^/[(KO3`M6n#92#;&Vbk,6u(`,_LIE-N0P7d0A`q7j1>8=1_?C^ib?_]d9J*lI.&;X;.(R0qQbCcq]5BB)ji.g<JO0hA^b
%gP7/UqT?d54hi=r1K,&NMcgL$qILM728mW8&J$_5'5o8'_eD.MOI>R)&5/qub9lR!M\\O>NM1^89s`Gf13iWNLp4[VPs^"Uo>,r&
%7$7&Bf,^UGZhWo:[G`=Q_YLcDPO>1:]8$[,4W8Q/G]`=tgKeI,6LZ&I*/s%K!q5ZiCT-&"_<rHQP=,<UfY*,8M0-oPnFOc56c)C;
%%)6eM`O=2c>Y<^W*+pB\(s0+5?$chW\4SP]RB4Ki8L'>-[47(qU"DWPUdQ4iIq`8s[YaKXGS<F"T8Q"6-Mo9%@&A-aU=E^jj[3e*
%"*4UL*Nbl=+/'o:aE0`&e#YEWFJ^L=Y%21J$gjR-^pZ[G"fcllG#tIhS1QomhHSQ`hB"f"Y+&Sqpsm>+59IF1VWJ(DK^DkeW03@/
%49rqTl1I<Vr;6cq;4hEr+Y%@Mi9+Wp8IW8l(]d&:2CD<0<37u(=lHsu/@WETJ:e]]5UhU(3hSre^0$N,oJJl2jseAs=7Z01opeq7
%-EIVf^VOe<X7<O_GJFi2$G,$cgOlGmXkWYrh'q(HSl9B-/?e@+FhL=_hnH]j*64h*a+J"`Nn<+]pFEn)TOQXCps.Vac[A"@ps8j6
%Gm,3Yk"09g<#ul")bQ,NUlehuI>=Vam+'R?XZfsW8=[e)"l<P'a9Y[saX_d%#eN6_Sb[Nd.9bWjDjM03-*"T?lc:7^bPp<bK\mg[
%4<H\sEPCkT^L,sN0uGEi>GpcJf(ms>5A9B8b](e@HgAIK"5i+YT)Hbg[nkE)OIN:-M;'%n9&\I/5rJ8MN3UK!Ak"QFq>61m&QX(]
%M`K?oRXpVtAUiG`g%U[<)nfU%Fe%p;ND>Z3I64uqgM+(`I.6@;q7?IKIYHM_N]+DD^@N]JaE(_IG5C/)+7e,96aSe!Cm39e63,kY
%q(@dcpM>1-S.n0nh@GbjC_%jkIc]<jYM2J"/j#l%fV^+`I%<M)'HPqEM7Cf2"4%45DOdoBn*a>fc(ZY-m2"8qSLaJtkJ"ZI[OZa0
%B2Rq!c;ueeLcmKaZUtj1D/[hB"pH]@jD"^iL8n%rBciG]p*)b#90t8@PfSQUo#mpQm7D4-K?S,qX7n+AOqSulAU>C="S9HcY?q_W
%)W@4\AtUtX+7W\6lFe9l/Gpgs`_pI+G0`DN_r![Cs7p5#f^5VMKOfCT4]#kSpt`BTfRfZtLEn`i7C\W>]lsq8pnj;JHD&'-Pl'd5
%J=`Ia]4MJEVXK9.m_,6:TJDAi?4Ra-/X>h:/`;`3l1MD.BsEo752O!)#HF!lMV13")PYnkJ$?j[@CO"_A>e1lQ/94+5F=Of3VCqH
%^`+!)?!jK-H//))IoGO1]"1OA^%\kYbaq]0j5Q\fM74\EF;R4>1BZ1Y\a5XsU*'S%OHE)J7/cF.Qa'VR@f6#%^UqhH7DL]SOD9Br
%_g\s:e0)1,O]3ML#b2Ufru.\:ku1#I&K6W27p$qDN`[eD*?C]f,Te0sXU*rOTY_4XIJhTT*Uj+aG<d%[F,D]1\\TL>,`C`8m,`<C
%62li0!n>`IoQ'dO8kp,c0lQu5ACcSXLeq`08!1_dVd$in[\co`*&2?Nokjif%Z[].dXV6)\H</gLB_%lW6g2OgWPQjAaJC("^n(R
%5mAeI)"2-ZC5RJPLf$Zqa`!ur'WIppm;8b3IFU,GQF&-?]tFm3@-#%<T3WW_AoHT&i7YO2])1?5NG9Beo[b.f)_LIEa*sCWcAO'"
%Js$n"d49-'V#Eupcjp?-N\8Z/WuZ@SEMUU2K+tANMUs8.Ja?Ub7@lZm$gWrt%g&C[#t6m]GD^;3fI:[s0&L!e5uPbZIdSp,n[h9n
%cNheA*O!*@moR$>^rfm0GOD_s4SJI8Z.G8\?+1-;64nqbCFt14^/P(kP&G9K@O"XEMN%t-"fMXmDA9'J"fDZm,a^DTc2Cp$doJFb
%#;Ba*n2>E.BTeAXU=:ZF2B>sGGpL1>C1E1ZAs%r>,NM&S"UGcp.*\EjVe4It4cF"$#"C'R[7s_q^r\UW[+Al."9s`=;AL/:lR^ZE
%q:gJl":Z'G$CF5mBhT.9c]+msd?6\N8kmZ+ka\mS[qA+MTK:=E,HdO(D9@DeG7Hn/eQRLj",N!c1+Q&elR7Z`1^XLoR!erH3B-`T
%A>>olim2ElL+\"c%RbCe]u#f\:lC6`M[&I$ZD0]7%-f7rD\PVLE)pch,4Tl0QY+3t+_BI>:/1k3*^mlMJP3rlCOMO3-#@W-+,g.W
%OKb3j2'=eMe&`Nk:pJ0'1fg[eN2<NQlE'6?!R*88c3u1HP^F02,Y1F!"ZHb;d53hK9^CUIOlDMSd+NBs1"),UlQ,[S,a1)D0h/$7
%;ceZPMn4iG%^1bhqKRY8WjBKZi&WG6mboOi#==kZH)3$%bhn#-fD=7^dY0Ci.h)O,+U0n\*$\U!\uju=&J@O9O<E(F)[)ZYIVJg(
%oueV4>(2(![EJW&)dEh,3CS*3A^(q+p&<E:[?7-;g>GF#;`T2eo^%cK<UEOb"_E)sk[(W_:e5Q:6):=\lm0Xq-"2FgR9\JBjXDIO
%/#LgTC:oN%IDW"Ci'fd-rp6,]"*8`O"kq\KFaq'i7^TmT,7Get51]fDHN8"@%%AKgG_2;I^jr)_K0T#1oGK>ugfoWmQp=;Z-/!(A
%`%.,QU%9Xah&dg^:YK!nf"!ar<sF&.Xcas\->h+qk^Yb%FnC"F'/>#hr8D1#i"ouI#i:!WqX"<.##ge'"B+<LX-J+;VFRtLJC);0
%Pe^i38kr2kE>]C")k.k4i&a6Te]NRJ1;4Cu3eKt=rrAF1D*#CI"6#R]1dCY&&lBXh:P(rK"5CVt<sW/e`"$FOS\(ia%e14hV.g8F
%IPCnR=^6N_JMRZ<YmoJfBW<2o*f*Ei*TOtGHb.\:B8Mq\#sh=0d\pd./MO/pfP0R!jX2A>(ke]43=KTdb+\"7NWN3!I/#+o\e?]]
%#;DV?:/XqnU+A57m1Qc:(&\n6j1sOVnP%o%/-O]>EK$]?4p=$4,#0e@gVlq1/NQPVjg9J.<VBo"r0MJF(%BGnM),dcAkGokR^\Tn
%CVf1uUO$^BZQE*=DO+kN`g)#d$^.D-)FB$4'7iSEYYEtjaB@OA,/Y5b8_/+Di*e&ZYAF?@MD6`op]V_pO,?qPQd4['SY18im#WNM
%2ZWbEI&`Jb8k1u"ad>J1ke'cE#dh.T'3I+F<lO+n_+!1P9.t`0&sBYU:F<G1=0V]=Z/A?Q\J6t](d?_=BEO%4-eQ0CLgGsbD-<2c
%.^GS=B2+R>BUfU-$J<">h'V^]ntb$:C>`Cd^:b^jrC+L!7DJah^\gO8r'eBu/*N=F:1too;_d)18+1+?:`jF4'Y:Q1r1:gL[M::U
%\>jiHYjdAFK]b(G9aT7dAo>E)nc35P#":<d+s7`X5rUnQ51QJ\"OFl&9%6J8,2s=!.A.?MXMesnq3d<8Qq:01\N&ko&.WTRknQm2
%$3la)iMt5<ZuT&f3u<"-HnL#)dMlEu29Y4:.gTUN+FGf<j<2>/1-r!?Qg.!K7MqNu)%"maJV?nX=bbiAG8FbW4NfFifRdA$343Mo
%#3Rhn?lWF.#CH\Plem@9TEoid`@=ogXW?sgiJ5)sq2>OdPP`^gd^U$d=1.&8gN<;eM2`qDSEDQ'cbeTMBB3_HcT1NCK:5c#9s6*8
%*`JVeQ^nU8\%r<e`,DcQdq6n6Y4W+>'9M;6[p<gq-''8W'h<RlekqH(jU\Umk1q1\f:b>r=29"\V#lL<mb%JU_D>LaRk9QR630(B
%TuP)'eH,(+')DAh7mYSj*@6+IV6$JI5pCoN$^ub"1ri5YMitFdcYfPpTQ;OekuKY3CJbUV>p+;hq&IE8PI'[P1;`>u.l7TP!B.D7
%'%CXn'\WXh@Pd:Gdt<7h8KD,`%kFVk+/[/SBRIMH(S*),Y3;QRBdS_?jsX^`0Gj%O$2csg?EZmESZV^EhlmC$e^e4.#4H>lb*(NK
%9/[Qp#H%/`lXjj&YanVNLf\bM22-Yd`[1:)PdZ4_9eID0,9?V\O@]a69roINE,Omm&RAp*6$(C9hM(?9V(PgjLJSkO=Pe#j%CJ3.
%EBch0<$_ft,_Kn78#bB'_3_`?,;XA>n:8JXCU\qgk9apQ_i3>9MZQks;aB@Q)nYXS!Dcm_<m7pdSmVkg$k[Cf.N_r1IM>Db_[br/
%KZ@S6:ibJ;3m>m%%Nd\WM&L>Ab$F(\\Ph=;`lrcJkoW?;>t*S^Z$q%HP<MPdKia<bN/qb<jn@KF/Ypl]Qd:qn4^MQ)k,J="Dc8Fi
%I&"sLUQq[?L7ns*p]euCWT<a.`HCp5X6(4"bqH5gT<50V0';gU#^4T1Unc46&ei.bpm23;]WgD2F[=h3o@D0'>m7)Pi`RVd%\70u
%:t;=--<Q-db?thL+AKAKSU1\G6bU@4(^7T1W#cNV5fr+WU$&@;!5u^B7t,8pBg2Si`"GJ&HDR/;Pf>1,aIb(Hp9](glmgq"S2K:A
%,iVAu!Q.[LI$9utSV.Lo$&5t]++R2KD9WXq.=S"5#[Z<.T#mEX\I!A3PHY:cMB4NTb[>.miZ8+73hoJ[qe6GL89$'N,/hq40ZkCP
%;Fbb$AO2bW,@g-cm-Z9NgJ&%R!7r;^X<nc;J1Lb9M;Ee1T@N)fm(cUcClkV/P1C=d!-D]N22=gEm'@@Ma50+3MUmK]J*R)"nR_ts
%.Wto@!P<dV0,$l?3]O]9]ZhV]K',Bd)8[C!6n4P\qodrJIo:XG*Jn"JX1d2W=$,6-%V6!*otgZYfkn7f)eTYbeY\;O8ll<mRmUq:
%]JIE5Squ\l74:#bGC]@*P=@43CSn4.-u4.FCP(TA,)J1`=<BYB;/R7B-YYaO]a5>oaeCpS&SdS6UFLQ^=-]6bf:e`H'pX>KjF^Am
%pIS9>+fr`7i)?\!m?P!47hFpt@[XHtEfR(#65j0G2Gum/AuRXIO%l;OBkq8nmA"VkYr%m!;CB!,==Yg[<6NJlYBbMOShVV1Q6m*k
%m6S?[&e!p+$+ZG6V;S.11MC=SO$/2JY,dN?<B8*X0n&laA'.pU,EQ[<(=b"9[?2]\7A)N:+HY".\`J6BGqhtmNuJm8,ASG*bo1`4
%W#gHDU3ZoBGSI.Qk9%A(CuG4F_Z?O$Vk?[TXKQY8akR:MUobkTHZi>+U(YBEJjj`Q'5V;#cg>l&bGT16>pB1^'eN6rApY*55qJ(G
%^?u^&h`[f+"4,R>h72qBj&sW;qcC9sWgGP-W\)6X6OKDu1&MUV4m]MEBQ)EJSLWF#]aiT0&UE'D]0uEGc<0?WkC]_XQWOdcGhj_#
%^3`J5#+i"[\oHWba,_!)3S)qLrhr7e<TnLp</GfX=MS(;n<>i,q:"l";#qa+btYS$ad\OO3uaLGD<FeX5'sWuH?!NcHk6Vo2sTqA
%;mLoGPTJ(2hKF)%^:4!&3ubR\3JJQ!gE1JO=-P#[#@XsIM=su@;G]FuMR:'72E:iImk,1W!u!`DrZIANM:+OoGDc+_T$jBbkNe.G
%h"UR?/ii4MAi8#bUZJa[_cMa(:*+Yd0q`.S19bg*;8?qrmY*:@N`3e-V,K;O-Dd'LY-?qtR==CG1R^tT&[BsKRg24c)c`5F]knF"
%T09$OH0<qB5$[aQNMV?eD>.l_N]ljZ$E%0E8\-CXAiA%#(5EUc<*@N>Hl[,ZjE5:@=s>T$l0cPY$GI\Jf>m2PdEQ'hdac/)F[nAC
%qYNXGQJ!<i:`ae@Uj?6iGq4_sUi2fZBL0ofbg%#q81Mr.8?:QCX?o0pL%VuPO]b'\D./Z)+mcJmVk2`l9rt2ils:kg3S81sCf:$_
%jM3i`[u&DVT#.7JkM)"l>kIad!f^<iWd!/.@<X<[V%qJ"OGt-/.$U$@d68==#YiIUAfX+m<_*[3%rRA1,)uilCetpQ;T8g6<'5Zd
%.GDi%'X$ShD`^""dG'^8\0&90i2'"eQKQh\=iI-FSeY=P;.1L8?DQ>eVTH(#cj;RSg0lP,64]t*F,AQ*'84cNXcd;o34`sSXokmE
%#?LM',&U@V-0BX+_\K4;C4T.nQ+5pPTO"i!nT`a!Ve&d*p<UIg?q/Xs6@?ppmNlk;lB,I''`UlRnZA9HA`[6?:&8aDE%pCqh'gMV
%Wcph_m`c1j$jWjG,$,ZmBsL"`D2d</X"%VjX8sF5;[E4W&.$Ci=-bQ@2U>.<N`';cV7C%uDQsn":NIYpKYgA+_S((H[N6(>c3EMP
%Yq@q3MD(45e9!oIcc9MW_JP)J7QE-5WjZC4!@n7eeHZYFA>JH6N99Cp6c`cO]u`NCa^W([>lYR1Br.3uB^GF!GMLP(P6YsH38!H@
%b"?@NdH8MlU/WDIkI6Kc!LmIkODP"+=[>lMGd#WjmQ12lkP:n-YF*a>WK3i8e+3Ab[pE:I@=-1lfc5EJ(*`ts(a4biF[T&`C)n,O
%YNJu9^5fe7bBp]V31Vg1jT>:po\tlPq#p/Un8pq@bQ,MoVX>KlV\a6R]bF[Ig'eVY>5_,86F@_;#-CJulmth*?PET.."tuu%-%A9
%noj)T"W;(]<-%h3)k1dN3N&_["tt_nnbWh+_L<U6A'LbtKGhoH5Z2HsYl'*:Q6LbkdH)<;#(&V6!eqscq0ULY<-T&P%F5@UnpO6d
%$r7%)mO$aW"4ejO:NLC\Vi_4D6`de(`@BFT.N#;[>PL*IKhSZfOqi>7*kYrk0Hj'_j70'FU:5^a*oYS`ls"H*j1>mXJW'Lk/lL,3
%)hQ$q.[']058p:'^.73#kD$1N[*J,\QHmHp>8WnrJbtHA:ATXT;p7Q'[EhYEKVEfq$NP$=RpYP$%!'F"S>]<2U4dr._lH5hQId&m
%GEErrK"i+>;!,'8G:[G_f?SLnV:>'A:RCHs3cu^@3bXtW<(b)?8Zt#PCuXM(X#rg4b>MSep>sOg^!VDSJ[lc=q]Npc%Fqn-^`Gqs
%,8IL%fGue+Tsik=<ePktK88C3Rt>#Z.^IMKB!fO';\56$V/4SX?(-ni*#*$Fhf(1'hsco^9X&M0Y6[&CXI0X98<)QlQW*kjE2iQm
%<$dNpXA9qA.e-11X08>u'oqUB`2c%:/kRlGmL.11WX;b;4Rk)Za]G1].XEe!<hV)Hp-T#7EFFrh&gRfPa-jBn'\3Iq6:!&9fbdG[
%g^D:L:ca=FIW=[I<e_]R*'pLc_,ttW=8`iU'8sY-`(E^*:tmA%\@/A?3SEM)=1YbJQC0*`1k(mE3p(@30L1@I%c<iiVak1`#pTnR
%8s]UZV%X<IId9B8^o">8%R-Ynn%bruH?^lAk/;n(3r"Bm2N$uke6L$B?o.0&Ks1ag.J7HjpJYcS)kZnCA2anq<dJtE$'\r//'<0&
%(1aVC^cX/u_J!\*)N(hL3ZU_DM'F4ZTX(Gl$^`'(j%/M_TZneuF"."e(4^'gW/8<A7VTP%Q@7Q)H6)!NMYNlc79#Cq8p_UP3d']C
%0<(ed,-FU6_HL<edPD[)HX0I8WBY?MQJe9!\3XgY^>)6[9Ft226E!9`>ftX$DhV%R@sA%VEL);D5Z@Fbq0AGTd53"iR'i6;56iks
%T//VX]b7;^dij$Z>p+*jQBW9hE,t7$qYA]R^h[85]H;n]CR\86S(WM'q3^;ElHZY<2nIc<),gN_EfBb03N()F_V-,Ac#+3*CU=*"
%hWS,C(,3mE`KI0`CC:nBatFH\2sFU5L.M4[%=T/!TE60.#u&6'aoRWb`$l-S93]al!j"4`.k`Mtof&fT*CZ(kF2URV1Od,lVS'5Z
%>"M#W/5BRlaKEp&2&[AAI+sflYf">9*)]umG01NaiXnO^FqI&^Y`.qX[o*d?8A_i%_QnHr,/iF^nP`hT&t*r_db0:O`3bdJ4[TOj
%[=]P+,NpW9n\@Q3->GE%Fqi9/`K3rDO,*'F;RMV[lF5$[@e^O%9dHaq'I'S1VW72c5JYig]JJqG3i94cUt9L]ZQJ'?/YO'hKI.Xp
%jL82rJOk3,C&@:mL0E7TLuf]h'(/L,/*Tl`MQdTk!A$EQ/5@$FGRt/e=:04#.5S-"A1I`-\@S[mF$cq!Fm7R2R^B.C5aX5CklJ6S
%K#j_CAiM7bO]mH!@n?cnJojd\1Q6-diX?'J0=<OA,iPFV7JJLO^hnS(-"f0RHaies-PPVjNGX-bRS7PQ;ktiqn_M1^4RR)kjG2@h
%j<W&L3SUDb<>?md9p0&\e(R=%0Isg^D)E3idjp7^_b`N8$1ah>R2o0>RLF9`<?s!.B<d;TD\mi2D,Tl%\&fQM8jKBJ&:p5^K1p=]
%6hDpe0EJ)t#6AY[hEBb>9"(oE_P;7!Ljj.*_gQ1,!6`rhLhj\g`>+2nO].XbnAM4CZWnH]BHN'uR_l].7>](H4p3K`(1gaR0lE%<
%C$Vl#KX[J$]BT8C>tm@eF>Wp0K--/Rm%+N]fD;c</b\3!?*p41!&(9=es3j9p+b-DGuB&Gicb)J&^jI$K+\7P[^No9ZD=\\q_N:h
%^iT9O@CdQAUAuh">BL3i>SMT1'/['LWBrNL"RY"E69GrIr&2L_Idp6^Pobh?E-IajpShD^^HDjlGdUA1Q:o,[[$_&*mtK&H/KAVB
%pUiXB&U3Y;&F0\lYV^70$hKm"PEqJ]7/6Auh[@6!X\4X;V*c\i:H)0">]a^K\4mf\W)L,31jPoB+/3C^D%6b3*eZ%oY(ZChVeCLF
%)W*":2SQqgW[GU$ZLli'=njWS_,!_rHoY6r>oio7BR4=_S%r\W8L/DU9j"'iYhrE_cbJ?o]H9tFD&?(5qCTjbKTu5_h`'SS"g?'(
%2Au"8"I,W*a`.@rOJt+V<62up%c`:V.`B4'.L;-fm.IIX6O!Q@E]iA/ICbObT;r0?pE+=`Q>UX93Sh!5nUcJff>_#rp3dL&V'j$J
%)]$s[lW[Hi:EK[(WaU@_%.u84m,.RIHglpl0Y]*!<+i`37?16O<:[(4js``!=87."hb$$R%URY\Qp(m!Ql/7='DQ]FOo$1dL>dDK
%h;_8!k3_>%/!"V=&oYtb<G0&*"#cTn(Z&'$mgiNd,Q<9Ee&-]srN-IeVa"Vk8c^C7V];rZ^p>s/_Csr>r>R7]s#l,7Z^.IIbnB:`
%3M<[E[g@n"%*74lj1lQ,)l"l;PJ[C)66P\bdZMU$hjae`Yj*d1:^B>eFG>8Y;o=abodHFgrN#E@1TR#5=r+)gLa3&R/n]E4"-H&l
%)\W>^&8.pjl*nad7,.!g"$9ZS6Br?&3&.u`c/tr**d&mtD7Ra'*D@hsVscR:?8E$VpE<pPi*oZ7pUu//j>:<KU8B`VdYIVP*uL_?
%$63<j,4>PeFYK!&9NO-X+rOVln"BS3>p7dm]Ia7bq3$MjCir0g8I'qe+m)de%nKn.Yns5.d?b'oJ%DCj&G?I*6L"W*KLu3\n"LRC
%51'Pm/X&juBH@Kt+;+=A[temKR6aA[o.oL;)O\iP=9Jd0foL*FplCHR.#oUZ$5;IXFWQ7^2lTMd63MlO-j?iEfrD:5?kSXWjV6+P
%XNPm85+"UJF7ZtA[(a`@T$esmp\)1UA;pJf&j/6>99&Ou[Vi2`h=pR;lf/eBX:k9`"Tgu1#!g/j@MjmXJor_1V::[qW/3n(Md[H0
%2aAH6dYC%b-.bJl/]IbDEA?^-=F1J.5p$FeY2"lGV<`RF<jUJFG=$\m"]P:LOsc.&)+4os1`cq^J9:LB,n?6)fsU)OcJ:qD5!,T3
%O[/csp,XOsif$+:Mk,e_ma3%@C*9=^1QF)8a2r:?KQ'kuRr`15DVBFCO59_[a'Teo!__0&kgn&K$#s]pn&c"iP>i'JCFCe0lfM:P
%Amqcl+a4$_?'F=TFd&O$WEfj.[r-*iT6G6K75hddIY/aWnC10R:;ScOC:$?g(G(<PTM"%ICBkUbcqS\%k4RJrH;XU#Q_Fhd.ZW.M
%FU!59a4O8-+utH>,@^`W8A)8H_gbRH]2A4ljL%ta:a1[pn,Qrm83QS;EED\mIo]uA/i.9d`T8,jAYqTJmXoQj"r\pmM2gN;,1Zb8
%.%T\&T4acJ!Ef7t21T;d<6!C$X`3FegjGD.3c"E]&<Z_4]H/.n:mqTiBE3O]gf.pPH'T46E_LqK&[_:m1SL,OD#6Lp#oRC*(dTk8
%E/Ilf)A(Q21UZl6.tI\=?na^c\/*-(.f*gJrT=P5ZI5eWK]Wb>"9BO\7S:n#E^_BX#&N+JD%!V;,,6;,^]P-\DIB2iBVt%qBdP5k
%W[:sQi?cCf/:-raQuF_-K>J9)9_c^*\RQC-gA(BopqZg[?+l:a<0_Td96U`n$Bu3g^@uqSJ-Z9`@i,#5`%J4#CCI2A^V>0bqj#D\
%jJgF7L@"o.^>PDLmb!X"^c&XcW"k&0i?ii4e2B>)\lC8AlpH>n'3'B>:j@aFW/miAdpur\k93c7.LPQO77A=G-Y)IJVpYfs%N%H]
%7OTPcKToU"L9)Z?/bj%6Y80pqFC6"Q,j"%fU<G'<1J#WR88MiB@0RX640]G5FbmVqHKK.ZS5lZGaF<gskj4E<2MD#o43&iISN\4t
%,T;nE(Q4miALd)=ltJ\HL#.')A-ZQ$[j*sUZpk"8F"egL6E[gGbs35sV.>IA*Jg7G[;aX6qq51TdRZqAXkCBWUWpNI(2ZMJ<,$+u
%Q<NXi<EVI$UP*beL1_;gatk.#<IW<q0*8K_SuObJGcQpfku#4?Q03Ar$9)[Tk%+'D\`dQI5\WcRK[>@57&>$g@<&r6qZ<S<lrsrP
%.A&'3U@aBL73EBa+M&Q][`Z@-^p;#e-drb%eqRQu(gK/j*=%/n'hFQ5Nu7pI8J=@F'oj#&f_X\H72pkQAWaF)+;%&tAoDLX"stHu
%X0=-&c7TYOFU'-G0-*iR-tEZ&BB!)e?)XSfUV$-0Zp6&AcQRiZj:A6>Dl2u,N,8&r:%gsDZ8'n$!$/(OQpW(5YTqBKNGE!U:Nls]
%XR?E/jc#Yq#V7?;c:CP1d6Kl0*uauj(R3Z]fRd/H@.'$Jip=B!#q!:@a0P2%**K7iD1mUKSP*1YB(OHY,.9'KASm*)(pOn]C$N9F
%Gp4RImV;$,pQ2k%Eda`5i_@etV61+A6AqU'5_i/.&ip75+bk>Y,`tq`-kZ8kc,`\Idt"fGUqFZf_6bHc1pDBN/I+-?T;$rX,,WXK
%laJVE-Yt%Q>E##/&eY/h8Ifc,!,AVBaFK=I25R!DlI\.OiA-5"Do^V"EZ)fC3/S8NjU).K4[i^I+J?^>H-YY<5W4t$l(`3^TS\:(
%!:5U8k&@<J>QZjTlYk,^HLjjP2eNL:DTWi+c[g8gi1K6"=Xf>9Md\2kP.%3;B_.%j.]&U>)6>9K","9ba_3["1K`ZV1XU1=6-9!(
%os7<eHN5g.^j`(4o9LQAkocrMi5q1im0N_Y0>I;OLKgk=O4?sB8`j,-()6_[-3sHEYWooIb;A`VMDAu5[*Q6bj"A3]FX;$G;@o/3
%EnjuF!Y:@\m_D3:J2M)Ra+MH$T=s]s4%7nJ2sG)8p:Ae6MuMR@&!)4rZ%o#5BC[3?dh10Js4Ijh8bTt[V02i\JtC;tT`QfRi7hn2
%LhK*dUR,8TiS,UijnZJdZk(/*p%E6@4+W33^&;J^LX0?iJDn14P64[SEpZ/`.8j`#)V&OHGgga(1mVII@0+^f?+FHokd,_BFMC]7
%UQ3cm`>^"i"1UGr;$Dr-<"VE&7g'Fa)oNRlP]]fTp*]KV(JU4DKmsZO!Erbp3qso\7<IVW$dd32V<%@iImJdS>XiB;]t$6<;49EP
%4m9@]i>KeuH5'[*G@+Wkg$A*eL^K#!qF=N%Q5p[`4gnj)'tlt#-'<C5<S^5VKeKZjK8(Eur@_'N9(Wm_c2f0IC38jIR=\(ohiSsZ
%G]l6@RHr?H"1qR"b5ii[8u'HcLb"e`QTsf:M0tW]=MU)1o,?.ofGVLo9IAb;6WP4.8387F.PnDY*E4eliOe_t>kI`*o\nL>Hc)&Y
%]5YHZp1O!TJr4`IO4AY`*o&pjJ3ojRGC+;F\hL:f`I:!0mVa.C8Yqdmpo1dA2eksF3@"96BsnGhs'f&UBH*GI$6b4D:)0#4s'ca4
%Xq%GoV>kQ\bm13W8E6^#ndX85G#p1SONW(gfhZH>j.+OF8]e4$5;-F-K<:b/.FLu9ZAVb!5\Y72_j%QZ$KQ>m0l(AI<&U6qjO-4[
%cQXd5.D.kN^EputB@1;Bnki<>7(/q;\V%dJ:+BDQa\B,O%+#G+3k?Cum<oPNe4(*n*F9`=/n?2&@g3,VJul5h2T5MgeE&#q0c_I3
%B,UrPKhEa:jqdI?D(+MjEPR2YS+19kUY2hkVA*,t@LrlL,hGX>/KfEBEE6;qA"$fR%7TpOQ-AsINtJZB7,aT1bHZ]X5BRJ<([+m_
%"QtXs"'BXUr,%OFfq`Sf<71s@LEfCX#8&#BncuC#;<?mhWfG%$^DCb0pDAH]18I6$!Z=VO:*C-gclC-a':eimdQis_^^Op#pc.d0
%)u+JBl:ZI,[68?u%hI,#nHXNt]2Pe?PbG+0R4.60Ts-9f=*Tg$4-fR0.,)tLgT2Y<T+)c,Qr4ST)/'S$neeIq\MscCh$R=4b,A<j
%.MsRdq`U*t*%I/aljd?Gk@2=cFp+O"G#^N&3l(o%1!ELr`D7\.NQ\CaQofI7,O:Sa+s^@l:1P7pb5jW"IH&l#EOl_0X2.j]%Y<"%
%XKk<f7(_F'qcHg<j%8lh[<N6mH%mu`F:?MA=V>i!RMOk1lCAOMYc7pJCd+l<o3$eS0nQ6B6L3Pr-Ug_JXp2T@eBNT3<DilYs4'Vc
%di$Y45S(RKC;`:/)hsoIF%7[glqVW1Ci"I0Pt8[q!$8VsP+q'Ul%:&r.B2AYhkg#o\>pN_O"`$;2T7TqQ/<L$o5SdjU1YKi9(P4g
%m*MJ0FSg==-M$Uh?8_YNg)k^qnOn:Y$+BKLXjdsPCA9b,N`NmZTh<mM-q;pd*&)M]]l"Y^G98]J@VfeXp'#@\f6$Xu:.)soP#KhQ
%#H7pt\O%@Z,i:^P=Zg?CU.3\#c*@Ut'--qomq:l<9pLm826nO#_]:\pe)bfpPL*dAX:\g6b/`\F5XAtMk<Y'GZ:#job5-o;gjb=t
%0shg70S^'V'(aOX,?"V6,Z'o"XE.PsEh>\N!j4K+"6ZZBoH7Q\BU;;O%eWW4"E/p;Zg(6VT2<W,:!=!Xa<pHF?d.E6mu4FDJSi*6
%j1AEh!&)NH,3P2`W&9tgjIq8HQ#1#J2Y8,"S1%"6YqZ*5=^hQYZ#0`W[DYME_UTe,P\6X80<oO^^pb(cn"\=gBrW)WeccsbJTO;8
%q-D;[L&V'/FnW<@l:<q3n4l<fBlp(;`t=_.4LL%.0&^2;Pn2ZA3tJ:MD>.\ooBf+M<TIk@*U7OY@sWTI8Y3o_kfl2\gUaiMG2M&X
%d'U-57`pe\K]aI?&c1ZHmSI=&a6P+gF$RQ8f>O!XchYtd,d8V(]\7(T&-k4O,@RJY)%^cM1tjp7"dt[44)N\6Y4/5.7,]Fm76+_!
%MJdUk.;eVuDQeZt&\I0&X@o-r7ZG="iF?N8euS4bqA&EROGkC:mQ5Vq]L*V;KY'oin!CB&Q4)c/X2q5LfQ5^c(=%f_@+=?-LfITr
%RoeYbm1,%Q]"A/+GY'6l&fR8IFsQQ:E&U0f5)18'UeEG+eJM-Kmck's_,.2%Ud/*-hqb:5G<X(db`'%PSs**[\+l1/^6gU__a5C`
%]Yq#8c/E_.ISV'E8ONnriK7bB'a"K6Vg%DH+f*>fWUh6%>c2$l.5-N:L7Ol=&aY496,Q8i%dDFpNUS*BL?3,r_52,NrR[LJ"0DoP
%%\Jur1P_?'^7<\DWr$_>49!`T419pF&.-+I7XimeO[m!CY+curSWhm[jie[%h=fc#gHoWkBA(JY=n_j[/>LRcme/(,<dcH#s6cus
%(g%`upP"66;lipPM;4ZEEP"f19!`8LL8d4F7(*0g`q#/@U-oEjr*R6OR%<-V/k.bRQIQ[Y#lt;JFT=h*2ur^s2;Q!JbK96Y;'![@
%,re77q>jQGK>j$U!PA4EW^:;`3dbIt_[_iSQ-:ak;:MaXY,"-(Lb+-KdZcG5#%:$Qg55tJ40kKOo-P64K]b#nn.m4#M?QkDkZL$3
%/C6FTOV_@)Q6)11#k)kPl3POBAT1VGd"LVpBX,.3-_cbT0KE:99C!k/BHa0FgkhGOX3c[1aqeCt`uALbQ$ike5!7R2d3m2)f31!c
%Ki$sRQs001Qg3MnaN-tQHHRT!/@*"^:k)B/P4=X.o5S(nq_'&%J:I0@_?&=je#.rG83.)C'!o)a$"=Xaj"f4mgJ[-pY3_Qs@9#')
%9ahgk,+B9:@iSDa\5KsV24L5+.E;EO3uK6Cbs+7UB4.:r#s9DeBS&u#@l^PKWB!/DRhe<HT,&Rjb*Kj-#C'Um"jII/XP037S!iWE
%-j5F-O=b^&X&A%W@8`a>b[EtMdjGGr!=]1>'m?7:.ts1(QF[_$;W)ErH[52SC-jpTKU.4p%9XRKk)R"aaSR7j4gWQW)DbC9]79ns
%p"rn7FWeL9+pAT^SCIuhn\OS<0fhh5a3*cN/J[po+VK59,$)+i:MlGObbE3"+9noj<^,-n'i>A0"%6^/?+8gc9h^nK'G`ek57kD7
%\PoSQjNR^HcQGXZ@LI":r$bt)f5n_DP#5)/2hN5WX@L2[QRIWbErGPq,5[C`;X.6`:rF5SOc9\6#uF>U*1^.H9<8:#&Nq#<0u#EI
%>Xd#OMUU0?Ul#MZ:;mJ4@KM(U$liJ=&NKYUe[g+Ybop-3">FOBUk98QI>S($Lc.^fEj2-`!];:(G*6MBeR_kAfsICYX=ZAlMW^#A
%6I,$PG1j`Dk1V1;af#SP=EFPq/,K0R&R)+QBH[EJD@.5Qk=S(6&[5VSATkq3:Ef-m"SM!&:IILRA]R#+gJ.N1XKmL=g.7qV&@c\9
%1!tOCC?;i7Fej)oA'iX?d:#B*#^bD=6PX%:]dhUS6M)rZ^*T&--0R"/ek)kA\QVWZH?Z%](a)7XJ:t!XctF*=Q:Xo&Pa]f$(\:eP
%!ZH`oA2F:^4D9p/)ltM"@0r=oRT-1qPH7a2j-T)#RuL(>W<`m_R\5];/bU&)]C;(Q6AFT7?,@&Z1k_P*?*;+h;_is-jadcMH5CV-
%T#L/sC2[o\.=/32l^&e_Nh)oDI1`M0's4[f4,aB5jtaI1[;ZeAoCc*`XQcXu2[dIPgJc3i`[")\ICB`jmBc/Z5k^.?Db,.t.l-F8
%^:TaM\]Tpn5ic-a<#.``fbEPbrg^&*"0!k=V`^ulR<T7g.%6&d[mpcG82;o"X3M5DFpD\M6/Y>]3E-WW68*G$$m#FmNaOGiG]Ou;
%@NPT2Y,BNi74<SLk@s2ghQp:iqG1*M"iFA>>+E8nT)a+"@aX+e/c+^n)M<I87-?qU(*eX0`O[+D&&r7d_W5RH[A?GAU$eK+1b!i>
%laPlFbt'G03fQd"?8mCEK+#Umcf@AgZ("K0icZgqrE4g1803:PXOaIi%dj0*4mOASo_iS::8e)g.'U<SI]rb*ijot2*5"!WGtXfM
%75te[0]ok[<N-[n>!Ydg`Ao3GQ+M23FA'q[HhO/oV=^MX&htZ@F:"ZbX)7*MZop*s1$UfV7q!`LmIE0oOs+(k2+&8iCVr5F[g]1.
%Tcj%Xo!r?^_9I%BE7$8X<lrOFTVr.DM4%bRV\H"m<",TS(cIG&o0@!/=Ypo5P>:VrgsaunK1CBPn&uU7PeQm,UpPb7gH=)TN2C'0
%>Sp/6TX:u[_c^"p[/i&k;!=iF&"Tc!ir\3J]o!774SdpaU)D!tkIg#k9$I[jYe)8aG>MDKOJB1aDr`?.jP'l'mkE\qMMDn(5>RS*
%2O0QQg+f%hUUHARW'#b)`?S^O4DqN>A^S\A?&%.#Q+!J:E!89+!&@^@LI8_7q%WZPH.MMPR@UZI<tqOfhfanTZd2NdQ5!<#cka(A
%-$&$a?^8F1QIWM<eCfK7<HhaI$6p`KZg)`>7/5DIM`UQg\n]UF5D9dO<Ru\0q-jCLf+:fXagDYb"3a;a7Th<[.F19o!NaTN]NZ\^
%"\8sXiD?-S3Ss784ogs(P:-TA8`?K?DGcN?YXq?<\UcM?@"og[@MBRJ@+@#s7Q<j3/J?*[OZsp5'-bXk+slV;B/NJS*W4IsBe&M2
%.d&7HF$`X[M<Y4[^h7h4q:j)DG]FY?SdY-K5@3:$@E)A9h)(MC*Q`0)&TRp[pq`8X.IA+.a,c0%/"JOao^(_=F[bYc]VC7)&f489
%38%`WX3l\1!6u4;<KPt?ZX>(f4C'sXO::&t.%*Wml9-*h)H\m0,DD/RaC/dTZKu;U&T)X;fHp@Eb$$(`/6'afNl]'0JKFsg@31[u
%KAU8d/K[=pMF3)jB4$VSn*j`Ycm4_#NEG'71&0R%8\go7gu9!FBfo!B\cXl6,aps/nP?,3X`aDoC2=N&D4@9i9h%n8"2S\:06>7@
%9H]HmVFA<gL73AhGS6AIE6Yh%QfqR@rDY<8HuS19o5u>Bmf6)2haIfWLe/=IKA1<X%1u_>(8%ViG-UB'gJ(kZVGVJt^h=q$6J>Z1
%'!@aFi8smAD<TQOm`5*f!QRGR';As-WX@A[l*<-e:lu*aA%.l<CX7nGADXckU1`@D"Db(k7eD#j0BVJ--Ej?F@VoAOTJr1j`L=GA
%\Q?[u2,Et1Gr=d.ros'7lM,u6G+CtV5)rG?ck!N178\g=&:hNVKo:?S1L4dC0Io^iYFEn00aE?N$-%R.QoKTEX.caT3)q)a$\fZl
%1-J'JD]L&%m47Fb9,T.P'ED$eP_@c3n.K^jG'ApS*(Or4LcZRt)Da)qAj:MD>)3GsgdfsbpasohVBD/i629Njj5Y9!Q2fW(Mn9=a
%TP>PGg/oQ$V77Y@<@:oOB?D[o[Id)f[%uq'K3%d=)LS'spNa"T:9+Yo]i8*+[`oNB-Wd0ND2qFo!&,uAF#`t1/lqqo?g3+&9fH(j
%L>Cq(g>R6>LBh#k<G@joGIuVrL97_grBV"h25+oc;CaBr]=c"(YmNNiMI"E*d9Gs(B?G6_J<Dq:#Gb*"VJ>aL<GEjf0^/#c#IgW?
%M?CHWqH_SQ./0U=Yh^fe,=c0aeT4&sf1#rbH7tC$;hj)'XI]W'-nA(0&L`m=4<:#o8L,Z\/ousf@62P'B/s]pEOs4uMTRS8Wn_O;
%8hEM\8q*#R7=#2<puYWmCI6atE`/P_XoSD#-UHq3:RUhH?ji+c6;]c(aZYm9Q#cMqlGQU`4=Kt?jo=R99ke.,#Y=L&8Q2ql_2tQ_
%l6_cXSt6/(Q0(eTZ[2S_M=[L<Q#!a%#coL9<$=:8Mt!1WOu.mHU5nDAQ.q3fEZb5G:teL_8e6C#RGq1"eIda"P_j0jE!^O\gWJ7g
%Lluj5'o^cdo0uT0YV^(KbSYdoSS^iJd'c5b(.B8O_'fP!bYlSc9rG`JT5Yk[^09&B,f=+#rMqDP>USgPX0crGD\S9aVO;PE?^S(A
%S#2F_k)B4>PTo\sjS^`NL#LX&i*^,/<F;0>HA2#V</D0o'<rmVAI7k!(].hp>WdVkP6;?5aOk"CNX.Z@%3++@?g/6?6&A7A3_L91
%p,g`3L*o+"&:0SPX*OhpNn.D.$!%BJ\&nTgIU59omiV;S5&@sHk`L8?\Wod,dMEB5^.KM43EctTq]KamBi#?^6R]*IMLC7;'Lr+\
%-79;oJ:b3="*O->`H+j7SkkFJK52#-JmG*U.0.q=%<TsBYZb*0Uc,5=!7iqeND)8daRg*HGpUs&VR6FuKN9Lkbe^L1_P.i1qNY6?
%HgO8*`dPJ)jg`_7F<*L@D9L]nY'>t2eeb:GU=-_fHP[9b4KGqijCR"9l1P-sSth2ud05)Jc)]G>Q_TBV%jN=<$c<E[S+AY1?0#>f
%TVKI^>pC4A1)G5.?Il+]l@Of0J,-/thN^Neq]Wn%(G-6!Tp%TrA]8sU#Yo@JR8u$73)^u&3ui_mW\X^nnNgM3NE&gV';7jT:hs",
%CJn\['/>+cqLkG<L:6ZbMq3,/D=7jD_Nb"l,Z\0:5o1>gYW25Od?>:WZ#uK-pHead/LMSL"`(!E[a#UuP6*<CF')BiG`&k79-pKc
%eXkp&E7#M@AK(,EoDGKQme,X$1JA6(jFubD1T=3+S6FVOSZbFhnRT'Q%[V)*,E`9d/m9:f8mQS%%qZ-D4Za_'%V2I.Lg8XMc!*]e
%O3e)&0c40K,!=jR8%Ui4&8jbkJbfZcjI*[1H.bX$hXOEbCBGHhZajfZ1^GD0\dls^O)JTCVA;>p9",S=*h6ql?Pj-"6OOH,<Jq4M
%C94G5'&o5U<f\hT\Vj>nkE*;nQKWsn6bq7=&&L_HOt_tJ0M]C5(ppT3pF(I<G_lr.efcmCq]YlVcp<(u!uu&?e*8V>Fh+/[Oi[`g
%>7cH"B]tT6.[stZc$i!CjDW=%h8]NQBJLO=P,Qcq6=)Uq`hT%lA%&sE&7.dnNGR<2DEK28aIHUb-EhhE4t[kr>A<um^"O6_=.')?
%fUXF8&%:%o)biNRi/*4#&0:o7+eS!qSO@&r2?mX_+:9M".e^?J9pBpbZIfk$ST[7Q>2<#'Q3j1.Y\1de)PZOCTh2cX;9cN]aVslV
%rriq)dO#=;pW<ijC%[d6CM>ap]Pg?M2hZF7^pVZk$2_Ve,eMdtI_>A@GlAaf^KJKL;EOEgCFSWMdNqVZiK["O1>nG)b)1kZ:G8`9
%TIF?N]ok;DTi5,c6,eZefdrd'f=/NtJ?qOApjhP%q"8H7TX_:5a*9:\K%gP_&Y.@:X)jIMKL5_lG^m9.hOi*bfb?7n1$6AtmPJW^
%1a73%U)ioW7F3;*1"fK](^4*?(4iYT%RL(!#3[EY%1nBV,6?JRAbeV&M@D+fh@MRI)]]N)J7p,U*++JI:Kko*SU@-iggfm*<*4:6
%[kfr5UnN?RW5-8Y*>"pdq.b(E_(I$t*(QJe`1A^;e[,,BAJ-bfiFRcP&Vm_&Ch%Gd#gC3i2!K)nME?Y#)1YU=a'DdO6:JpVdNf*#
%itD91'Ufc7&;fkMIce7=p&J5hL#q$=afudN=n*W$(NcRuOb;,>8hOb/p_LFR=k4dNTE;LuBi9>4nAPC`*[\B6686.d"^J6DrEMZ6
%bWsb/BhPK[,pGp)cl*OP_%tP[3Y:jPlTeDQ>R140#BT`&kWTqrl24T(c&"lYYmqtp?T@s'MFDokM114)0f/h0dLK`P#*Vg7.=c:3
%/teIEPR`"3WSI_([#&3;KdnIe\,(Wb`WuRjGRt',(,Gs5AsQ1=[#lG4_`-^[9L96Bje/X741A,RASi`[E\$fm/)`;Y6b(XXAF$:Y
%l.35q+:8E:Es;XmmG5d#$V/oa(K!\uiKFR5c%(0'`=J>lTRe\C>Fp8!gP+?9-mskM;oe1gfG+?(DDFKHR&rW*(sl+C>QZ`$i&u1R
%Ac)7&nut@DX!K%skVE-ncH@FB9Ge:>%M@A#GY4"Tj@[7JGq8rqP'esb<CX`bNlZSfOj7'\jZ)7'4P43BDNZF4K&BQamh10+M`Ck]
%U%+-`4TYTDi+^%.;69-Qh'aouE!0T"gbrckc':dT(stJ;BH0G4h</m"(5#oF&Y<Tikfb8E@#g*2P[O]0\Rc)!X[aXgA-s=33pu<]
%+Hpf(Q&2/olsHK"S]3dE[g/%6*Rp<+G[ChM'Gq@TZkM1=aCI&_%nWXRn`(KUZ6qE'U5JTFM!e^Np6:0:V]i#YLgC/6JI7HbM^@<L
%+1JP(i1c`*pB1?+ONA:@q!qK)^di*=Sh'lF,;@VlSQMABd=Ot]Ng?.86j%)b%Qtl7Sk#Wn[la(o_&Rc?]NLMDbaH)?r0]P,?_Jhk
%&[aSqO>U:./d0cH2*mGCKq>:,dHM^O!1OH`ZM!t_X8-T>2'>Q$\Tk;q`2A+[e_g?%n,IJ-n,N$`s7>LLJ,-u(+!+,Fli6PQJ,.!3
%rT!AHchfs)nQ15707WisLHiHKrP/=^^eoUV^\1IlroK2jps["XgE6IbmSEl[hu4]CpsJVa?iTtprqSeWlL4^:Y9"J0~>
%AI9_PrivateDataEnd
